class Attribute{constructor(t,i){this.table=t,this.name=i,this.attr=i,this.weight=0,this.diffEdges=0,this.randomEdges=0,this.sameEdges=0,this.mutable=!0}compareTo(t){return this.weight>t.weight?-1:this.weight<t.weight?1:0}}
class DumbHeuristic{constructor(t){this.g=t}arrange(){for(let t=0;t<this.g.maxDepth;t++){let e=g.edgeIndex[t];e=e.sort((t,e)=>t.compareTo(e));for(let t=0;t<e.length-1;t++){let i=e[t],r=e[t+1];i.leftTable==r.leftTable&&(i.leftAttribute.mutable||r.leftAttribute.mutable)&&(this.swap(i.leftAttribute,r.leftAttribute),(i.rightAttribute.mutable||r.rightAttribute.mutable)&&(i.rightTable==r.rightTable?this.swap(i.rightAttribute,r.rightAttribute):this.swap(i.rightTable,r.rightTable)))}}}swap(t,e){let i=t.weight;t.weight=e.weight,e.weight=i}}
class Edge{constructor(t,e,i,h){this.leftTable=t,this.att1=e,this.leftAttribute=e,this.rightTable=i,this.att2=h,this.rightAttribute=h}compareTo(t){if(this.leftTable==t.leftTable)if(this.rightTable==t.rightTable){if(this.leftAttribute.weight>t.leftAttribute.weight&&this.rightAttribute.weight<t.rightAttribute.weight)return!0;if(this.leftAttribute.weight<t.leftAttribute.weight&&this.rightAttribute.weight>t.rightAttribute.weight)return!0}else{if(this.rightTable.weight<t.rightTable.weight&&this.leftAttribute.weight>t.leftAttribute.weight)return!0;if(this.rightTable.weight>t.rightTable.weight&&this.leftAttribute.weight<t.leftAttribute.weight)return!0}else if(this.rightTable==t.rightTable)if(this.leftTable==t.leftTable){if(this.leftAttribute.weight>t.leftAttribute.weight&&this.rightAttribute.weight<t.rightAttribute.weight)return!0;if(this.leftAttribute.weight<t.leftAttribute.weight&&this.rightAttribute.weight>t.rightAttribute.weight)return!0}else{if(this.leftTable.weight<t.leftTable.weight&&this.rightAttribute.weight>t.rightAttribute.weight)return!0;if(this.leftTable.weight>t.leftTable.weight&&this.rightAttribute.weight<t.rightAttribute.weight)return!0}else{if(this.leftTable.weight<t.leftTable.weight&&this.rightTable.weight>t.rightTable.weight)return!0;if(this.leftTable.weight>t.leftTable.weight&&this.rightTable.weight<t.rightTable.weight)return!0}return!1}compareSelfEdgeTo(t){if(this.leftTable.depth==this.rightTable.depth&&t.leftTable.depth==t.rightTable.depth){if(this.leftTable==t.leftTable)if(this.rightTable==t.rightTable){if(this.leftAttribute.weight<t.leftAttribute.weight&&this.rightAttribute.weight<t.rightAttribute.weight)return!0;if(this.leftAttribute.weight>t.leftAttribute.weight&&this.rightAttribute.weight>t.rightAttribute.weight)return!0}else{if(this.leftAttribute.weight<t.leftAttribute.weight&&this.rightTable.weight<t.rightTable.weight)return!0;if(this.leftAttribute.weight>t.leftAttribute.weight&&this.rightTable.weight>t.rightTable.weight)return!0}else if(this.leftTable==t.rightTable)if(this.rightTable==t.leftTable){if(this.rightAttribute.weight<t.leftAttribute.weight&&this.leftAttribute.weight<t.rightAttribute.weight)return!0;if(this.rightAttribute.weight>t.leftAttribute.weight&&this.leftAttribute.weight>t.rightAttribute.weight)return!0}else{if(this.leftAttribute.weight<t.rightAttribute.weight&&this.rightTable.weight<t.leftTable.weight)return!0;if(this.leftAttribute.weight>t.rightAttribute.weight&&this.rightTable.weight>t.leftTable.weight)return!0}else if(this.rightTable==t.leftTable)if(this.leftTable==t.rightTable){if(this.rightAttribute.weight<t.leftAttribute.weight&&this.leftAttribute.weight<t.rightAttribute.weight)return!0;if(this.rightAttribute.weight>t.leftAttribute.weight&&this.leftAttribute.weight>t.rightAttribute.weight)return!0}else{if(this.rightAttribute.weight<t.leftAttribute.weight&&this.leftTable.weight<t.rightTable.weight)return!0;if(this.rightAttribute.weight>t.leftAttribute.weight&&this.leftTable.weight>t.rightTable.weight)return!0}else if(this.rightTable==t.rightTable)if(this.leftTable==t.leftTable){if(this.leftAttribute.weight<t.leftAttribute.weight&&this.rightAttribute.weight<t.rightAttribute.weight)return!0;if(this.leftAttribute.weight>t.leftAttribute.weight&&this.rightAttribute.weight>t.rightAttribute.weight)return!0}else{if(this.rightAttribute.weight<t.rightAttribute.weight&&this.leftTable.weight<t.leftTable.weight)return!0;if(this.rightAttribute.weight>t.rightAttribute.weight&&this.leftTable.weight>t.leftTable.weight)return!0}}else if(this.leftTable.depth==this.rightTable.depth)if(this.leftTable==t.leftTable){if(this.leftAttribute.weight<t.leftAttribute.weight&&this.rightTable.weight>t.leftTable.weight)return!0;if(this.leftAttribute.weight>t.leftAttribute.weight&&this.rightTable.weight<t.leftTable.weight)return!0}else if(this.rightTable==t.rightTable){if(this.rightAttribute.weight<t.leftAttribute.weight&&this.leftTable.weight>t.leftTable.weight)return!0;if(this.rightAttribute.weight>t.leftAttribute.weight&&this.leftTable.weight<t.leftTable.weight)return!0}else{if(this.leftTable.weight>t.leftTable.weight&&this.rightTable.weight<t.leftTable.weight)return!0;if(this.leftTable.weight<t.leftTable.weight&&this.rightTable.weight>t.leftTable.weight)return!0}else if(t.leftTable==this.leftTable){if(t.leftAttribute.weight<this.leftAttribute.weight&&t.rightTable.weight>this.leftTable.weight)return!0;if(t.leftAttribute.weight>this.leftAttribute.weight&&t.rightTable.weight<this.leftTable.weight)return!0}else if(t.rightTable==this.leftTable){if(t.rightAttribute.weight<this.leftAttribute.weight&&t.leftTable.weight>this.leftTable.weight)return!0;if(t.rightAttribute.weight>this.leftAttribute.weight&&t.leftTable.weight<this.leftTable.weight)return!0}else{if(t.leftTable.weight<this.leftAttribute.weight&&t.rightTable.weight>this.leftAttribute.weight)return!0;if(t.leftTable.weight>this.leftAttribute.weight&&t.rightTable.weight<this.leftAttribute.weight)return!0}}crosses(t){return this.leftTable.depth==this.rightTable.depth||t.leftTable.depth==t.rightTable.depth?this.compareSelfEdgeTo(t):!!this.compareTo(t)}compare(t){if(null==t)return 1;this.compareAttributes(this.leftTable,this.leftAttribute,t.leftTable,t.leftAttribute)}compareAttributes(t,e,i,h){let r=t.compareTo(i);return 0==r&&(r=e.compareTo(h)),r}isSameRankEdge(){return this.leftTable.depth==this.rightTable.depth}}
class Gansner{constructor(t){this.g=t,this.max_iterations=11,this.elapsedTime=0}median(t){return(t=t.sort()).length%2==0?(t[t.length/2]+t[t.length/2-1])/2:t[(t.length-1)/2]}applyArrangement(t){for(let e of t.tables){let t=this.g.tables.find(t=>t.name==e.name);t.weight=e.weight;for(let i of e.attributes){t.attributes.find(t=>t.name==i.name).weight=i.weight}}}arrange(){let t=(new Date).getTime(),e=this.g.getEdgeCrossings();for(let t=0;t<this.max_iterations;t++){let i=_.cloneDeep(this.g);t%2==0?this.arrangeLeft(i):this.arrangeRight(i),this.transpose(i);let a=i.getEdgeCrossings();a<=e&&(this.applyArrangement(i),e=a)}this.elapsedTime=(new Date).getTime()-t}arrangeLeft(t){for(let e=1;e<=t.maxDepth;e++){let i=t.tableIndex[e],a=t.edgeIndex[e-1];for(let t of i){let e=a.filter(e=>e.rightTable==t&&e.leftTable.depth!=e.rightTable.depth).map(t=>parseFloat(t.leftTable.weight));t.weight=this.median(e);for(let e of t.attributes){let i=a.filter(t=>t.rightAttribute==e&&t.leftTable.depth!=t.rightTable.depth).map(t=>parseFloat(t.leftTable.weight)),l=a.filter(t=>t.rightAttribute==e&&t.leftTable.depth!=t.rightTable.depth).map(t=>parseFloat(t.leftAttribute.weight));0!=i.length&&(e.weight=this.median(i)+this.median(l)/t.attributes.length)}}t.setExactWeights()}}arrangeRight(t){for(let e=t.maxDepth-1;e>0;e--){let i=t.tableIndex[e],a=t.edgeIndex[e];for(let t of i){let e=a.filter(e=>e.leftTable==t&&e.leftTable.depth!=e.rightTable.depth).map(t=>parseFloat(t.rightTable.weight));t.weight=this.median(e);for(let e of t.attributes){let i=a.filter(t=>t.leftAttribute==e&&t.leftTable.depth!=t.rightTable.depth).map(t=>parseFloat(t.rightTable.weight)),l=a.filter(t=>t.leftAttribute==e&&t.leftTable.depth!=t.rightTable.depth).map(t=>parseFloat(t.rightAttribute.weight));0!=i.length&&(e.weight=this.median(i)+this.median(l)/t.attributes.length)}}t.setExactWeights()}}transpose(t){let e=!0;for(;e;){e=!1;for(let i=0;i<=t.maxDepth;i++){let a=t.getEdgeCrossingsAtDepth(i),l=t.tableIndex[i];for(let h=0;h<l.length-1;h++){let r=l[h],s=l[h+1];this.swap(r,s),t.getEdgeCrossingsAtDepth(i)+t.getEdgeCrossingsAtDepth(i+1)<a?e=!0:this.swap(r,s)}for(let h of l)for(let l=0;l<h.attributes.length-1;l++){let r=h.attributes[l],s=h.attributes[l+1];this.swap(r,s),t.getEdgeCrossingsAtDepth(i)+t.getEdgeCrossingsAtDepth(i+1)<a?e=!0:this.swap(r,s)}}}}swap(t,e){let i=t.weight;t.weight=e.weight,e.weight=i}}
class GansnerSameRank{constructor(t){this.g=t,this.max_iterations=6,this.elapsedTime=0,this.iterations=[],this.cur_iteration=0}apply_iteration(t){console.log(this.iterations),this.applyArrangement(this.iterations[t])}quicksort(t){if(t.length<=1)return t;for(var e=t[0],i=[],a=[],s=1;s<t.length;s++)t[s]<e?i.push(t[s]):a.push(t[s]);return quicksort(i).concat(e,quicksort(a))}median(t){return(t=t.sort()).length%2==0?(t[t.length/2]+t[t.length/2-1])/2:t[(t.length-1)/2]}applyArrangement(t){for(let e of t.tables){let t=this.g.tables.find(t=>t.name==e.name);t.weight=e.weight,t.assignedWeight=e.assignedWeight;for(let i of e.attributes){let e=t.attributes.find(t=>t.name==i.name);e.weight=i.weight,e.assignedWeight=i.assignedWeight}}}arrange(){let t=(new Date).getTime();this.g.setExactWeights();let e=this.g.getEdgeCrossings();for(let t=0;t<this.max_iterations;t++){this.cur_iteration=t;let i=_.cloneDeep(this.g);t%2==0?this.arrangeLeft(i):this.arrangeRight(i),this.transpose(i);let a=i.getEdgeCrossings();a<=e&&(this.applyArrangement(i),e=a),this.iterations[this.cur_iteration]=_.cloneDeep(i)}this.elapsedTime=(new Date).getTime()-t}arrangeLeft(t){console.log("Left");let e={},i={};for(let a=1;a<=t.maxDepth+1;a++){let s=t.tableIndex[a],r=t.edgeIndex[a-1];for(let t in s){let a=s[t],n=r.filter(t=>t.rightTable==a&&!this.isSameRankEdge(t)).map(t=>parseFloat(t.leftTable.weight)),l=this.median(n);isNaN(l)||(e[a.name]=l),i[a.name]={};for(let t of a.attributes){let e=r.filter(e=>e.rightAttribute==t&&!this.isSameRankEdge(e)).map(t=>parseFloat(t.leftTable.weight)),s=r.filter(e=>e.rightAttribute==t&&!this.isSameRankEdge(e)).map(t=>parseFloat(t.leftAttribute.weight)),n=parseFloat(this.median(e))+parseFloat(this.median(s)/a.attributes.length);isNaN(n)||(i[a.name][t.name]=n)}}}this.reorder(t,e,i)}arrangeRight(t){console.log("Right");let e={},i={};for(let a=t.maxDepth-1;a>0;a--){let s=t.tableIndex[a],r=t.edgeIndex[a];for(let t of s){let a=r.filter(e=>e.leftTable==t).map(t=>parseFloat(t.rightTable.weight)),s=parseFloat(this.median(a));isNaN(s)||(e[t.name]=s),i[t.name]={};for(let e of t.attributes){let a=r.filter(t=>t.leftAttribute==e).map(t=>parseFloat(t.rightTable.weight)),s=r.filter(t=>t.leftAttribute==e).map(t=>parseFloat(t.rightAttribute.weight)),n=parseFloat(this.median(a))+parseFloat(this.median(s)/t.attributes.length);isNaN(n)||(i[t.name][e.name]=n)}}}this.reorder(t,e,i)}isSameRankEdge(t){return t.leftTable.depth==t.rightTable.depth}reorder(t,e,i){for(let a in t.tableIndex)if(0!=a){for(let s in t.tableIndex[a]){let r=t.tableIndex[a][s];if(null!=e[r.name]){r.weight=e[r.name],r.assignedWeight=e[r.name];for(let t in r.attributes){let e=r.attributes[t];e.weight=i[r.name][e.name],e.assignedWeight=i[r.name][e.name]}r.attributes.sort((t,e)=>isNaN(t.weight)||isNaN(e.weight)?0:t.weight>e.weight?1:-1);for(let t in r.attributes){r.attributes[t].weight=t}}}t.tableIndex[a].sort((t,e)=>isNaN(t.weight)||isNaN(e.weight)?0:t.weight>e.weight?1:-1);for(let e in t.tableIndex[a]){t.tableIndex[a][e].weight=e}}}transpose(t){let e=!0;for(;e;){e=!1;for(let i=0;i<=t.maxDepth;i++){let a=t.getEdgeCrossingsAtDepth(i),s=t.tableIndex[i];for(let r=0;r<s.length-1;r++){let n=s[r],l=s[r+1];this.swap(n,l),t.getEdgeCrossingsAtDepth(i)+t.getEdgeCrossingsAtDepth(i+1)<a?e=!0:this.swap(n,l)}for(let r of s)for(let s=0;s<r.attributes.length-1;s++){let n=r.attributes[s],l=r.attributes[s+1];this.swap(n,l),t.getEdgeCrossingsAtDepth(i)+t.getEdgeCrossingsAtDepth(i+1)<a?e=!0:this.swap(n,l)}}}}swap(t,e){let i=t.weight;t.weight=e.weight,e.weight=i}}
class Graph{constructor(t){null==t?(this.edges=[],this.tables=[],this.tableIndex=[],this.edgeIndex=[],this.maxDepth=0,this.newLayer()):t&&Object.assign(this,t)}newLayer(){this.tableIndex.push([]),this.edgeIndex.push([])}addTable(t){for(;this.maxDepth<t.depth;)this.maxDepth+=1,this.newLayer();this.tables.push(t),this.tableIndex[t.depth].push(t)}addEdge(t){this.edges.push(t),this.edgeIndex[t.leftTable.depth].push(t)}ensureUniqueEdges(){}getEdgeCrossings(){let t=0;for(let e in this.edgeIndex)t+=this.getEdgeCrossingsAtDepth(e);return t}getEdgeCrossingsAtDepth(t,e=!1){let s=0,i=this.edgeIndex[t];for(let t in i){let h=i[t];for(let r=parseFloat(t)+1;r<i.length;r++){let t=i[r];h.crosses(t)&&(e&&console.log("Edge "+h.leftAttribute.name+h.rightAttribute.name+" crosses "+t.leftAttribute.name+t.rightAttribute.name),s+=1)}}return s}sortGraph(){for(let t of this.tables)t.main||(t.attributes=t.attributes.sort((t,e)=>t.weight>e.weight?1:-1));this.tables=this.tables.sort((t,e)=>t.weight>e.weight?1:-1)}setExactWeights(){for(let t in this.tableIndex){let e=this.tableIndex[t];e=e.sort((t,e)=>t.weight>e.weight?1:-1);for(let t in e){let s=e[t];s.weight=parseFloat(t);let i=s.attributes;i=i.sort((t,e)=>t.weight>e.weight?1:-1);for(let t in i)i[t].weight=parseFloat(t)}}}}
class GraphGenerator{constructor(t=3,e="hello",r=[2,3],a=[1,5]){this.d=t,this.s=3,this.jd=.1,this.js=.05,this.attributeCounter=0,this.seed=e,this.rng=new Math.seedrandom(this.seed),this.tableDist=()=>r[0]+Math.round(this.rng()*(r[1]-r[0])),this.attrDist=()=>a[0]+Math.round(this.rng()*(a[1]-a[0]))}generate(){g=new Graph;for(var t=1;t<this.d;t++){g.newLayer();for(var e=0;e<this.tableDist();e++)g.addTable(this.generateTable(t,e))}return this.generateProjections(g),this.generateJoins(g),g.ensureUniqueEdges(),g}generateTable(t,e){name="T"+t+"y"+e;for(var r=new Table(name,name,!1,t),a=0;a<this.attrDist();a++)r.addAttribute("a"+this.attributeCounter),this.attributeCounter+=1;return r}generateProjections(t){let e=t.tableIndex[1],r=[],a=new Table("select","SELECT",!0,0),s=[],n=[],i=0;for(let t of e){let e=t.attributes,a=e[Math.floor(this.rng()*e.length)];s.push(a),n.push(a);for(let s of e)s!=a&&r.push(new Attribute(t,s));i++}let o=this.s*(r.length+i);for(t.addTable(a);i<o;i++){let t=Math.floor(this.rng()*r.length);r[t];r.splice(t,1)}for(let e of s){let r=new Attribute(a,"a"+this.attributeCounter++);r.mutable=!1,a.attributes.push(r),t.addEdge(new Edge(a,r,e.table,e))}}generateInterLayerJoins(t){for(var e=1;e<this.d;e++){let r=t.tableIndex[e],a=t.tableIndex[e+1],s=[],n=[];for(let t of r){let e=t.attributes;for(let r of e)s.push(new Attribute(t,r))}for(let e of a){if(0==s.length)break;let r=e.attributes,a=r[Math.floor(this.rng()*r.length)],i=Math.floor(this.rng()*s.length),o=s[i];s.splice(i,1),t.addEdge(new Edge(o.table,o.attr,e,a)),o.diffEdges++,a.diffEdges++;for(let t of r)t!=a&&n.push(new Attribute(e,t))}for(let e of s){if(0==n.length)break;if(this.rng()<this.jd){let r=Math.floor(this.rng()*n.length),a=n[r];n.splice(r,1),t.addEdge(new Edge(e.table,e.attr,a.table,a.attr)),e.diffEdges++,a.diffEdges++}}}}generateInLayerJoins(){for(var t=1;t<this.d;t++){let e=g.tableIndex[t];for(let t of e){let r=[],a=[];for(let e of t.attributes)r.push(new Attribute(t,e));for(let r of e)if(t!=r)for(let t of r.attributes)0==t.sameEdges&&a.push(new Attribute(r,t));for(let t of r){if(0==a.length)break;if(this.rng()<this.js){let e=Math.floor(this.rng()*a.length),r=a[e];a.splice(e,1),g.addEdge(new Edge(t.table,t.attr,r.table,r.attr)),t.sameEdges++,r.sameEdges++}}}}}generateRandomJoins(){}generateJoins(t){this.generateInterLayerJoins(t),this.generateInLayerJoins(t),this.generateRandomJoins(t)}}
class LPFormulation{constructor(e){this.g=e,this.mip=!0,this.verbose=!1,this.elapsedTime=0}async arrange(){let e=(new Date).getTime(),t={};this.fillModel(t);let l,n,i=this.modelToString(t),a={};this.verbose&&glp_set_print_func(console.log);let o=glp_create_prob();glp_read_lp_from_string(o,null,i),glp_scale_prob(o,GLP_SF_AUTO);let s=new SMCP({presolve:GLP_ON});if(glp_simplex(o,s),this.mip)for(glp_intopt(o),l=glp_mip_obj_val(o),n=1;n<=glp_get_num_cols(o);n++)a[glp_get_col_name(o,n)]=glp_mip_col_val(o,n);else for(l=glp_get_obj_val(o),n=1;n<=glp_get_num_cols(o);n++)a[glp_get_col_name(o,n)]=glp_get_col_prim(o,n);this.apply_solution(a),this.elapsedTime=(new Date).getTime()-e}fillModel(e){e.minimize="Minimize \n",e.subjectTo="Subject To \n",e.bounds="\nBounds \n";let t={},l={},n=(e,t,n,i)=>{let a="c_"+e+t+"_"+n+i;return l[a]="",a},i=(e,t,l="")=>"x_"+l+e+"_"+l+t;for(let e=0;e<this.g.maxDepth+1;e++){let l=this.g.tableIndex[e],n=l.map(e=>e.attributes).flat();for(let e=0;e<l.length;e++){let n=l[e].name;for(let a=e+1;a<l.length;a++){let e=l[a].name;t[i(n,e,"T")]=""}}for(let e=0;e<n.length;e++){let l=n[e].name;for(let a=e+1;a<n.length;a++){let e=n[a].name;t[i(l,e)]=""}}}for(let t=0;t<this.g.maxDepth+1;t++){let l=this.g.tableIndex[t],n=l.map(e=>e.attributes).flat();for(let t=0;t<l.length;t++){let n=l[t].name;for(let a=t+1;a<l.length;a++){let t=l[a].name;for(let o=a+1;o<l.length;o++){let a=l[o].name;e.subjectTo+=i(n,t,"T")+" + "+i(t,a,"T")+" - "+i(n,a,"T")+" >= 0\n",e.subjectTo+="- "+i(n,t,"T")+" - "+i(t,a,"T")+" + "+i(n,a,"T")+" >= -1\n"}}}for(let t=0;t<n.length;t++){let l=n[t].name;for(let a=t+1;a<n.length;a++){let o=n[a].name;if(t!=a&&n[t].table.name==n[a].table.name)for(let s=a+1;s<n.length;s++){if(s==a||s==t)continue;if(n[s].table.name!=n[t].table.name)continue;if(n[s].table.name!=n[a].table.name)continue;let m=n[s].name;e.subjectTo+=i(l,o)+" + "+i(o,m)+" - "+i(l,m)+" >= 0\n",e.subjectTo+="- "+i(l,o)+" - "+i(o,m)+" + "+i(l,m)+" >= -1\n"}}}}for(let l=0;l<this.g.maxDepth+1;l++){let a=this.g.edgeIndex[l];for(let l=0;l<a.length;l++){let o=a[l];for(let s=l+1;s<a.length;s++){let l=a[s];if(this.isSameRankEdge(o)||this.isSameRankEdge(l)){if(this.isSameRankEdge(o)&&this.isSameRankEdge(l)){let a=o.leftAttribute.name,s=o.rightAttribute.name,m=l.leftAttribute.name,b=l.rightAttribute.name,u=n(a,s,m,b),r=1;e.subjectTo+=u+"";let _=i(a,m);null!=t[_]?e.subjectTo+=" + "+_:(_=i(m,a),r-=1,e.subjectTo+=" - "+_);let g=i(s,b);null!=t[g]?e.subjectTo+=" + "+g:(r-=1,g=i(b,s),e.subjectTo+=" - "+g);let h=i(m,s);null!=t[h]?e.subjectTo+=h:(r-=1,h=i(s,m),e.subjectTo+=" + "+h),e.subjectTo+=" >= "+r+"\n",u=n(a,s,m,b),r=1,e.subjectTo+=u+"",_=i(a,m),null!=t[_]?e.subjectTo+=" + "+_:(_=i(m,a),r-=1,e.subjectTo+=" - "+_),g=i(s,b),null!=t[g]?e.subjectTo+=" + "+g:(r-=1,g=i(b,s),e.subjectTo+=" - "+g),h=i(b,a),null!=t[h]?e.subjectTo+=h:(r-=1,h=i(a,b),e.subjectTo+=" + "+h),e.subjectTo+=" >= "+r+"\n"}else if(this.isSameRankEdge(o)&&!this.isSameRankEdge(l)){let a=o.leftAttribute.name,s=o.rightAttribute.name,m=l.leftAttribute.name,b=l.rightAttribute.name,u=n(a,s,m,b),r=1;e.subjectTo+=u+"";let _=i(m,a);null!=t[_]?e.subjectTo+=" + "+_:(_=i(a,m),r-=1,e.subjectTo+=" - "+_);let g=i(s,m);null!=t[g]?e.subjectTo+=" + "+g:(r-=1,g=i(m,s),e.subjectTo+=" - "+g),e.subjectTo+=" >= "+r+"\n",u=n(a,s,m,b),r=1,e.subjectTo+=u+"",_=i(m,s),null!=t[_]?e.subjectTo+=" + "+_:(_=i(s,m),r-=1,e.subjectTo+=" - "+_),g=i(a,m),null!=t[g]?e.subjectTo+=" + "+g:(r-=1,g=i(m,a),e.subjectTo+=" - "+g),e.subjectTo+=" >= "+r+"\n"}else if(!this.isSameRankEdge(o)&&this.isSameRankEdge(l)){let a=o.leftAttribute.name,s=o.rightAttribute.name,m=l.leftAttribute.name,b=l.rightAttribute.name,u=n(a,s,m,b),r=1;e.subjectTo+=u+"";let _=i(a,m);null!=t[_]?e.subjectTo+=" + "+_:(_=i(m,a),r-=1,e.subjectTo+=" - "+_);let g=i(b,a);null!=t[g]?e.subjectTo+=" + "+g:(r-=1,g=i(a,b),e.subjectTo+=" - "+g),e.subjectTo+=" >= "+r+"\n",u=n(a,s,m,b),r=1,e.subjectTo+=u+"",_=i(a,b),null!=t[_]?e.subjectTo+=" + "+_:(_=i(b,a),r-=1,e.subjectTo+=" - "+_),g=i(m,a),null!=t[g]?e.subjectTo+=" + "+g:(r-=1,g=i(a,m),e.subjectTo+=" - "+g),e.subjectTo+=" >= "+r+"\n"}}else{let a=o.leftAttribute.name,s=o.rightAttribute.name,m=l.leftAttribute.name,b=l.rightAttribute.name;if(a==m||s==b)continue;let u=n(a,s,m,b),r=1;e.subjectTo+=u+"";let _=i(m,a);null!=t[_]?e.subjectTo+=" + "+_:(_=i(a,m),r-=1,e.subjectTo+=" - "+_);let g=i(s,b);null!=t[g]?e.subjectTo+=" + "+g:(g=i(b,s),r-=1,e.subjectTo+=" - "+g),e.subjectTo+=" >= "+r+"\n",u=n(a,s,m,b),r=1,e.subjectTo+=u+"",_=i(a,m),null!=t[_]?e.subjectTo+=" + "+_:(_=i(m,a),r-=1,e.subjectTo+=" - "+_),g=i(b,s),null!=t[g]?e.subjectTo+=" + "+g:(g=i(s,b),r-=1,e.subjectTo+=" - "+g),e.subjectTo+=" >= "+r+"\n"}}}}for(let t=0;t<this.g.maxDepth+1;t++){let l=this.g.tableIndex[t].map(e=>e.attributes).flat();for(let t=0;t<l.length;t++){let n=l[t].name,a=l[t].table.name;for(let o=t+1;o<l.length;o++){let t=l[o].name,s=l[o].table.name;a!=s&&(e.subjectTo+=i(n,t)+" - "+i(a,s,"T")+" = 0\n")}}}for(let t in l)e.minimize+=t+" + ";e.minimize=e.minimize.substring(0,e.minimize.length-2)+"\n\n";for(let l in t)e.bounds+="binary "+l+"\n"}fillModel2(e){e.minimize="Minimize \ncrossings: ",e.subjectTo="Subject To \n",e.bounds="\nBounds \n";for(let t=0;t<this.g.maxDepth+1;t++){let l=this.g.edgeIndex[t];for(let t=0;t<l.length;t++)for(let n=0;n<l.length;n++)if(l[t]!=l[n]){let i="c_"+l[t].leftAttribute.name+l[t].rightAttribute.name+"_"+l[n].leftAttribute.name+l[n].rightAttribute.name;e.minimize+=i+" + ",e.bounds+="binary "+i+"\n"}}e.minimize=e.minimize.substring(0,e.minimize.length-2)+"\n\n";for(let t=0;t<this.g.maxDepth+1;t++){let l=this.g.tableIndex[t];for(let t=0;t<l.length;t++){let n=l[t];for(let i=0;i<l.length;i++){if(t==i)continue;let a=l[i];n!=a&&(e.subjectTo+="x_T"+n.name+"_T"+a.name+" + x_T"+a.name+"_T"+n.name+" = 1\n",e.bounds+="binary x_T"+n.name+"_T"+a.name+"\n")}}}for(let t=0;t<this.g.maxDepth+1;t++){let l=this.g.tableIndex[t];for(let t=0;t<l.length;t++){let n=l[t];for(let i=0;i<l.length;i++){if(t==i)continue;let a=l[i];for(let t=i+1;t<l.length;t++){let i=l[t];e.subjectTo+="x_T"+i.name+"_T"+n.name+" - x_T"+i.name+"_T"+a.name+" - x_T"+a.name+"_T"+n.name+" >= - 1\n"}}}}for(let t=0;t<this.g.maxDepth+1;t++){let l=this.g.tableIndex[t].map(e=>e.attributes).flat();for(let t=0;t<l.length;t++){let n=l[t];for(let i=t+1;i<l.length;i++){let t=l[i];n!=t&&(e.subjectTo+="x_"+n.name+"_"+t.name+" + x_"+t.name+"_"+n.name+" = 1\n")}}}for(let t=0;t<this.g.maxDepth+1;t++){let l=this.g.tableIndex[t].map(e=>e.attributes).flat();for(let t of l)for(let n of l)t.table!=n.table&&(e.subjectTo+="x_"+t.name+"_"+n.name+" - x_T"+t.table.name+"_T"+n.table.name+" = 0\n")}for(let t=0;t<this.g.maxDepth+1;t++){let l=this.g.tableIndex[t].map(e=>e.attributes).flat();for(let t=0;t<l.length;t++){let n=l[t];for(let i=0;i<l.length;i++){let a=l[i];if(t!=i)for(let o=0;o<l.length;o++){if(o==t||o==i)continue;let s=l[o];e.subjectTo+="x_"+s.name+"_"+n.name+" - x_"+s.name+"_"+a.name+" - x_"+a.name+"_"+n.name+" >= - 1\n"}}}}for(let t=0;t<this.g.maxDepth;t++){let l=this.g.edgeIndex[t];for(let t=0;t<l.length;t++){let n=l[t];for(let i=0;i<l.length;i++){if(t==i)continue;let a=l[i];if(n.leftTable.depth==n.rightTable.depth||a.leftTable.depth==a.rightTable.depth)continue;let o=n.leftAttribute.name,s=n.rightAttribute.name,m=a.leftAttribute.name,b=a.rightAttribute.name;e.subjectTo+="c_"+o+s+"_"+m+b+" + x_"+m+"_"+o+" + x_"+s+"_"+b+" >= 1\n",e.subjectTo+="c_"+o+s+"_"+m+b+" + x_"+o+"_"+m+" + x_"+b+"_"+s+" >= 1\n"}}}for(let t=0;t<this.g.maxDepth+1;t++){let l=this.g.edgeIndex[t];for(let t=0;t<l.length;t++){let n=l[t];for(let t=0;t<l.length;t++){let i=l[t];if(n!=i)if(n.leftTable.depth==n.rightTable.depth&&i.leftTable.depth==i.rightTable.depth){let t=n.leftAttribute.name,l=n.rightAttribute.name,a=i.leftAttribute.name,o=i.rightAttribute.name;e.subjectTo+="c_"+t+l+"_"+a+o+" + x_"+t+"_"+a+" + x_"+l+"_"+o+" + x_"+a+"_"+l+" >= 1\n",e.subjectTo+="c_"+t+l+"_"+a+o+" + x_"+t+"_"+a+" + x_"+l+"_"+o+" + x_"+o+"_"+t+" >= 1\n"}else if(this.isSameRankEdge(n)&&!this.isSameRankEdge(i)){let t=n.leftAttribute.name,l=n.rightAttribute.name,a=i.leftAttribute.name,o=i.rightAttribute.name;e.subjectTo+="c_"+t+l+"_"+a+o+" + x_"+a+"_"+t+" + x_"+l+"_"+a+" >= 1\n",e.subjectTo+="c_"+t+l+"_"+a+o+" + x_"+a+"_"+l+" + x_"+t+"_"+a+" >= 1\n"}}}}}isSameRankEdge(e){return e.leftTable.depth==e.rightTable.depth}modelToString(e){return e.minimize+e.subjectTo+e.bounds+"\nEnd\n"}apply_solution(e){for(let t=0;t<this.g.maxDepth+1;t++){let l=this.g.tableIndex[t];l.sort((t,l)=>0==e["x_T"+t.name+"_T"+l.name]?1:1==e["x_T"+t.name+"_T"+l.name]?-1:1==e["x_T"+l.name+"_T"+t.name]?1:0==e["x_T"+l.name+"_T"+t.name]?-1:void 0);for(let e in l)l[e].weight=e;for(let t of l){t.attributes.sort((t,l)=>0==e["x_"+t.name+"_"+l.name]?1:1==e["x_"+t.name+"_"+l.name]?-1:1==e["x_"+l.name+"_"+t.name]?1:0==e["x_"+l.name+"_"+t.name]?-1:void 0);for(let e=0;e<t.attributes.length;e++)t.attributes[e].weight=e}}}}
class Sweep{constructor(t){this.g=t,this.elapsedTime=0}arrange(){let t=(new Date).getTime();this.g.setExactWeights(),this.sweepRight(),this.sweepLeft(),this.elapsedTime=(new Date).getTime()-t}sweepRight(){for(let t=1;t<=this.g.maxDepth;t++){let e,s,g=this.g.tableIndex[t];do{e=this.g.getEdgeCrossingsAtDepth(t-1)+this.g.getEdgeCrossingsAtDepth(t),s=e;do{e=this.g.getEdgeCrossingsAtDepth(t-1)+this.g.getEdgeCrossingsAtDepth(t),s=e;for(let e=0;e<g.length-1;e++){let h=g[e],i=g[e+1];this.swap(h,i);let l=this.g.getEdgeCrossingsAtDepth(t-1)+this.g.getEdgeCrossingsAtDepth(t);s>l?(s=l,g[e]=i,g[e+1]=h):this.swap(h,i)}}while(e>s);do{e=this.g.getEdgeCrossingsAtDepth(t-1)+this.g.getEdgeCrossingsAtDepth(t),s=e;for(let e=0;e<g.length;e++){let h=g[e].attributes;for(let e=0;e<h.length-1;e++){let g=h[e],i=h[e+1];this.swap(g,i);let l=this.g.getEdgeCrossingsAtDepth(t-1)+this.g.getEdgeCrossingsAtDepth(t);s>l?(s=l,h[e]=i,h[e+1]=g):this.swap(g,i)}}}while(e>s)}while(e>s)}}sweepLeft(){for(let t=this.g.maxDepth;t>=2;t--){let e,s,g=this.g.tableIndex[t-1];do{e=this.g.getEdgeCrossingsAtDepth(t-1)+this.g.getEdgeCrossingsAtDepth(t-2),s=e;do{e=this.g.getEdgeCrossingsAtDepth(t-1)+this.g.getEdgeCrossingsAtDepth(t-2),s=e;for(let e=0;e<g.length-1;e++){let h=g[e],i=g[e+1];this.swap(h,i);let l=this.g.getEdgeCrossingsAtDepth(t-1)+this.g.getEdgeCrossingsAtDepth(t-2);s>l?(s=l,g[e]=i,g[e+1]=h):this.swap(h,i)}}while(e>s);do{e=this.g.getEdgeCrossingsAtDepth(t-1)+this.g.getEdgeCrossingsAtDepth(t-2),s=e;for(let e=0;e<g.length;e++){let h=g[e].attributes;for(let e=0;e<h.length-1;e++){let g=h[e],i=h[e+1];this.swap(g,i);let l=this.g.getEdgeCrossingsAtDepth(t-1)+this.g.getEdgeCrossingsAtDepth(t-2);s>l?(s=l,h[e]=i,h[e+1]=g):this.swap(g,i)}}}while(e>s)}while(e>s)}}swap(t,e){let s=t.weight;t.weight=e.weight,e.weight=s}}
class Table{constructor(t,h,i,e){this.name=t,this.header=h,this.main=i,this.depth=e,this.attributes=[],this.attrMaps=[],this.weight=0}addAttribute(t){this.attributes.push(new Attribute(this,t))}compareTo(t){return this.depth>t.depth?-1:this.depth<t.depth||this.weight<t.weight?1:this.weight>t.weight?-1:0}}
/**
 * @license
 * Lodash <https://lodash.com/>
 * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */
(function(){var n="Expected a function",t="__lodash_placeholder__",r=[["ary",128],["bind",1],["bindKey",2],["curry",8],["curryRight",16],["flip",512],["partial",32],["partialRight",64],["rearg",256]],e="[object Arguments]",u="[object Array]",i="[object Boolean]",o="[object Date]",f="[object Error]",a="[object Function]",c="[object GeneratorFunction]",l="[object Map]",v="[object Number]",s="[object Object]",h="[object RegExp]",p="[object Set]",_="[object String]",d="[object Symbol]",g="[object WeakMap]",y="[object ArrayBuffer]",b="[object DataView]",w="[object Float32Array]",m="[object Float64Array]",x="[object Int8Array]",j="[object Int16Array]",A="[object Int32Array]",k="[object Uint8Array]",O="[object Uint16Array]",I="[object Uint32Array]",R=/\b__p \+= '';/g,E=/\b(__p \+=) '' \+/g,z=/(__e\(.*?\)|\b__t\)) \+\n'';/g,S=/&(?:amp|lt|gt|quot|#39);/g,L=/[&<>"']/g,C=RegExp(S.source),W=RegExp(L.source),U=/<%-([\s\S]+?)%>/g,B=/<%([\s\S]+?)%>/g,T=/<%=([\s\S]+?)%>/g,$=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,D=/^\w*$/,N=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,M=/[\\^$.*+?()[\]{}|]/g,F=RegExp(M.source),P=/^\s+|\s+$/g,q=/^\s+/,Z=/\s+$/,K=/\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,V=/\{\n\/\* \[wrapped with (.+)\] \*/,G=/,? & /,H=/[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g,J=/\\(\\)?/g,Y=/\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g,Q=/\w*$/,X=/^[-+]0x[0-9a-f]+$/i,nn=/^0b[01]+$/i,tn=/^\[object .+?Constructor\]$/,rn=/^0o[0-7]+$/i,en=/^(?:0|[1-9]\d*)$/,un=/[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g,on=/($^)/,fn=/['\n\r\u2028\u2029\\]/g,an="\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff",cn="\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000",ln="[\\ud800-\\udfff]",vn="["+cn+"]",sn="["+an+"]",hn="\\d+",pn="[\\u2700-\\u27bf]",_n="[a-z\\xdf-\\xf6\\xf8-\\xff]",dn="[^\\ud800-\\udfff"+cn+hn+"\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde]",gn="\\ud83c[\\udffb-\\udfff]",yn="[^\\ud800-\\udfff]",bn="(?:\\ud83c[\\udde6-\\uddff]){2}",wn="[\\ud800-\\udbff][\\udc00-\\udfff]",mn="[A-Z\\xc0-\\xd6\\xd8-\\xde]",xn="(?:"+_n+"|"+dn+")",jn="(?:"+mn+"|"+dn+")",An="(?:"+sn+"|"+gn+")"+"?",kn="[\\ufe0e\\ufe0f]?"+An+("(?:\\u200d(?:"+[yn,bn,wn].join("|")+")[\\ufe0e\\ufe0f]?"+An+")*"),On="(?:"+[pn,bn,wn].join("|")+")"+kn,In="(?:"+[yn+sn+"?",sn,bn,wn,ln].join("|")+")",Rn=RegExp("['’]","g"),En=RegExp(sn,"g"),zn=RegExp(gn+"(?="+gn+")|"+In+kn,"g"),Sn=RegExp([mn+"?"+_n+"+(?:['’](?:d|ll|m|re|s|t|ve))?(?="+[vn,mn,"$"].join("|")+")",jn+"+(?:['’](?:D|LL|M|RE|S|T|VE))?(?="+[vn,mn+xn,"$"].join("|")+")",mn+"?"+xn+"+(?:['’](?:d|ll|m|re|s|t|ve))?",mn+"+(?:['’](?:D|LL|M|RE|S|T|VE))?","\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])","\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])",hn,On].join("|"),"g"),Ln=RegExp("[\\u200d\\ud800-\\udfff"+an+"\\ufe0e\\ufe0f]"),Cn=/[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,Wn=["Array","Buffer","DataView","Date","Error","Float32Array","Float64Array","Function","Int8Array","Int16Array","Int32Array","Map","Math","Object","Promise","RegExp","Set","String","Symbol","TypeError","Uint8Array","Uint8ClampedArray","Uint16Array","Uint32Array","WeakMap","_","clearTimeout","isFinite","parseInt","setTimeout"],Un=-1,Bn={};Bn[w]=Bn[m]=Bn[x]=Bn[j]=Bn[A]=Bn[k]=Bn["[object Uint8ClampedArray]"]=Bn[O]=Bn[I]=!0,Bn[e]=Bn[u]=Bn[y]=Bn[i]=Bn[b]=Bn[o]=Bn[f]=Bn[a]=Bn[l]=Bn[v]=Bn[s]=Bn[h]=Bn[p]=Bn[_]=Bn[g]=!1;var Tn={};Tn[e]=Tn[u]=Tn[y]=Tn[b]=Tn[i]=Tn[o]=Tn[w]=Tn[m]=Tn[x]=Tn[j]=Tn[A]=Tn[l]=Tn[v]=Tn[s]=Tn[h]=Tn[p]=Tn[_]=Tn[d]=Tn[k]=Tn["[object Uint8ClampedArray]"]=Tn[O]=Tn[I]=!0,Tn[f]=Tn[a]=Tn[g]=!1;var $n={"\\":"\\","'":"'","\n":"n","\r":"r","\u2028":"u2028","\u2029":"u2029"},Dn=parseFloat,Nn=parseInt,Mn="object"==typeof global&&global&&global.Object===Object&&global,Fn="object"==typeof self&&self&&self.Object===Object&&self,Pn=Mn||Fn||Function("return this")(),qn="object"==typeof exports&&exports&&!exports.nodeType&&exports,Zn=qn&&"object"==typeof module&&module&&!module.nodeType&&module,Kn=Zn&&Zn.exports===qn,Vn=Kn&&Mn.process,Gn=function(){try{var n=Zn&&Zn.require&&Zn.require("util").types;return n||Vn&&Vn.binding&&Vn.binding("util")}catch(n){}}(),Hn=Gn&&Gn.isArrayBuffer,Jn=Gn&&Gn.isDate,Yn=Gn&&Gn.isMap,Qn=Gn&&Gn.isRegExp,Xn=Gn&&Gn.isSet,nt=Gn&&Gn.isTypedArray;function tt(n,t,r){switch(r.length){case 0:return n.call(t);case 1:return n.call(t,r[0]);case 2:return n.call(t,r[0],r[1]);case 3:return n.call(t,r[0],r[1],r[2])}return n.apply(t,r)}function rt(n,t,r,e){for(var u=-1,i=null==n?0:n.length;++u<i;){var o=n[u];t(e,o,r(o),n)}return e}function et(n,t){for(var r=-1,e=null==n?0:n.length;++r<e&&!1!==t(n[r],r,n););return n}function ut(n,t){for(var r=null==n?0:n.length;r--&&!1!==t(n[r],r,n););return n}function it(n,t){for(var r=-1,e=null==n?0:n.length;++r<e;)if(!t(n[r],r,n))return!1;return!0}function ot(n,t){for(var r=-1,e=null==n?0:n.length,u=0,i=[];++r<e;){var o=n[r];t(o,r,n)&&(i[u++]=o)}return i}function ft(n,t){return!!(null==n?0:n.length)&&gt(n,t,0)>-1}function at(n,t,r){for(var e=-1,u=null==n?0:n.length;++e<u;)if(r(t,n[e]))return!0;return!1}function ct(n,t){for(var r=-1,e=null==n?0:n.length,u=Array(e);++r<e;)u[r]=t(n[r],r,n);return u}function lt(n,t){for(var r=-1,e=t.length,u=n.length;++r<e;)n[u+r]=t[r];return n}function vt(n,t,r,e){var u=-1,i=null==n?0:n.length;for(e&&i&&(r=n[++u]);++u<i;)r=t(r,n[u],u,n);return r}function st(n,t,r,e){var u=null==n?0:n.length;for(e&&u&&(r=n[--u]);u--;)r=t(r,n[u],u,n);return r}function ht(n,t){for(var r=-1,e=null==n?0:n.length;++r<e;)if(t(n[r],r,n))return!0;return!1}var pt=mt("length");function _t(n,t,r){var e;return r(n,(function(n,r,u){if(t(n,r,u))return e=r,!1})),e}function dt(n,t,r,e){for(var u=n.length,i=r+(e?1:-1);e?i--:++i<u;)if(t(n[i],i,n))return i;return-1}function gt(n,t,r){return t==t?function(n,t,r){var e=r-1,u=n.length;for(;++e<u;)if(n[e]===t)return e;return-1}(n,t,r):dt(n,bt,r)}function yt(n,t,r,e){for(var u=r-1,i=n.length;++u<i;)if(e(n[u],t))return u;return-1}function bt(n){return n!=n}function wt(n,t){var r=null==n?0:n.length;return r?At(n,t)/r:NaN}function mt(n){return function(t){return null==t?void 0:t[n]}}function xt(n){return function(t){return null==n?void 0:n[t]}}function jt(n,t,r,e,u){return u(n,(function(n,u,i){r=e?(e=!1,n):t(r,n,u,i)})),r}function At(n,t){for(var r,e=-1,u=n.length;++e<u;){var i=t(n[e]);void 0!==i&&(r=void 0===r?i:r+i)}return r}function kt(n,t){for(var r=-1,e=Array(n);++r<n;)e[r]=t(r);return e}function Ot(n){return function(t){return n(t)}}function It(n,t){return ct(t,(function(t){return n[t]}))}function Rt(n,t){return n.has(t)}function Et(n,t){for(var r=-1,e=n.length;++r<e&&gt(t,n[r],0)>-1;);return r}function zt(n,t){for(var r=n.length;r--&&gt(t,n[r],0)>-1;);return r}function St(n,t){for(var r=n.length,e=0;r--;)n[r]===t&&++e;return e}var Lt=xt({"À":"A","Á":"A","Â":"A","Ã":"A","Ä":"A","Å":"A","à":"a","á":"a","â":"a","ã":"a","ä":"a","å":"a","Ç":"C","ç":"c","Ð":"D","ð":"d","È":"E","É":"E","Ê":"E","Ë":"E","è":"e","é":"e","ê":"e","ë":"e","Ì":"I","Í":"I","Î":"I","Ï":"I","ì":"i","í":"i","î":"i","ï":"i","Ñ":"N","ñ":"n","Ò":"O","Ó":"O","Ô":"O","Õ":"O","Ö":"O","Ø":"O","ò":"o","ó":"o","ô":"o","õ":"o","ö":"o","ø":"o","Ù":"U","Ú":"U","Û":"U","Ü":"U","ù":"u","ú":"u","û":"u","ü":"u","Ý":"Y","ý":"y","ÿ":"y","Æ":"Ae","æ":"ae","Þ":"Th","þ":"th","ß":"ss","Ā":"A","Ă":"A","Ą":"A","ā":"a","ă":"a","ą":"a","Ć":"C","Ĉ":"C","Ċ":"C","Č":"C","ć":"c","ĉ":"c","ċ":"c","č":"c","Ď":"D","Đ":"D","ď":"d","đ":"d","Ē":"E","Ĕ":"E","Ė":"E","Ę":"E","Ě":"E","ē":"e","ĕ":"e","ė":"e","ę":"e","ě":"e","Ĝ":"G","Ğ":"G","Ġ":"G","Ģ":"G","ĝ":"g","ğ":"g","ġ":"g","ģ":"g","Ĥ":"H","Ħ":"H","ĥ":"h","ħ":"h","Ĩ":"I","Ī":"I","Ĭ":"I","Į":"I","İ":"I","ĩ":"i","ī":"i","ĭ":"i","į":"i","ı":"i","Ĵ":"J","ĵ":"j","Ķ":"K","ķ":"k","ĸ":"k","Ĺ":"L","Ļ":"L","Ľ":"L","Ŀ":"L","Ł":"L","ĺ":"l","ļ":"l","ľ":"l","ŀ":"l","ł":"l","Ń":"N","Ņ":"N","Ň":"N","Ŋ":"N","ń":"n","ņ":"n","ň":"n","ŋ":"n","Ō":"O","Ŏ":"O","Ő":"O","ō":"o","ŏ":"o","ő":"o","Ŕ":"R","Ŗ":"R","Ř":"R","ŕ":"r","ŗ":"r","ř":"r","Ś":"S","Ŝ":"S","Ş":"S","Š":"S","ś":"s","ŝ":"s","ş":"s","š":"s","Ţ":"T","Ť":"T","Ŧ":"T","ţ":"t","ť":"t","ŧ":"t","Ũ":"U","Ū":"U","Ŭ":"U","Ů":"U","Ű":"U","Ų":"U","ũ":"u","ū":"u","ŭ":"u","ů":"u","ű":"u","ų":"u","Ŵ":"W","ŵ":"w","Ŷ":"Y","ŷ":"y","Ÿ":"Y","Ź":"Z","Ż":"Z","Ž":"Z","ź":"z","ż":"z","ž":"z","Ĳ":"IJ","ĳ":"ij","Œ":"Oe","œ":"oe","ŉ":"'n","ſ":"s"}),Ct=xt({"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"});function Wt(n){return"\\"+$n[n]}function Ut(n){return Ln.test(n)}function Bt(n){var t=-1,r=Array(n.size);return n.forEach((function(n,e){r[++t]=[e,n]})),r}function Tt(n,t){return function(r){return n(t(r))}}function $t(n,r){for(var e=-1,u=n.length,i=0,o=[];++e<u;){var f=n[e];f!==r&&f!==t||(n[e]=t,o[i++]=e)}return o}function Dt(n){var t=-1,r=Array(n.size);return n.forEach((function(n){r[++t]=n})),r}function Nt(n){var t=-1,r=Array(n.size);return n.forEach((function(n){r[++t]=[n,n]})),r}function Mt(n){return Ut(n)?function(n){var t=zn.lastIndex=0;for(;zn.test(n);)++t;return t}(n):pt(n)}function Ft(n){return Ut(n)?function(n){return n.match(zn)||[]}(n):function(n){return n.split("")}(n)}var Pt=xt({"&amp;":"&","&lt;":"<","&gt;":">","&quot;":'"',"&#39;":"'"});var qt=function an(cn){var ln,vn=(cn=null==cn?Pn:qt.defaults(Pn.Object(),cn,qt.pick(Pn,Wn))).Array,sn=cn.Date,hn=cn.Error,pn=cn.Function,_n=cn.Math,dn=cn.Object,gn=cn.RegExp,yn=cn.String,bn=cn.TypeError,wn=vn.prototype,mn=pn.prototype,xn=dn.prototype,jn=cn["__core-js_shared__"],An=mn.toString,kn=xn.hasOwnProperty,On=0,In=(ln=/[^.]+$/.exec(jn&&jn.keys&&jn.keys.IE_PROTO||""))?"Symbol(src)_1."+ln:"",zn=xn.toString,Ln=An.call(dn),$n=Pn._,Mn=gn("^"+An.call(kn).replace(M,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),Fn=Kn?cn.Buffer:void 0,qn=cn.Symbol,Zn=cn.Uint8Array,Vn=Fn?Fn.allocUnsafe:void 0,Gn=Tt(dn.getPrototypeOf,dn),pt=dn.create,xt=xn.propertyIsEnumerable,Zt=wn.splice,Kt=qn?qn.isConcatSpreadable:void 0,Vt=qn?qn.iterator:void 0,Gt=qn?qn.toStringTag:void 0,Ht=function(){try{var n=Xu(dn,"defineProperty");return n({},"",{}),n}catch(n){}}(),Jt=cn.clearTimeout!==Pn.clearTimeout&&cn.clearTimeout,Yt=sn&&sn.now!==Pn.Date.now&&sn.now,Qt=cn.setTimeout!==Pn.setTimeout&&cn.setTimeout,Xt=_n.ceil,nr=_n.floor,tr=dn.getOwnPropertySymbols,rr=Fn?Fn.isBuffer:void 0,er=cn.isFinite,ur=wn.join,ir=Tt(dn.keys,dn),or=_n.max,fr=_n.min,ar=sn.now,cr=cn.parseInt,lr=_n.random,vr=wn.reverse,sr=Xu(cn,"DataView"),hr=Xu(cn,"Map"),pr=Xu(cn,"Promise"),_r=Xu(cn,"Set"),dr=Xu(cn,"WeakMap"),gr=Xu(dn,"create"),yr=dr&&new dr,br={},wr=Oi(sr),mr=Oi(hr),xr=Oi(pr),jr=Oi(_r),Ar=Oi(dr),kr=qn?qn.prototype:void 0,Or=kr?kr.valueOf:void 0,Ir=kr?kr.toString:void 0;function Rr(n){if(qo(n)&&!Co(n)&&!(n instanceof Lr)){if(n instanceof Sr)return n;if(kn.call(n,"__wrapped__"))return Ii(n)}return new Sr(n)}var Er=function(){function n(){}return function(t){if(!Po(t))return{};if(pt)return pt(t);n.prototype=t;var r=new n;return n.prototype=void 0,r}}();function zr(){}function Sr(n,t){this.__wrapped__=n,this.__actions__=[],this.__chain__=!!t,this.__index__=0,this.__values__=void 0}function Lr(n){this.__wrapped__=n,this.__actions__=[],this.__dir__=1,this.__filtered__=!1,this.__iteratees__=[],this.__takeCount__=4294967295,this.__views__=[]}function Cr(n){var t=-1,r=null==n?0:n.length;for(this.clear();++t<r;){var e=n[t];this.set(e[0],e[1])}}function Wr(n){var t=-1,r=null==n?0:n.length;for(this.clear();++t<r;){var e=n[t];this.set(e[0],e[1])}}function Ur(n){var t=-1,r=null==n?0:n.length;for(this.clear();++t<r;){var e=n[t];this.set(e[0],e[1])}}function Br(n){var t=-1,r=null==n?0:n.length;for(this.__data__=new Ur;++t<r;)this.add(n[t])}function Tr(n){var t=this.__data__=new Wr(n);this.size=t.size}function $r(n,t){var r=Co(n),e=!r&&Lo(n),u=!r&&!e&&To(n),i=!r&&!e&&!u&&Qo(n),o=r||e||u||i,f=o?kt(n.length,yn):[],a=f.length;for(var c in n)!t&&!kn.call(n,c)||o&&("length"==c||u&&("offset"==c||"parent"==c)||i&&("buffer"==c||"byteLength"==c||"byteOffset"==c)||oi(c,a))||f.push(c);return f}function Dr(n){var t=n.length;return t?n[Be(0,t-1)]:void 0}function Nr(n,t){return ji(gu(n),Hr(t,0,n.length))}function Mr(n){return ji(gu(n))}function Fr(n,t,r){(void 0!==r&&!Eo(n[t],r)||void 0===r&&!(t in n))&&Vr(n,t,r)}function Pr(n,t,r){var e=n[t];kn.call(n,t)&&Eo(e,r)&&(void 0!==r||t in n)||Vr(n,t,r)}function qr(n,t){for(var r=n.length;r--;)if(Eo(n[r][0],t))return r;return-1}function Zr(n,t,r,e){return ne(n,(function(n,u,i){t(e,n,r(n),i)})),e}function Kr(n,t){return n&&yu(t,mf(t),n)}function Vr(n,t,r){"__proto__"==t&&Ht?Ht(n,t,{configurable:!0,enumerable:!0,value:r,writable:!0}):n[t]=r}function Gr(n,t){for(var r=-1,e=t.length,u=vn(e),i=null==n;++r<e;)u[r]=i?void 0:df(n,t[r]);return u}function Hr(n,t,r){return n==n&&(void 0!==r&&(n=n<=r?n:r),void 0!==t&&(n=n>=t?n:t)),n}function Jr(n,t,r,u,f,g){var R,E=1&t,z=2&t,S=4&t;if(r&&(R=f?r(n,u,f,g):r(n)),void 0!==R)return R;if(!Po(n))return n;var L=Co(n);if(L){if(R=function(n){var t=n.length,r=new n.constructor(t);t&&"string"==typeof n[0]&&kn.call(n,"index")&&(r.index=n.index,r.input=n.input);return r}(n),!E)return gu(n,R)}else{var C=ri(n),W=C==a||C==c;if(To(n))return vu(n,E);if(C==s||C==e||W&&!f){if(R=z||W?{}:ui(n),!E)return z?function(n,t){return yu(n,ti(n),t)}(n,function(n,t){return n&&yu(t,xf(t),n)}(R,n)):function(n,t){return yu(n,ni(n),t)}(n,Kr(R,n))}else{if(!Tn[C])return f?n:{};R=function(n,t,r){var e=n.constructor;switch(t){case y:return su(n);case i:case o:return new e(+n);case b:return function(n,t){var r=t?su(n.buffer):n.buffer;return new n.constructor(r,n.byteOffset,n.byteLength)}(n,r);case w:case m:case x:case j:case A:case k:case"[object Uint8ClampedArray]":case O:case I:return hu(n,r);case l:return new e;case v:case _:return new e(n);case h:return function(n){var t=new n.constructor(n.source,Q.exec(n));return t.lastIndex=n.lastIndex,t}(n);case p:return new e;case d:return u=n,Or?dn(Or.call(u)):{}}var u}(n,C,E)}}g||(g=new Tr);var U=g.get(n);if(U)return U;g.set(n,R),Ho(n)?n.forEach((function(e){R.add(Jr(e,t,r,e,n,g))})):Zo(n)&&n.forEach((function(e,u){R.set(u,Jr(e,t,r,u,n,g))}));var B=L?void 0:(S?z?Ku:Zu:z?xf:mf)(n);return et(B||n,(function(e,u){B&&(e=n[u=e]),Pr(R,u,Jr(e,t,r,u,n,g))})),R}function Yr(n,t,r){var e=r.length;if(null==n)return!e;for(n=dn(n);e--;){var u=r[e],i=t[u],o=n[u];if(void 0===o&&!(u in n)||!i(o))return!1}return!0}function Qr(t,r,e){if("function"!=typeof t)throw new bn(n);return bi((function(){t.apply(void 0,e)}),r)}function Xr(n,t,r,e){var u=-1,i=ft,o=!0,f=n.length,a=[],c=t.length;if(!f)return a;r&&(t=ct(t,Ot(r))),e?(i=at,o=!1):t.length>=200&&(i=Rt,o=!1,t=new Br(t));n:for(;++u<f;){var l=n[u],v=null==r?l:r(l);if(l=e||0!==l?l:0,o&&v==v){for(var s=c;s--;)if(t[s]===v)continue n;a.push(l)}else i(t,v,e)||a.push(l)}return a}Rr.templateSettings={escape:U,evaluate:B,interpolate:T,variable:"",imports:{_:Rr}},Rr.prototype=zr.prototype,Rr.prototype.constructor=Rr,Sr.prototype=Er(zr.prototype),Sr.prototype.constructor=Sr,Lr.prototype=Er(zr.prototype),Lr.prototype.constructor=Lr,Cr.prototype.clear=function(){this.__data__=gr?gr(null):{},this.size=0},Cr.prototype.delete=function(n){var t=this.has(n)&&delete this.__data__[n];return this.size-=t?1:0,t},Cr.prototype.get=function(n){var t=this.__data__;if(gr){var r=t[n];return"__lodash_hash_undefined__"===r?void 0:r}return kn.call(t,n)?t[n]:void 0},Cr.prototype.has=function(n){var t=this.__data__;return gr?void 0!==t[n]:kn.call(t,n)},Cr.prototype.set=function(n,t){var r=this.__data__;return this.size+=this.has(n)?0:1,r[n]=gr&&void 0===t?"__lodash_hash_undefined__":t,this},Wr.prototype.clear=function(){this.__data__=[],this.size=0},Wr.prototype.delete=function(n){var t=this.__data__,r=qr(t,n);return!(r<0)&&(r==t.length-1?t.pop():Zt.call(t,r,1),--this.size,!0)},Wr.prototype.get=function(n){var t=this.__data__,r=qr(t,n);return r<0?void 0:t[r][1]},Wr.prototype.has=function(n){return qr(this.__data__,n)>-1},Wr.prototype.set=function(n,t){var r=this.__data__,e=qr(r,n);return e<0?(++this.size,r.push([n,t])):r[e][1]=t,this},Ur.prototype.clear=function(){this.size=0,this.__data__={hash:new Cr,map:new(hr||Wr),string:new Cr}},Ur.prototype.delete=function(n){var t=Yu(this,n).delete(n);return this.size-=t?1:0,t},Ur.prototype.get=function(n){return Yu(this,n).get(n)},Ur.prototype.has=function(n){return Yu(this,n).has(n)},Ur.prototype.set=function(n,t){var r=Yu(this,n),e=r.size;return r.set(n,t),this.size+=r.size==e?0:1,this},Br.prototype.add=Br.prototype.push=function(n){return this.__data__.set(n,"__lodash_hash_undefined__"),this},Br.prototype.has=function(n){return this.__data__.has(n)},Tr.prototype.clear=function(){this.__data__=new Wr,this.size=0},Tr.prototype.delete=function(n){var t=this.__data__,r=t.delete(n);return this.size=t.size,r},Tr.prototype.get=function(n){return this.__data__.get(n)},Tr.prototype.has=function(n){return this.__data__.has(n)},Tr.prototype.set=function(n,t){var r=this.__data__;if(r instanceof Wr){var e=r.__data__;if(!hr||e.length<199)return e.push([n,t]),this.size=++r.size,this;r=this.__data__=new Ur(e)}return r.set(n,t),this.size=r.size,this};var ne=mu(ae),te=mu(ce,!0);function re(n,t){var r=!0;return ne(n,(function(n,e,u){return r=!!t(n,e,u)})),r}function ee(n,t,r){for(var e=-1,u=n.length;++e<u;){var i=n[e],o=t(i);if(null!=o&&(void 0===f?o==o&&!Yo(o):r(o,f)))var f=o,a=i}return a}function ue(n,t){var r=[];return ne(n,(function(n,e,u){t(n,e,u)&&r.push(n)})),r}function ie(n,t,r,e,u){var i=-1,o=n.length;for(r||(r=ii),u||(u=[]);++i<o;){var f=n[i];t>0&&r(f)?t>1?ie(f,t-1,r,e,u):lt(u,f):e||(u[u.length]=f)}return u}var oe=xu(),fe=xu(!0);function ae(n,t){return n&&oe(n,t,mf)}function ce(n,t){return n&&fe(n,t,mf)}function le(n,t){return ot(t,(function(t){return No(n[t])}))}function ve(n,t){for(var r=0,e=(t=fu(t,n)).length;null!=n&&r<e;)n=n[ki(t[r++])];return r&&r==e?n:void 0}function se(n,t,r){var e=t(n);return Co(n)?e:lt(e,r(n))}function he(n){return null==n?void 0===n?"[object Undefined]":"[object Null]":Gt&&Gt in dn(n)?function(n){var t=kn.call(n,Gt),r=n[Gt];try{n[Gt]=void 0;var e=!0}catch(n){}var u=zn.call(n);e&&(t?n[Gt]=r:delete n[Gt]);return u}(n):function(n){return zn.call(n)}(n)}function pe(n,t){return n>t}function _e(n,t){return null!=n&&kn.call(n,t)}function de(n,t){return null!=n&&t in dn(n)}function ge(n,t,r){for(var e=r?at:ft,u=n[0].length,i=n.length,o=i,f=vn(i),a=1/0,c=[];o--;){var l=n[o];o&&t&&(l=ct(l,Ot(t))),a=fr(l.length,a),f[o]=!r&&(t||u>=120&&l.length>=120)?new Br(o&&l):void 0}l=n[0];var v=-1,s=f[0];n:for(;++v<u&&c.length<a;){var h=l[v],p=t?t(h):h;if(h=r||0!==h?h:0,!(s?Rt(s,p):e(c,p,r))){for(o=i;--o;){var _=f[o];if(!(_?Rt(_,p):e(n[o],p,r)))continue n}s&&s.push(p),c.push(h)}}return c}function ye(n,t,r){var e=null==(n=_i(n,t=fu(t,n)))?n:n[ki($i(t))];return null==e?void 0:tt(e,n,r)}function be(n){return qo(n)&&he(n)==e}function we(n,t,r,a,c){return n===t||(null==n||null==t||!qo(n)&&!qo(t)?n!=n&&t!=t:function(n,t,r,a,c,g){var w=Co(n),m=Co(t),x=w?u:ri(n),j=m?u:ri(t),A=(x=x==e?s:x)==s,k=(j=j==e?s:j)==s,O=x==j;if(O&&To(n)){if(!To(t))return!1;w=!0,A=!1}if(O&&!A)return g||(g=new Tr),w||Qo(n)?Pu(n,t,r,a,c,g):function(n,t,r,e,u,a,c){switch(r){case b:if(n.byteLength!=t.byteLength||n.byteOffset!=t.byteOffset)return!1;n=n.buffer,t=t.buffer;case y:return!(n.byteLength!=t.byteLength||!a(new Zn(n),new Zn(t)));case i:case o:case v:return Eo(+n,+t);case f:return n.name==t.name&&n.message==t.message;case h:case _:return n==t+"";case l:var s=Bt;case p:var g=1&e;if(s||(s=Dt),n.size!=t.size&&!g)return!1;var w=c.get(n);if(w)return w==t;e|=2,c.set(n,t);var m=Pu(s(n),s(t),e,u,a,c);return c.delete(n),m;case d:if(Or)return Or.call(n)==Or.call(t)}return!1}(n,t,x,r,a,c,g);if(!(1&r)){var I=A&&kn.call(n,"__wrapped__"),R=k&&kn.call(t,"__wrapped__");if(I||R){var E=I?n.value():n,z=R?t.value():t;return g||(g=new Tr),c(E,z,r,a,g)}}if(!O)return!1;return g||(g=new Tr),function(n,t,r,e,u,i){var o=1&r,f=Zu(n),a=f.length,c=Zu(t).length;if(a!=c&&!o)return!1;var l=a;for(;l--;){var v=f[l];if(!(o?v in t:kn.call(t,v)))return!1}var s=i.get(n);if(s&&i.get(t))return s==t;var h=!0;i.set(n,t),i.set(t,n);var p=o;for(;++l<a;){v=f[l];var _=n[v],d=t[v];if(e)var g=o?e(d,_,v,t,n,i):e(_,d,v,n,t,i);if(!(void 0===g?_===d||u(_,d,r,e,i):g)){h=!1;break}p||(p="constructor"==v)}if(h&&!p){var y=n.constructor,b=t.constructor;y==b||!("constructor"in n)||!("constructor"in t)||"function"==typeof y&&y instanceof y&&"function"==typeof b&&b instanceof b||(h=!1)}return i.delete(n),i.delete(t),h}(n,t,r,a,c,g)}(n,t,r,a,we,c))}function me(n,t,r,e){var u=r.length,i=u,o=!e;if(null==n)return!i;for(n=dn(n);u--;){var f=r[u];if(o&&f[2]?f[1]!==n[f[0]]:!(f[0]in n))return!1}for(;++u<i;){var a=(f=r[u])[0],c=n[a],l=f[1];if(o&&f[2]){if(void 0===c&&!(a in n))return!1}else{var v=new Tr;if(e)var s=e(c,l,a,n,t,v);if(!(void 0===s?we(l,c,3,e,v):s))return!1}}return!0}function xe(n){return!(!Po(n)||(t=n,In&&In in t))&&(No(n)?Mn:tn).test(Oi(n));var t}function je(n){return"function"==typeof n?n:null==n?Vf:"object"==typeof n?Co(n)?Ee(n[0],n[1]):Re(n):ra(n)}function Ae(n){if(!vi(n))return ir(n);var t=[];for(var r in dn(n))kn.call(n,r)&&"constructor"!=r&&t.push(r);return t}function ke(n){if(!Po(n))return function(n){var t=[];if(null!=n)for(var r in dn(n))t.push(r);return t}(n);var t=vi(n),r=[];for(var e in n)("constructor"!=e||!t&&kn.call(n,e))&&r.push(e);return r}function Oe(n,t){return n<t}function Ie(n,t){var r=-1,e=Uo(n)?vn(n.length):[];return ne(n,(function(n,u,i){e[++r]=t(n,u,i)})),e}function Re(n){var t=Qu(n);return 1==t.length&&t[0][2]?hi(t[0][0],t[0][1]):function(r){return r===n||me(r,n,t)}}function Ee(n,t){return ai(n)&&si(t)?hi(ki(n),t):function(r){var e=df(r,n);return void 0===e&&e===t?gf(r,n):we(t,e,3)}}function ze(n,t,r,e,u){n!==t&&oe(t,(function(i,o){if(u||(u=new Tr),Po(i))!function(n,t,r,e,u,i,o){var f=gi(n,r),a=gi(t,r),c=o.get(a);if(c)return void Fr(n,r,c);var l=i?i(f,a,r+"",n,t,o):void 0,v=void 0===l;if(v){var s=Co(a),h=!s&&To(a),p=!s&&!h&&Qo(a);l=a,s||h||p?Co(f)?l=f:Bo(f)?l=gu(f):h?(v=!1,l=vu(a,!0)):p?(v=!1,l=hu(a,!0)):l=[]:Vo(a)||Lo(a)?(l=f,Lo(f)?l=ff(f):Po(f)&&!No(f)||(l=ui(a))):v=!1}v&&(o.set(a,l),u(l,a,e,i,o),o.delete(a));Fr(n,r,l)}(n,t,o,r,ze,e,u);else{var f=e?e(gi(n,o),i,o+"",n,t,u):void 0;void 0===f&&(f=i),Fr(n,o,f)}}),xf)}function Se(n,t){var r=n.length;if(r)return oi(t+=t<0?r:0,r)?n[t]:void 0}function Le(n,t,r){var e=-1;return t=ct(t.length?t:[Vf],Ot(Ju())),function(n,t){var r=n.length;for(n.sort(t);r--;)n[r]=n[r].value;return n}(Ie(n,(function(n,r,u){return{criteria:ct(t,(function(t){return t(n)})),index:++e,value:n}})),(function(n,t){return function(n,t,r){var e=-1,u=n.criteria,i=t.criteria,o=u.length,f=r.length;for(;++e<o;){var a=pu(u[e],i[e]);if(a){if(e>=f)return a;var c=r[e];return a*("desc"==c?-1:1)}}return n.index-t.index}(n,t,r)}))}function Ce(n,t,r){for(var e=-1,u=t.length,i={};++e<u;){var o=t[e],f=ve(n,o);r(f,o)&&Me(i,fu(o,n),f)}return i}function We(n,t,r,e){var u=e?yt:gt,i=-1,o=t.length,f=n;for(n===t&&(t=gu(t)),r&&(f=ct(n,Ot(r)));++i<o;)for(var a=0,c=t[i],l=r?r(c):c;(a=u(f,l,a,e))>-1;)f!==n&&Zt.call(f,a,1),Zt.call(n,a,1);return n}function Ue(n,t){for(var r=n?t.length:0,e=r-1;r--;){var u=t[r];if(r==e||u!==i){var i=u;oi(u)?Zt.call(n,u,1):Xe(n,u)}}return n}function Be(n,t){return n+nr(lr()*(t-n+1))}function Te(n,t){var r="";if(!n||t<1||t>9007199254740991)return r;do{t%2&&(r+=n),(t=nr(t/2))&&(n+=n)}while(t);return r}function $e(n,t){return wi(pi(n,t,Vf),n+"")}function De(n){return Dr(zf(n))}function Ne(n,t){var r=zf(n);return ji(r,Hr(t,0,r.length))}function Me(n,t,r,e){if(!Po(n))return n;for(var u=-1,i=(t=fu(t,n)).length,o=i-1,f=n;null!=f&&++u<i;){var a=ki(t[u]),c=r;if(u!=o){var l=f[a];void 0===(c=e?e(l,a,f):void 0)&&(c=Po(l)?l:oi(t[u+1])?[]:{})}Pr(f,a,c),f=f[a]}return n}var Fe=yr?function(n,t){return yr.set(n,t),n}:Vf,Pe=Ht?function(n,t){return Ht(n,"toString",{configurable:!0,enumerable:!1,value:qf(t),writable:!0})}:Vf;function qe(n){return ji(zf(n))}function Ze(n,t,r){var e=-1,u=n.length;t<0&&(t=-t>u?0:u+t),(r=r>u?u:r)<0&&(r+=u),u=t>r?0:r-t>>>0,t>>>=0;for(var i=vn(u);++e<u;)i[e]=n[e+t];return i}function Ke(n,t){var r;return ne(n,(function(n,e,u){return!(r=t(n,e,u))})),!!r}function Ve(n,t,r){var e=0,u=null==n?e:n.length;if("number"==typeof t&&t==t&&u<=2147483647){for(;e<u;){var i=e+u>>>1,o=n[i];null!==o&&!Yo(o)&&(r?o<=t:o<t)?e=i+1:u=i}return u}return Ge(n,t,Vf,r)}function Ge(n,t,r,e){t=r(t);for(var u=0,i=null==n?0:n.length,o=t!=t,f=null===t,a=Yo(t),c=void 0===t;u<i;){var l=nr((u+i)/2),v=r(n[l]),s=void 0!==v,h=null===v,p=v==v,_=Yo(v);if(o)var d=e||p;else d=c?p&&(e||s):f?p&&s&&(e||!h):a?p&&s&&!h&&(e||!_):!h&&!_&&(e?v<=t:v<t);d?u=l+1:i=l}return fr(i,4294967294)}function He(n,t){for(var r=-1,e=n.length,u=0,i=[];++r<e;){var o=n[r],f=t?t(o):o;if(!r||!Eo(f,a)){var a=f;i[u++]=0===o?0:o}}return i}function Je(n){return"number"==typeof n?n:Yo(n)?NaN:+n}function Ye(n){if("string"==typeof n)return n;if(Co(n))return ct(n,Ye)+"";if(Yo(n))return Ir?Ir.call(n):"";var t=n+"";return"0"==t&&1/n==-1/0?"-0":t}function Qe(n,t,r){var e=-1,u=ft,i=n.length,o=!0,f=[],a=f;if(r)o=!1,u=at;else if(i>=200){var c=t?null:Tu(n);if(c)return Dt(c);o=!1,u=Rt,a=new Br}else a=t?[]:f;n:for(;++e<i;){var l=n[e],v=t?t(l):l;if(l=r||0!==l?l:0,o&&v==v){for(var s=a.length;s--;)if(a[s]===v)continue n;t&&a.push(v),f.push(l)}else u(a,v,r)||(a!==f&&a.push(v),f.push(l))}return f}function Xe(n,t){return null==(n=_i(n,t=fu(t,n)))||delete n[ki($i(t))]}function nu(n,t,r,e){return Me(n,t,r(ve(n,t)),e)}function tu(n,t,r,e){for(var u=n.length,i=e?u:-1;(e?i--:++i<u)&&t(n[i],i,n););return r?Ze(n,e?0:i,e?i+1:u):Ze(n,e?i+1:0,e?u:i)}function ru(n,t){var r=n;return r instanceof Lr&&(r=r.value()),vt(t,(function(n,t){return t.func.apply(t.thisArg,lt([n],t.args))}),r)}function eu(n,t,r){var e=n.length;if(e<2)return e?Qe(n[0]):[];for(var u=-1,i=vn(e);++u<e;)for(var o=n[u],f=-1;++f<e;)f!=u&&(i[u]=Xr(i[u]||o,n[f],t,r));return Qe(ie(i,1),t,r)}function uu(n,t,r){for(var e=-1,u=n.length,i=t.length,o={};++e<u;){var f=e<i?t[e]:void 0;r(o,n[e],f)}return o}function iu(n){return Bo(n)?n:[]}function ou(n){return"function"==typeof n?n:Vf}function fu(n,t){return Co(n)?n:ai(n,t)?[n]:Ai(af(n))}var au=$e;function cu(n,t,r){var e=n.length;return r=void 0===r?e:r,!t&&r>=e?n:Ze(n,t,r)}var lu=Jt||function(n){return Pn.clearTimeout(n)};function vu(n,t){if(t)return n.slice();var r=n.length,e=Vn?Vn(r):new n.constructor(r);return n.copy(e),e}function su(n){var t=new n.constructor(n.byteLength);return new Zn(t).set(new Zn(n)),t}function hu(n,t){var r=t?su(n.buffer):n.buffer;return new n.constructor(r,n.byteOffset,n.length)}function pu(n,t){if(n!==t){var r=void 0!==n,e=null===n,u=n==n,i=Yo(n),o=void 0!==t,f=null===t,a=t==t,c=Yo(t);if(!f&&!c&&!i&&n>t||i&&o&&a&&!f&&!c||e&&o&&a||!r&&a||!u)return 1;if(!e&&!i&&!c&&n<t||c&&r&&u&&!e&&!i||f&&r&&u||!o&&u||!a)return-1}return 0}function _u(n,t,r,e){for(var u=-1,i=n.length,o=r.length,f=-1,a=t.length,c=or(i-o,0),l=vn(a+c),v=!e;++f<a;)l[f]=t[f];for(;++u<o;)(v||u<i)&&(l[r[u]]=n[u]);for(;c--;)l[f++]=n[u++];return l}function du(n,t,r,e){for(var u=-1,i=n.length,o=-1,f=r.length,a=-1,c=t.length,l=or(i-f,0),v=vn(l+c),s=!e;++u<l;)v[u]=n[u];for(var h=u;++a<c;)v[h+a]=t[a];for(;++o<f;)(s||u<i)&&(v[h+r[o]]=n[u++]);return v}function gu(n,t){var r=-1,e=n.length;for(t||(t=vn(e));++r<e;)t[r]=n[r];return t}function yu(n,t,r,e){var u=!r;r||(r={});for(var i=-1,o=t.length;++i<o;){var f=t[i],a=e?e(r[f],n[f],f,r,n):void 0;void 0===a&&(a=n[f]),u?Vr(r,f,a):Pr(r,f,a)}return r}function bu(n,t){return function(r,e){var u=Co(r)?rt:Zr,i=t?t():{};return u(r,n,Ju(e,2),i)}}function wu(n){return $e((function(t,r){var e=-1,u=r.length,i=u>1?r[u-1]:void 0,o=u>2?r[2]:void 0;for(i=n.length>3&&"function"==typeof i?(u--,i):void 0,o&&fi(r[0],r[1],o)&&(i=u<3?void 0:i,u=1),t=dn(t);++e<u;){var f=r[e];f&&n(t,f,e,i)}return t}))}function mu(n,t){return function(r,e){if(null==r)return r;if(!Uo(r))return n(r,e);for(var u=r.length,i=t?u:-1,o=dn(r);(t?i--:++i<u)&&!1!==e(o[i],i,o););return r}}function xu(n){return function(t,r,e){for(var u=-1,i=dn(t),o=e(t),f=o.length;f--;){var a=o[n?f:++u];if(!1===r(i[a],a,i))break}return t}}function ju(n){return function(t){var r=Ut(t=af(t))?Ft(t):void 0,e=r?r[0]:t.charAt(0),u=r?cu(r,1).join(""):t.slice(1);return e[n]()+u}}function Au(n){return function(t){return vt(Mf(Cf(t).replace(Rn,"")),n,"")}}function ku(n){return function(){var t=arguments;switch(t.length){case 0:return new n;case 1:return new n(t[0]);case 2:return new n(t[0],t[1]);case 3:return new n(t[0],t[1],t[2]);case 4:return new n(t[0],t[1],t[2],t[3]);case 5:return new n(t[0],t[1],t[2],t[3],t[4]);case 6:return new n(t[0],t[1],t[2],t[3],t[4],t[5]);case 7:return new n(t[0],t[1],t[2],t[3],t[4],t[5],t[6])}var r=Er(n.prototype),e=n.apply(r,t);return Po(e)?e:r}}function Ou(n){return function(t,r,e){var u=dn(t);if(!Uo(t)){var i=Ju(r,3);t=mf(t),r=function(n){return i(u[n],n,u)}}var o=n(t,r,e);return o>-1?u[i?t[o]:o]:void 0}}function Iu(t){return qu((function(r){var e=r.length,u=e,i=Sr.prototype.thru;for(t&&r.reverse();u--;){var o=r[u];if("function"!=typeof o)throw new bn(n);if(i&&!f&&"wrapper"==Gu(o))var f=new Sr([],!0)}for(u=f?u:e;++u<e;){var a=Gu(o=r[u]),c="wrapper"==a?Vu(o):void 0;f=c&&ci(c[0])&&424==c[1]&&!c[4].length&&1==c[9]?f[Gu(c[0])].apply(f,c[3]):1==o.length&&ci(o)?f[a]():f.thru(o)}return function(){var n=arguments,t=n[0];if(f&&1==n.length&&Co(t))return f.plant(t).value();for(var u=0,i=e?r[u].apply(this,n):t;++u<e;)i=r[u].call(this,i);return i}}))}function Ru(n,t,r,e,u,i,o,f,a,c){var l=128&t,v=1&t,s=2&t,h=24&t,p=512&t,_=s?void 0:ku(n);return function d(){for(var g=arguments.length,y=vn(g),b=g;b--;)y[b]=arguments[b];if(h)var w=Hu(d),m=St(y,w);if(e&&(y=_u(y,e,u,h)),i&&(y=du(y,i,o,h)),g-=m,h&&g<c){var x=$t(y,w);return Uu(n,t,Ru,d.placeholder,r,y,x,f,a,c-g)}var j=v?r:this,A=s?j[n]:n;return g=y.length,f?y=di(y,f):p&&g>1&&y.reverse(),l&&a<g&&(y.length=a),this&&this!==Pn&&this instanceof d&&(A=_||ku(A)),A.apply(j,y)}}function Eu(n,t){return function(r,e){return function(n,t,r,e){return ae(n,(function(n,u,i){t(e,r(n),u,i)})),e}(r,n,t(e),{})}}function zu(n,t){return function(r,e){var u;if(void 0===r&&void 0===e)return t;if(void 0!==r&&(u=r),void 0!==e){if(void 0===u)return e;"string"==typeof r||"string"==typeof e?(r=Ye(r),e=Ye(e)):(r=Je(r),e=Je(e)),u=n(r,e)}return u}}function Su(n){return qu((function(t){return t=ct(t,Ot(Ju())),$e((function(r){var e=this;return n(t,(function(n){return tt(n,e,r)}))}))}))}function Lu(n,t){var r=(t=void 0===t?" ":Ye(t)).length;if(r<2)return r?Te(t,n):t;var e=Te(t,Xt(n/Mt(t)));return Ut(t)?cu(Ft(e),0,n).join(""):e.slice(0,n)}function Cu(n){return function(t,r,e){return e&&"number"!=typeof e&&fi(t,r,e)&&(r=e=void 0),t=rf(t),void 0===r?(r=t,t=0):r=rf(r),function(n,t,r,e){for(var u=-1,i=or(Xt((t-n)/(r||1)),0),o=vn(i);i--;)o[e?i:++u]=n,n+=r;return o}(t,r,e=void 0===e?t<r?1:-1:rf(e),n)}}function Wu(n){return function(t,r){return"string"==typeof t&&"string"==typeof r||(t=of(t),r=of(r)),n(t,r)}}function Uu(n,t,r,e,u,i,o,f,a,c){var l=8&t;t|=l?32:64,4&(t&=~(l?64:32))||(t&=-4);var v=[n,t,u,l?i:void 0,l?o:void 0,l?void 0:i,l?void 0:o,f,a,c],s=r.apply(void 0,v);return ci(n)&&yi(s,v),s.placeholder=e,mi(s,n,t)}function Bu(n){var t=_n[n];return function(n,r){if(n=of(n),(r=null==r?0:fr(ef(r),292))&&er(n)){var e=(af(n)+"e").split("e");return+((e=(af(t(e[0]+"e"+(+e[1]+r)))+"e").split("e"))[0]+"e"+(+e[1]-r))}return t(n)}}var Tu=_r&&1/Dt(new _r([,-0]))[1]==1/0?function(n){return new _r(n)}:Qf;function $u(n){return function(t){var r=ri(t);return r==l?Bt(t):r==p?Nt(t):function(n,t){return ct(t,(function(t){return[t,n[t]]}))}(t,n(t))}}function Du(r,e,u,i,o,f,a,c){var l=2&e;if(!l&&"function"!=typeof r)throw new bn(n);var v=i?i.length:0;if(v||(e&=-97,i=o=void 0),a=void 0===a?a:or(ef(a),0),c=void 0===c?c:ef(c),v-=o?o.length:0,64&e){var s=i,h=o;i=o=void 0}var p=l?void 0:Vu(r),_=[r,e,u,i,o,s,h,f,a,c];if(p&&function(n,r){var e=n[1],u=r[1],i=e|u,o=i<131,f=128==u&&8==e||128==u&&256==e&&n[7].length<=r[8]||384==u&&r[7].length<=r[8]&&8==e;if(!o&&!f)return n;1&u&&(n[2]=r[2],i|=1&e?0:4);var a=r[3];if(a){var c=n[3];n[3]=c?_u(c,a,r[4]):a,n[4]=c?$t(n[3],t):r[4]}(a=r[5])&&(c=n[5],n[5]=c?du(c,a,r[6]):a,n[6]=c?$t(n[5],t):r[6]);(a=r[7])&&(n[7]=a);128&u&&(n[8]=null==n[8]?r[8]:fr(n[8],r[8]));null==n[9]&&(n[9]=r[9]);n[0]=r[0],n[1]=i}(_,p),r=_[0],e=_[1],u=_[2],i=_[3],o=_[4],!(c=_[9]=void 0===_[9]?l?0:r.length:or(_[9]-v,0))&&24&e&&(e&=-25),e&&1!=e)d=8==e||16==e?function(n,t,r){var e=ku(n);return function u(){for(var i=arguments.length,o=vn(i),f=i,a=Hu(u);f--;)o[f]=arguments[f];var c=i<3&&o[0]!==a&&o[i-1]!==a?[]:$t(o,a);if((i-=c.length)<r)return Uu(n,t,Ru,u.placeholder,void 0,o,c,void 0,void 0,r-i);var l=this&&this!==Pn&&this instanceof u?e:n;return tt(l,this,o)}}(r,e,c):32!=e&&33!=e||o.length?Ru.apply(void 0,_):function(n,t,r,e){var u=1&t,i=ku(n);return function t(){for(var o=-1,f=arguments.length,a=-1,c=e.length,l=vn(c+f),v=this&&this!==Pn&&this instanceof t?i:n;++a<c;)l[a]=e[a];for(;f--;)l[a++]=arguments[++o];return tt(v,u?r:this,l)}}(r,e,u,i);else var d=function(n,t,r){var e=1&t,u=ku(n);return function t(){var i=this&&this!==Pn&&this instanceof t?u:n;return i.apply(e?r:this,arguments)}}(r,e,u);return mi((p?Fe:yi)(d,_),r,e)}function Nu(n,t,r,e){return void 0===n||Eo(n,xn[r])&&!kn.call(e,r)?t:n}function Mu(n,t,r,e,u,i){return Po(n)&&Po(t)&&(i.set(t,n),ze(n,t,void 0,Mu,i),i.delete(t)),n}function Fu(n){return Vo(n)?void 0:n}function Pu(n,t,r,e,u,i){var o=1&r,f=n.length,a=t.length;if(f!=a&&!(o&&a>f))return!1;var c=i.get(n);if(c&&i.get(t))return c==t;var l=-1,v=!0,s=2&r?new Br:void 0;for(i.set(n,t),i.set(t,n);++l<f;){var h=n[l],p=t[l];if(e)var _=o?e(p,h,l,t,n,i):e(h,p,l,n,t,i);if(void 0!==_){if(_)continue;v=!1;break}if(s){if(!ht(t,(function(n,t){if(!Rt(s,t)&&(h===n||u(h,n,r,e,i)))return s.push(t)}))){v=!1;break}}else if(h!==p&&!u(h,p,r,e,i)){v=!1;break}}return i.delete(n),i.delete(t),v}function qu(n){return wi(pi(n,void 0,Ci),n+"")}function Zu(n){return se(n,mf,ni)}function Ku(n){return se(n,xf,ti)}var Vu=yr?function(n){return yr.get(n)}:Qf;function Gu(n){for(var t=n.name+"",r=br[t],e=kn.call(br,t)?r.length:0;e--;){var u=r[e],i=u.func;if(null==i||i==n)return u.name}return t}function Hu(n){return(kn.call(Rr,"placeholder")?Rr:n).placeholder}function Ju(){var n=Rr.iteratee||Gf;return n=n===Gf?je:n,arguments.length?n(arguments[0],arguments[1]):n}function Yu(n,t){var r,e,u=n.__data__;return("string"==(e=typeof(r=t))||"number"==e||"symbol"==e||"boolean"==e?"__proto__"!==r:null===r)?u["string"==typeof t?"string":"hash"]:u.map}function Qu(n){for(var t=mf(n),r=t.length;r--;){var e=t[r],u=n[e];t[r]=[e,u,si(u)]}return t}function Xu(n,t){var r=function(n,t){return null==n?void 0:n[t]}(n,t);return xe(r)?r:void 0}var ni=tr?function(n){return null==n?[]:(n=dn(n),ot(tr(n),(function(t){return xt.call(n,t)})))}:ia,ti=tr?function(n){for(var t=[];n;)lt(t,ni(n)),n=Gn(n);return t}:ia,ri=he;function ei(n,t,r){for(var e=-1,u=(t=fu(t,n)).length,i=!1;++e<u;){var o=ki(t[e]);if(!(i=null!=n&&r(n,o)))break;n=n[o]}return i||++e!=u?i:!!(u=null==n?0:n.length)&&Fo(u)&&oi(o,u)&&(Co(n)||Lo(n))}function ui(n){return"function"!=typeof n.constructor||vi(n)?{}:Er(Gn(n))}function ii(n){return Co(n)||Lo(n)||!!(Kt&&n&&n[Kt])}function oi(n,t){var r=typeof n;return!!(t=null==t?9007199254740991:t)&&("number"==r||"symbol"!=r&&en.test(n))&&n>-1&&n%1==0&&n<t}function fi(n,t,r){if(!Po(r))return!1;var e=typeof t;return!!("number"==e?Uo(r)&&oi(t,r.length):"string"==e&&t in r)&&Eo(r[t],n)}function ai(n,t){if(Co(n))return!1;var r=typeof n;return!("number"!=r&&"symbol"!=r&&"boolean"!=r&&null!=n&&!Yo(n))||(D.test(n)||!$.test(n)||null!=t&&n in dn(t))}function ci(n){var t=Gu(n),r=Rr[t];if("function"!=typeof r||!(t in Lr.prototype))return!1;if(n===r)return!0;var e=Vu(r);return!!e&&n===e[0]}(sr&&ri(new sr(new ArrayBuffer(1)))!=b||hr&&ri(new hr)!=l||pr&&"[object Promise]"!=ri(pr.resolve())||_r&&ri(new _r)!=p||dr&&ri(new dr)!=g)&&(ri=function(n){var t=he(n),r=t==s?n.constructor:void 0,e=r?Oi(r):"";if(e)switch(e){case wr:return b;case mr:return l;case xr:return"[object Promise]";case jr:return p;case Ar:return g}return t});var li=jn?No:oa;function vi(n){var t=n&&n.constructor;return n===("function"==typeof t&&t.prototype||xn)}function si(n){return n==n&&!Po(n)}function hi(n,t){return function(r){return null!=r&&(r[n]===t&&(void 0!==t||n in dn(r)))}}function pi(n,t,r){return t=or(void 0===t?n.length-1:t,0),function(){for(var e=arguments,u=-1,i=or(e.length-t,0),o=vn(i);++u<i;)o[u]=e[t+u];u=-1;for(var f=vn(t+1);++u<t;)f[u]=e[u];return f[t]=r(o),tt(n,this,f)}}function _i(n,t){return t.length<2?n:ve(n,Ze(t,0,-1))}function di(n,t){for(var r=n.length,e=fr(t.length,r),u=gu(n);e--;){var i=t[e];n[e]=oi(i,r)?u[i]:void 0}return n}function gi(n,t){if(("constructor"!==t||"function"!=typeof n[t])&&"__proto__"!=t)return n[t]}var yi=xi(Fe),bi=Qt||function(n,t){return Pn.setTimeout(n,t)},wi=xi(Pe);function mi(n,t,e){var u=t+"";return wi(n,function(n,t){var r=t.length;if(!r)return n;var e=r-1;return t[e]=(r>1?"& ":"")+t[e],t=t.join(r>2?", ":" "),n.replace(K,"{\n/* [wrapped with "+t+"] */\n")}(u,function(n,t){return et(r,(function(r){var e="_."+r[0];t&r[1]&&!ft(n,e)&&n.push(e)})),n.sort()}(function(n){var t=n.match(V);return t?t[1].split(G):[]}(u),e)))}function xi(n){var t=0,r=0;return function(){var e=ar(),u=16-(e-r);if(r=e,u>0){if(++t>=800)return arguments[0]}else t=0;return n.apply(void 0,arguments)}}function ji(n,t){var r=-1,e=n.length,u=e-1;for(t=void 0===t?e:t;++r<t;){var i=Be(r,u),o=n[i];n[i]=n[r],n[r]=o}return n.length=t,n}var Ai=function(n){var t=jo(n,(function(n){return 500===r.size&&r.clear(),n})),r=t.cache;return t}((function(n){var t=[];return 46===n.charCodeAt(0)&&t.push(""),n.replace(N,(function(n,r,e,u){t.push(e?u.replace(J,"$1"):r||n)})),t}));function ki(n){if("string"==typeof n||Yo(n))return n;var t=n+"";return"0"==t&&1/n==-1/0?"-0":t}function Oi(n){if(null!=n){try{return An.call(n)}catch(n){}try{return n+""}catch(n){}}return""}function Ii(n){if(n instanceof Lr)return n.clone();var t=new Sr(n.__wrapped__,n.__chain__);return t.__actions__=gu(n.__actions__),t.__index__=n.__index__,t.__values__=n.__values__,t}var Ri=$e((function(n,t){return Bo(n)?Xr(n,ie(t,1,Bo,!0)):[]})),Ei=$e((function(n,t){var r=$i(t);return Bo(r)&&(r=void 0),Bo(n)?Xr(n,ie(t,1,Bo,!0),Ju(r,2)):[]})),zi=$e((function(n,t){var r=$i(t);return Bo(r)&&(r=void 0),Bo(n)?Xr(n,ie(t,1,Bo,!0),void 0,r):[]}));function Si(n,t,r){var e=null==n?0:n.length;if(!e)return-1;var u=null==r?0:ef(r);return u<0&&(u=or(e+u,0)),dt(n,Ju(t,3),u)}function Li(n,t,r){var e=null==n?0:n.length;if(!e)return-1;var u=e-1;return void 0!==r&&(u=ef(r),u=r<0?or(e+u,0):fr(u,e-1)),dt(n,Ju(t,3),u,!0)}function Ci(n){return(null==n?0:n.length)?ie(n,1):[]}function Wi(n){return n&&n.length?n[0]:void 0}var Ui=$e((function(n){var t=ct(n,iu);return t.length&&t[0]===n[0]?ge(t):[]})),Bi=$e((function(n){var t=$i(n),r=ct(n,iu);return t===$i(r)?t=void 0:r.pop(),r.length&&r[0]===n[0]?ge(r,Ju(t,2)):[]})),Ti=$e((function(n){var t=$i(n),r=ct(n,iu);return(t="function"==typeof t?t:void 0)&&r.pop(),r.length&&r[0]===n[0]?ge(r,void 0,t):[]}));function $i(n){var t=null==n?0:n.length;return t?n[t-1]:void 0}var Di=$e(Ni);function Ni(n,t){return n&&n.length&&t&&t.length?We(n,t):n}var Mi=qu((function(n,t){var r=null==n?0:n.length,e=Gr(n,t);return Ue(n,ct(t,(function(n){return oi(n,r)?+n:n})).sort(pu)),e}));function Fi(n){return null==n?n:vr.call(n)}var Pi=$e((function(n){return Qe(ie(n,1,Bo,!0))})),qi=$e((function(n){var t=$i(n);return Bo(t)&&(t=void 0),Qe(ie(n,1,Bo,!0),Ju(t,2))})),Zi=$e((function(n){var t=$i(n);return t="function"==typeof t?t:void 0,Qe(ie(n,1,Bo,!0),void 0,t)}));function Ki(n){if(!n||!n.length)return[];var t=0;return n=ot(n,(function(n){if(Bo(n))return t=or(n.length,t),!0})),kt(t,(function(t){return ct(n,mt(t))}))}function Vi(n,t){if(!n||!n.length)return[];var r=Ki(n);return null==t?r:ct(r,(function(n){return tt(t,void 0,n)}))}var Gi=$e((function(n,t){return Bo(n)?Xr(n,t):[]})),Hi=$e((function(n){return eu(ot(n,Bo))})),Ji=$e((function(n){var t=$i(n);return Bo(t)&&(t=void 0),eu(ot(n,Bo),Ju(t,2))})),Yi=$e((function(n){var t=$i(n);return t="function"==typeof t?t:void 0,eu(ot(n,Bo),void 0,t)})),Qi=$e(Ki);var Xi=$e((function(n){var t=n.length,r=t>1?n[t-1]:void 0;return r="function"==typeof r?(n.pop(),r):void 0,Vi(n,r)}));function no(n){var t=Rr(n);return t.__chain__=!0,t}function to(n,t){return t(n)}var ro=qu((function(n){var t=n.length,r=t?n[0]:0,e=this.__wrapped__,u=function(t){return Gr(t,n)};return!(t>1||this.__actions__.length)&&e instanceof Lr&&oi(r)?((e=e.slice(r,+r+(t?1:0))).__actions__.push({func:to,args:[u],thisArg:void 0}),new Sr(e,this.__chain__).thru((function(n){return t&&!n.length&&n.push(void 0),n}))):this.thru(u)}));var eo=bu((function(n,t,r){kn.call(n,r)?++n[r]:Vr(n,r,1)}));var uo=Ou(Si),io=Ou(Li);function oo(n,t){return(Co(n)?et:ne)(n,Ju(t,3))}function fo(n,t){return(Co(n)?ut:te)(n,Ju(t,3))}var ao=bu((function(n,t,r){kn.call(n,r)?n[r].push(t):Vr(n,r,[t])}));var co=$e((function(n,t,r){var e=-1,u="function"==typeof t,i=Uo(n)?vn(n.length):[];return ne(n,(function(n){i[++e]=u?tt(t,n,r):ye(n,t,r)})),i})),lo=bu((function(n,t,r){Vr(n,r,t)}));function vo(n,t){return(Co(n)?ct:Ie)(n,Ju(t,3))}var so=bu((function(n,t,r){n[r?0:1].push(t)}),(function(){return[[],[]]}));var ho=$e((function(n,t){if(null==n)return[];var r=t.length;return r>1&&fi(n,t[0],t[1])?t=[]:r>2&&fi(t[0],t[1],t[2])&&(t=[t[0]]),Le(n,ie(t,1),[])})),po=Yt||function(){return Pn.Date.now()};function _o(n,t,r){return t=r?void 0:t,Du(n,128,void 0,void 0,void 0,void 0,t=n&&null==t?n.length:t)}function go(t,r){var e;if("function"!=typeof r)throw new bn(n);return t=ef(t),function(){return--t>0&&(e=r.apply(this,arguments)),t<=1&&(r=void 0),e}}var yo=$e((function(n,t,r){var e=1;if(r.length){var u=$t(r,Hu(yo));e|=32}return Du(n,e,t,r,u)})),bo=$e((function(n,t,r){var e=3;if(r.length){var u=$t(r,Hu(bo));e|=32}return Du(t,e,n,r,u)}));function wo(t,r,e){var u,i,o,f,a,c,l=0,v=!1,s=!1,h=!0;if("function"!=typeof t)throw new bn(n);function p(n){var r=u,e=i;return u=i=void 0,l=n,f=t.apply(e,r)}function _(n){return l=n,a=bi(g,r),v?p(n):f}function d(n){var t=n-c;return void 0===c||t>=r||t<0||s&&n-l>=o}function g(){var n=po();if(d(n))return y(n);a=bi(g,function(n){var t=r-(n-c);return s?fr(t,o-(n-l)):t}(n))}function y(n){return a=void 0,h&&u?p(n):(u=i=void 0,f)}function b(){var n=po(),t=d(n);if(u=arguments,i=this,c=n,t){if(void 0===a)return _(c);if(s)return lu(a),a=bi(g,r),p(c)}return void 0===a&&(a=bi(g,r)),f}return r=of(r)||0,Po(e)&&(v=!!e.leading,o=(s="maxWait"in e)?or(of(e.maxWait)||0,r):o,h="trailing"in e?!!e.trailing:h),b.cancel=function(){void 0!==a&&lu(a),l=0,u=c=i=a=void 0},b.flush=function(){return void 0===a?f:y(po())},b}var mo=$e((function(n,t){return Qr(n,1,t)})),xo=$e((function(n,t,r){return Qr(n,of(t)||0,r)}));function jo(t,r){if("function"!=typeof t||null!=r&&"function"!=typeof r)throw new bn(n);var e=function(){var n=arguments,u=r?r.apply(this,n):n[0],i=e.cache;if(i.has(u))return i.get(u);var o=t.apply(this,n);return e.cache=i.set(u,o)||i,o};return e.cache=new(jo.Cache||Ur),e}function Ao(t){if("function"!=typeof t)throw new bn(n);return function(){var n=arguments;switch(n.length){case 0:return!t.call(this);case 1:return!t.call(this,n[0]);case 2:return!t.call(this,n[0],n[1]);case 3:return!t.call(this,n[0],n[1],n[2])}return!t.apply(this,n)}}jo.Cache=Ur;var ko=au((function(n,t){var r=(t=1==t.length&&Co(t[0])?ct(t[0],Ot(Ju())):ct(ie(t,1),Ot(Ju()))).length;return $e((function(e){for(var u=-1,i=fr(e.length,r);++u<i;)e[u]=t[u].call(this,e[u]);return tt(n,this,e)}))})),Oo=$e((function(n,t){return Du(n,32,void 0,t,$t(t,Hu(Oo)))})),Io=$e((function(n,t){return Du(n,64,void 0,t,$t(t,Hu(Io)))})),Ro=qu((function(n,t){return Du(n,256,void 0,void 0,void 0,t)}));function Eo(n,t){return n===t||n!=n&&t!=t}var zo=Wu(pe),So=Wu((function(n,t){return n>=t})),Lo=be(function(){return arguments}())?be:function(n){return qo(n)&&kn.call(n,"callee")&&!xt.call(n,"callee")},Co=vn.isArray,Wo=Hn?Ot(Hn):function(n){return qo(n)&&he(n)==y};function Uo(n){return null!=n&&Fo(n.length)&&!No(n)}function Bo(n){return qo(n)&&Uo(n)}var To=rr||oa,$o=Jn?Ot(Jn):function(n){return qo(n)&&he(n)==o};function Do(n){if(!qo(n))return!1;var t=he(n);return t==f||"[object DOMException]"==t||"string"==typeof n.message&&"string"==typeof n.name&&!Vo(n)}function No(n){if(!Po(n))return!1;var t=he(n);return t==a||t==c||"[object AsyncFunction]"==t||"[object Proxy]"==t}function Mo(n){return"number"==typeof n&&n==ef(n)}function Fo(n){return"number"==typeof n&&n>-1&&n%1==0&&n<=9007199254740991}function Po(n){var t=typeof n;return null!=n&&("object"==t||"function"==t)}function qo(n){return null!=n&&"object"==typeof n}var Zo=Yn?Ot(Yn):function(n){return qo(n)&&ri(n)==l};function Ko(n){return"number"==typeof n||qo(n)&&he(n)==v}function Vo(n){if(!qo(n)||he(n)!=s)return!1;var t=Gn(n);if(null===t)return!0;var r=kn.call(t,"constructor")&&t.constructor;return"function"==typeof r&&r instanceof r&&An.call(r)==Ln}var Go=Qn?Ot(Qn):function(n){return qo(n)&&he(n)==h};var Ho=Xn?Ot(Xn):function(n){return qo(n)&&ri(n)==p};function Jo(n){return"string"==typeof n||!Co(n)&&qo(n)&&he(n)==_}function Yo(n){return"symbol"==typeof n||qo(n)&&he(n)==d}var Qo=nt?Ot(nt):function(n){return qo(n)&&Fo(n.length)&&!!Bn[he(n)]};var Xo=Wu(Oe),nf=Wu((function(n,t){return n<=t}));function tf(n){if(!n)return[];if(Uo(n))return Jo(n)?Ft(n):gu(n);if(Vt&&n[Vt])return function(n){for(var t,r=[];!(t=n.next()).done;)r.push(t.value);return r}(n[Vt]());var t=ri(n);return(t==l?Bt:t==p?Dt:zf)(n)}function rf(n){return n?(n=of(n))===1/0||n===-1/0?17976931348623157e292*(n<0?-1:1):n==n?n:0:0===n?n:0}function ef(n){var t=rf(n),r=t%1;return t==t?r?t-r:t:0}function uf(n){return n?Hr(ef(n),0,4294967295):0}function of(n){if("number"==typeof n)return n;if(Yo(n))return NaN;if(Po(n)){var t="function"==typeof n.valueOf?n.valueOf():n;n=Po(t)?t+"":t}if("string"!=typeof n)return 0===n?n:+n;n=n.replace(P,"");var r=nn.test(n);return r||rn.test(n)?Nn(n.slice(2),r?2:8):X.test(n)?NaN:+n}function ff(n){return yu(n,xf(n))}function af(n){return null==n?"":Ye(n)}var cf=wu((function(n,t){if(vi(t)||Uo(t))yu(t,mf(t),n);else for(var r in t)kn.call(t,r)&&Pr(n,r,t[r])})),lf=wu((function(n,t){yu(t,xf(t),n)})),vf=wu((function(n,t,r,e){yu(t,xf(t),n,e)})),sf=wu((function(n,t,r,e){yu(t,mf(t),n,e)})),hf=qu(Gr);var pf=$e((function(n,t){n=dn(n);var r=-1,e=t.length,u=e>2?t[2]:void 0;for(u&&fi(t[0],t[1],u)&&(e=1);++r<e;)for(var i=t[r],o=xf(i),f=-1,a=o.length;++f<a;){var c=o[f],l=n[c];(void 0===l||Eo(l,xn[c])&&!kn.call(n,c))&&(n[c]=i[c])}return n})),_f=$e((function(n){return n.push(void 0,Mu),tt(Af,void 0,n)}));function df(n,t,r){var e=null==n?void 0:ve(n,t);return void 0===e?r:e}function gf(n,t){return null!=n&&ei(n,t,de)}var yf=Eu((function(n,t,r){null!=t&&"function"!=typeof t.toString&&(t=zn.call(t)),n[t]=r}),qf(Vf)),bf=Eu((function(n,t,r){null!=t&&"function"!=typeof t.toString&&(t=zn.call(t)),kn.call(n,t)?n[t].push(r):n[t]=[r]}),Ju),wf=$e(ye);function mf(n){return Uo(n)?$r(n):Ae(n)}function xf(n){return Uo(n)?$r(n,!0):ke(n)}var jf=wu((function(n,t,r){ze(n,t,r)})),Af=wu((function(n,t,r,e){ze(n,t,r,e)})),kf=qu((function(n,t){var r={};if(null==n)return r;var e=!1;t=ct(t,(function(t){return t=fu(t,n),e||(e=t.length>1),t})),yu(n,Ku(n),r),e&&(r=Jr(r,7,Fu));for(var u=t.length;u--;)Xe(r,t[u]);return r}));var Of=qu((function(n,t){return null==n?{}:function(n,t){return Ce(n,t,(function(t,r){return gf(n,r)}))}(n,t)}));function If(n,t){if(null==n)return{};var r=ct(Ku(n),(function(n){return[n]}));return t=Ju(t),Ce(n,r,(function(n,r){return t(n,r[0])}))}var Rf=$u(mf),Ef=$u(xf);function zf(n){return null==n?[]:It(n,mf(n))}var Sf=Au((function(n,t,r){return t=t.toLowerCase(),n+(r?Lf(t):t)}));function Lf(n){return Nf(af(n).toLowerCase())}function Cf(n){return(n=af(n))&&n.replace(un,Lt).replace(En,"")}var Wf=Au((function(n,t,r){return n+(r?"-":"")+t.toLowerCase()})),Uf=Au((function(n,t,r){return n+(r?" ":"")+t.toLowerCase()})),Bf=ju("toLowerCase");var Tf=Au((function(n,t,r){return n+(r?"_":"")+t.toLowerCase()}));var $f=Au((function(n,t,r){return n+(r?" ":"")+Nf(t)}));var Df=Au((function(n,t,r){return n+(r?" ":"")+t.toUpperCase()})),Nf=ju("toUpperCase");function Mf(n,t,r){return n=af(n),void 0===(t=r?void 0:t)?function(n){return Cn.test(n)}(n)?function(n){return n.match(Sn)||[]}(n):function(n){return n.match(H)||[]}(n):n.match(t)||[]}var Ff=$e((function(n,t){try{return tt(n,void 0,t)}catch(n){return Do(n)?n:new hn(n)}})),Pf=qu((function(n,t){return et(t,(function(t){t=ki(t),Vr(n,t,yo(n[t],n))})),n}));function qf(n){return function(){return n}}var Zf=Iu(),Kf=Iu(!0);function Vf(n){return n}function Gf(n){return je("function"==typeof n?n:Jr(n,1))}var Hf=$e((function(n,t){return function(r){return ye(r,n,t)}})),Jf=$e((function(n,t){return function(r){return ye(n,r,t)}}));function Yf(n,t,r){var e=mf(t),u=le(t,e);null!=r||Po(t)&&(u.length||!e.length)||(r=t,t=n,n=this,u=le(t,mf(t)));var i=!(Po(r)&&"chain"in r&&!r.chain),o=No(n);return et(u,(function(r){var e=t[r];n[r]=e,o&&(n.prototype[r]=function(){var t=this.__chain__;if(i||t){var r=n(this.__wrapped__),u=r.__actions__=gu(this.__actions__);return u.push({func:e,args:arguments,thisArg:n}),r.__chain__=t,r}return e.apply(n,lt([this.value()],arguments))})})),n}function Qf(){}var Xf=Su(ct),na=Su(it),ta=Su(ht);function ra(n){return ai(n)?mt(ki(n)):function(n){return function(t){return ve(t,n)}}(n)}var ea=Cu(),ua=Cu(!0);function ia(){return[]}function oa(){return!1}var fa=zu((function(n,t){return n+t}),0),aa=Bu("ceil"),ca=zu((function(n,t){return n/t}),1),la=Bu("floor");var va,sa=zu((function(n,t){return n*t}),1),ha=Bu("round"),pa=zu((function(n,t){return n-t}),0);return Rr.after=function(t,r){if("function"!=typeof r)throw new bn(n);return t=ef(t),function(){if(--t<1)return r.apply(this,arguments)}},Rr.ary=_o,Rr.assign=cf,Rr.assignIn=lf,Rr.assignInWith=vf,Rr.assignWith=sf,Rr.at=hf,Rr.before=go,Rr.bind=yo,Rr.bindAll=Pf,Rr.bindKey=bo,Rr.castArray=function(){if(!arguments.length)return[];var n=arguments[0];return Co(n)?n:[n]},Rr.chain=no,Rr.chunk=function(n,t,r){t=(r?fi(n,t,r):void 0===t)?1:or(ef(t),0);var e=null==n?0:n.length;if(!e||t<1)return[];for(var u=0,i=0,o=vn(Xt(e/t));u<e;)o[i++]=Ze(n,u,u+=t);return o},Rr.compact=function(n){for(var t=-1,r=null==n?0:n.length,e=0,u=[];++t<r;){var i=n[t];i&&(u[e++]=i)}return u},Rr.concat=function(){var n=arguments.length;if(!n)return[];for(var t=vn(n-1),r=arguments[0],e=n;e--;)t[e-1]=arguments[e];return lt(Co(r)?gu(r):[r],ie(t,1))},Rr.cond=function(t){var r=null==t?0:t.length,e=Ju();return t=r?ct(t,(function(t){if("function"!=typeof t[1])throw new bn(n);return[e(t[0]),t[1]]})):[],$e((function(n){for(var e=-1;++e<r;){var u=t[e];if(tt(u[0],this,n))return tt(u[1],this,n)}}))},Rr.conforms=function(n){return function(n){var t=mf(n);return function(r){return Yr(r,n,t)}}(Jr(n,1))},Rr.constant=qf,Rr.countBy=eo,Rr.create=function(n,t){var r=Er(n);return null==t?r:Kr(r,t)},Rr.curry=function n(t,r,e){var u=Du(t,8,void 0,void 0,void 0,void 0,void 0,r=e?void 0:r);return u.placeholder=n.placeholder,u},Rr.curryRight=function n(t,r,e){var u=Du(t,16,void 0,void 0,void 0,void 0,void 0,r=e?void 0:r);return u.placeholder=n.placeholder,u},Rr.debounce=wo,Rr.defaults=pf,Rr.defaultsDeep=_f,Rr.defer=mo,Rr.delay=xo,Rr.difference=Ri,Rr.differenceBy=Ei,Rr.differenceWith=zi,Rr.drop=function(n,t,r){var e=null==n?0:n.length;return e?Ze(n,(t=r||void 0===t?1:ef(t))<0?0:t,e):[]},Rr.dropRight=function(n,t,r){var e=null==n?0:n.length;return e?Ze(n,0,(t=e-(t=r||void 0===t?1:ef(t)))<0?0:t):[]},Rr.dropRightWhile=function(n,t){return n&&n.length?tu(n,Ju(t,3),!0,!0):[]},Rr.dropWhile=function(n,t){return n&&n.length?tu(n,Ju(t,3),!0):[]},Rr.fill=function(n,t,r,e){var u=null==n?0:n.length;return u?(r&&"number"!=typeof r&&fi(n,t,r)&&(r=0,e=u),function(n,t,r,e){var u=n.length;for((r=ef(r))<0&&(r=-r>u?0:u+r),(e=void 0===e||e>u?u:ef(e))<0&&(e+=u),e=r>e?0:uf(e);r<e;)n[r++]=t;return n}(n,t,r,e)):[]},Rr.filter=function(n,t){return(Co(n)?ot:ue)(n,Ju(t,3))},Rr.flatMap=function(n,t){return ie(vo(n,t),1)},Rr.flatMapDeep=function(n,t){return ie(vo(n,t),1/0)},Rr.flatMapDepth=function(n,t,r){return r=void 0===r?1:ef(r),ie(vo(n,t),r)},Rr.flatten=Ci,Rr.flattenDeep=function(n){return(null==n?0:n.length)?ie(n,1/0):[]},Rr.flattenDepth=function(n,t){return(null==n?0:n.length)?ie(n,t=void 0===t?1:ef(t)):[]},Rr.flip=function(n){return Du(n,512)},Rr.flow=Zf,Rr.flowRight=Kf,Rr.fromPairs=function(n){for(var t=-1,r=null==n?0:n.length,e={};++t<r;){var u=n[t];e[u[0]]=u[1]}return e},Rr.functions=function(n){return null==n?[]:le(n,mf(n))},Rr.functionsIn=function(n){return null==n?[]:le(n,xf(n))},Rr.groupBy=ao,Rr.initial=function(n){return(null==n?0:n.length)?Ze(n,0,-1):[]},Rr.intersection=Ui,Rr.intersectionBy=Bi,Rr.intersectionWith=Ti,Rr.invert=yf,Rr.invertBy=bf,Rr.invokeMap=co,Rr.iteratee=Gf,Rr.keyBy=lo,Rr.keys=mf,Rr.keysIn=xf,Rr.map=vo,Rr.mapKeys=function(n,t){var r={};return t=Ju(t,3),ae(n,(function(n,e,u){Vr(r,t(n,e,u),n)})),r},Rr.mapValues=function(n,t){var r={};return t=Ju(t,3),ae(n,(function(n,e,u){Vr(r,e,t(n,e,u))})),r},Rr.matches=function(n){return Re(Jr(n,1))},Rr.matchesProperty=function(n,t){return Ee(n,Jr(t,1))},Rr.memoize=jo,Rr.merge=jf,Rr.mergeWith=Af,Rr.method=Hf,Rr.methodOf=Jf,Rr.mixin=Yf,Rr.negate=Ao,Rr.nthArg=function(n){return n=ef(n),$e((function(t){return Se(t,n)}))},Rr.omit=kf,Rr.omitBy=function(n,t){return If(n,Ao(Ju(t)))},Rr.once=function(n){return go(2,n)},Rr.orderBy=function(n,t,r,e){return null==n?[]:(Co(t)||(t=null==t?[]:[t]),Co(r=e?void 0:r)||(r=null==r?[]:[r]),Le(n,t,r))},Rr.over=Xf,Rr.overArgs=ko,Rr.overEvery=na,Rr.overSome=ta,Rr.partial=Oo,Rr.partialRight=Io,Rr.partition=so,Rr.pick=Of,Rr.pickBy=If,Rr.property=ra,Rr.propertyOf=function(n){return function(t){return null==n?void 0:ve(n,t)}},Rr.pull=Di,Rr.pullAll=Ni,Rr.pullAllBy=function(n,t,r){return n&&n.length&&t&&t.length?We(n,t,Ju(r,2)):n},Rr.pullAllWith=function(n,t,r){return n&&n.length&&t&&t.length?We(n,t,void 0,r):n},Rr.pullAt=Mi,Rr.range=ea,Rr.rangeRight=ua,Rr.rearg=Ro,Rr.reject=function(n,t){return(Co(n)?ot:ue)(n,Ao(Ju(t,3)))},Rr.remove=function(n,t){var r=[];if(!n||!n.length)return r;var e=-1,u=[],i=n.length;for(t=Ju(t,3);++e<i;){var o=n[e];t(o,e,n)&&(r.push(o),u.push(e))}return Ue(n,u),r},Rr.rest=function(t,r){if("function"!=typeof t)throw new bn(n);return $e(t,r=void 0===r?r:ef(r))},Rr.reverse=Fi,Rr.sampleSize=function(n,t,r){return t=(r?fi(n,t,r):void 0===t)?1:ef(t),(Co(n)?Nr:Ne)(n,t)},Rr.set=function(n,t,r){return null==n?n:Me(n,t,r)},Rr.setWith=function(n,t,r,e){return e="function"==typeof e?e:void 0,null==n?n:Me(n,t,r,e)},Rr.shuffle=function(n){return(Co(n)?Mr:qe)(n)},Rr.slice=function(n,t,r){var e=null==n?0:n.length;return e?(r&&"number"!=typeof r&&fi(n,t,r)?(t=0,r=e):(t=null==t?0:ef(t),r=void 0===r?e:ef(r)),Ze(n,t,r)):[]},Rr.sortBy=ho,Rr.sortedUniq=function(n){return n&&n.length?He(n):[]},Rr.sortedUniqBy=function(n,t){return n&&n.length?He(n,Ju(t,2)):[]},Rr.split=function(n,t,r){return r&&"number"!=typeof r&&fi(n,t,r)&&(t=r=void 0),(r=void 0===r?4294967295:r>>>0)?(n=af(n))&&("string"==typeof t||null!=t&&!Go(t))&&!(t=Ye(t))&&Ut(n)?cu(Ft(n),0,r):n.split(t,r):[]},Rr.spread=function(t,r){if("function"!=typeof t)throw new bn(n);return r=null==r?0:or(ef(r),0),$e((function(n){var e=n[r],u=cu(n,0,r);return e&&lt(u,e),tt(t,this,u)}))},Rr.tail=function(n){var t=null==n?0:n.length;return t?Ze(n,1,t):[]},Rr.take=function(n,t,r){return n&&n.length?Ze(n,0,(t=r||void 0===t?1:ef(t))<0?0:t):[]},Rr.takeRight=function(n,t,r){var e=null==n?0:n.length;return e?Ze(n,(t=e-(t=r||void 0===t?1:ef(t)))<0?0:t,e):[]},Rr.takeRightWhile=function(n,t){return n&&n.length?tu(n,Ju(t,3),!1,!0):[]},Rr.takeWhile=function(n,t){return n&&n.length?tu(n,Ju(t,3)):[]},Rr.tap=function(n,t){return t(n),n},Rr.throttle=function(t,r,e){var u=!0,i=!0;if("function"!=typeof t)throw new bn(n);return Po(e)&&(u="leading"in e?!!e.leading:u,i="trailing"in e?!!e.trailing:i),wo(t,r,{leading:u,maxWait:r,trailing:i})},Rr.thru=to,Rr.toArray=tf,Rr.toPairs=Rf,Rr.toPairsIn=Ef,Rr.toPath=function(n){return Co(n)?ct(n,ki):Yo(n)?[n]:gu(Ai(af(n)))},Rr.toPlainObject=ff,Rr.transform=function(n,t,r){var e=Co(n),u=e||To(n)||Qo(n);if(t=Ju(t,4),null==r){var i=n&&n.constructor;r=u?e?new i:[]:Po(n)&&No(i)?Er(Gn(n)):{}}return(u?et:ae)(n,(function(n,e,u){return t(r,n,e,u)})),r},Rr.unary=function(n){return _o(n,1)},Rr.union=Pi,Rr.unionBy=qi,Rr.unionWith=Zi,Rr.uniq=function(n){return n&&n.length?Qe(n):[]},Rr.uniqBy=function(n,t){return n&&n.length?Qe(n,Ju(t,2)):[]},Rr.uniqWith=function(n,t){return t="function"==typeof t?t:void 0,n&&n.length?Qe(n,void 0,t):[]},Rr.unset=function(n,t){return null==n||Xe(n,t)},Rr.unzip=Ki,Rr.unzipWith=Vi,Rr.update=function(n,t,r){return null==n?n:nu(n,t,ou(r))},Rr.updateWith=function(n,t,r,e){return e="function"==typeof e?e:void 0,null==n?n:nu(n,t,ou(r),e)},Rr.values=zf,Rr.valuesIn=function(n){return null==n?[]:It(n,xf(n))},Rr.without=Gi,Rr.words=Mf,Rr.wrap=function(n,t){return Oo(ou(t),n)},Rr.xor=Hi,Rr.xorBy=Ji,Rr.xorWith=Yi,Rr.zip=Qi,Rr.zipObject=function(n,t){return uu(n||[],t||[],Pr)},Rr.zipObjectDeep=function(n,t){return uu(n||[],t||[],Me)},Rr.zipWith=Xi,Rr.entries=Rf,Rr.entriesIn=Ef,Rr.extend=lf,Rr.extendWith=vf,Yf(Rr,Rr),Rr.add=fa,Rr.attempt=Ff,Rr.camelCase=Sf,Rr.capitalize=Lf,Rr.ceil=aa,Rr.clamp=function(n,t,r){return void 0===r&&(r=t,t=void 0),void 0!==r&&(r=(r=of(r))==r?r:0),void 0!==t&&(t=(t=of(t))==t?t:0),Hr(of(n),t,r)},Rr.clone=function(n){return Jr(n,4)},Rr.cloneDeep=function(n){return Jr(n,5)},Rr.cloneDeepWith=function(n,t){return Jr(n,5,t="function"==typeof t?t:void 0)},Rr.cloneWith=function(n,t){return Jr(n,4,t="function"==typeof t?t:void 0)},Rr.conformsTo=function(n,t){return null==t||Yr(n,t,mf(t))},Rr.deburr=Cf,Rr.defaultTo=function(n,t){return null==n||n!=n?t:n},Rr.divide=ca,Rr.endsWith=function(n,t,r){n=af(n),t=Ye(t);var e=n.length,u=r=void 0===r?e:Hr(ef(r),0,e);return(r-=t.length)>=0&&n.slice(r,u)==t},Rr.eq=Eo,Rr.escape=function(n){return(n=af(n))&&W.test(n)?n.replace(L,Ct):n},Rr.escapeRegExp=function(n){return(n=af(n))&&F.test(n)?n.replace(M,"\\$&"):n},Rr.every=function(n,t,r){var e=Co(n)?it:re;return r&&fi(n,t,r)&&(t=void 0),e(n,Ju(t,3))},Rr.find=uo,Rr.findIndex=Si,Rr.findKey=function(n,t){return _t(n,Ju(t,3),ae)},Rr.findLast=io,Rr.findLastIndex=Li,Rr.findLastKey=function(n,t){return _t(n,Ju(t,3),ce)},Rr.floor=la,Rr.forEach=oo,Rr.forEachRight=fo,Rr.forIn=function(n,t){return null==n?n:oe(n,Ju(t,3),xf)},Rr.forInRight=function(n,t){return null==n?n:fe(n,Ju(t,3),xf)},Rr.forOwn=function(n,t){return n&&ae(n,Ju(t,3))},Rr.forOwnRight=function(n,t){return n&&ce(n,Ju(t,3))},Rr.get=df,Rr.gt=zo,Rr.gte=So,Rr.has=function(n,t){return null!=n&&ei(n,t,_e)},Rr.hasIn=gf,Rr.head=Wi,Rr.identity=Vf,Rr.includes=function(n,t,r,e){n=Uo(n)?n:zf(n),r=r&&!e?ef(r):0;var u=n.length;return r<0&&(r=or(u+r,0)),Jo(n)?r<=u&&n.indexOf(t,r)>-1:!!u&&gt(n,t,r)>-1},Rr.indexOf=function(n,t,r){var e=null==n?0:n.length;if(!e)return-1;var u=null==r?0:ef(r);return u<0&&(u=or(e+u,0)),gt(n,t,u)},Rr.inRange=function(n,t,r){return t=rf(t),void 0===r?(r=t,t=0):r=rf(r),function(n,t,r){return n>=fr(t,r)&&n<or(t,r)}(n=of(n),t,r)},Rr.invoke=wf,Rr.isArguments=Lo,Rr.isArray=Co,Rr.isArrayBuffer=Wo,Rr.isArrayLike=Uo,Rr.isArrayLikeObject=Bo,Rr.isBoolean=function(n){return!0===n||!1===n||qo(n)&&he(n)==i},Rr.isBuffer=To,Rr.isDate=$o,Rr.isElement=function(n){return qo(n)&&1===n.nodeType&&!Vo(n)},Rr.isEmpty=function(n){if(null==n)return!0;if(Uo(n)&&(Co(n)||"string"==typeof n||"function"==typeof n.splice||To(n)||Qo(n)||Lo(n)))return!n.length;var t=ri(n);if(t==l||t==p)return!n.size;if(vi(n))return!Ae(n).length;for(var r in n)if(kn.call(n,r))return!1;return!0},Rr.isEqual=function(n,t){return we(n,t)},Rr.isEqualWith=function(n,t,r){var e=(r="function"==typeof r?r:void 0)?r(n,t):void 0;return void 0===e?we(n,t,void 0,r):!!e},Rr.isError=Do,Rr.isFinite=function(n){return"number"==typeof n&&er(n)},Rr.isFunction=No,Rr.isInteger=Mo,Rr.isLength=Fo,Rr.isMap=Zo,Rr.isMatch=function(n,t){return n===t||me(n,t,Qu(t))},Rr.isMatchWith=function(n,t,r){return r="function"==typeof r?r:void 0,me(n,t,Qu(t),r)},Rr.isNaN=function(n){return Ko(n)&&n!=+n},Rr.isNative=function(n){if(li(n))throw new hn("Unsupported core-js use. Try https://npms.io/search?q=ponyfill.");return xe(n)},Rr.isNil=function(n){return null==n},Rr.isNull=function(n){return null===n},Rr.isNumber=Ko,Rr.isObject=Po,Rr.isObjectLike=qo,Rr.isPlainObject=Vo,Rr.isRegExp=Go,Rr.isSafeInteger=function(n){return Mo(n)&&n>=-9007199254740991&&n<=9007199254740991},Rr.isSet=Ho,Rr.isString=Jo,Rr.isSymbol=Yo,Rr.isTypedArray=Qo,Rr.isUndefined=function(n){return void 0===n},Rr.isWeakMap=function(n){return qo(n)&&ri(n)==g},Rr.isWeakSet=function(n){return qo(n)&&"[object WeakSet]"==he(n)},Rr.join=function(n,t){return null==n?"":ur.call(n,t)},Rr.kebabCase=Wf,Rr.last=$i,Rr.lastIndexOf=function(n,t,r){var e=null==n?0:n.length;if(!e)return-1;var u=e;return void 0!==r&&(u=(u=ef(r))<0?or(e+u,0):fr(u,e-1)),t==t?function(n,t,r){for(var e=r+1;e--;)if(n[e]===t)return e;return e}(n,t,u):dt(n,bt,u,!0)},Rr.lowerCase=Uf,Rr.lowerFirst=Bf,Rr.lt=Xo,Rr.lte=nf,Rr.max=function(n){return n&&n.length?ee(n,Vf,pe):void 0},Rr.maxBy=function(n,t){return n&&n.length?ee(n,Ju(t,2),pe):void 0},Rr.mean=function(n){return wt(n,Vf)},Rr.meanBy=function(n,t){return wt(n,Ju(t,2))},Rr.min=function(n){return n&&n.length?ee(n,Vf,Oe):void 0},Rr.minBy=function(n,t){return n&&n.length?ee(n,Ju(t,2),Oe):void 0},Rr.stubArray=ia,Rr.stubFalse=oa,Rr.stubObject=function(){return{}},Rr.stubString=function(){return""},Rr.stubTrue=function(){return!0},Rr.multiply=sa,Rr.nth=function(n,t){return n&&n.length?Se(n,ef(t)):void 0},Rr.noConflict=function(){return Pn._===this&&(Pn._=$n),this},Rr.noop=Qf,Rr.now=po,Rr.pad=function(n,t,r){n=af(n);var e=(t=ef(t))?Mt(n):0;if(!t||e>=t)return n;var u=(t-e)/2;return Lu(nr(u),r)+n+Lu(Xt(u),r)},Rr.padEnd=function(n,t,r){n=af(n);var e=(t=ef(t))?Mt(n):0;return t&&e<t?n+Lu(t-e,r):n},Rr.padStart=function(n,t,r){n=af(n);var e=(t=ef(t))?Mt(n):0;return t&&e<t?Lu(t-e,r)+n:n},Rr.parseInt=function(n,t,r){return r||null==t?t=0:t&&(t=+t),cr(af(n).replace(q,""),t||0)},Rr.random=function(n,t,r){if(r&&"boolean"!=typeof r&&fi(n,t,r)&&(t=r=void 0),void 0===r&&("boolean"==typeof t?(r=t,t=void 0):"boolean"==typeof n&&(r=n,n=void 0)),void 0===n&&void 0===t?(n=0,t=1):(n=rf(n),void 0===t?(t=n,n=0):t=rf(t)),n>t){var e=n;n=t,t=e}if(r||n%1||t%1){var u=lr();return fr(n+u*(t-n+Dn("1e-"+((u+"").length-1))),t)}return Be(n,t)},Rr.reduce=function(n,t,r){var e=Co(n)?vt:jt,u=arguments.length<3;return e(n,Ju(t,4),r,u,ne)},Rr.reduceRight=function(n,t,r){var e=Co(n)?st:jt,u=arguments.length<3;return e(n,Ju(t,4),r,u,te)},Rr.repeat=function(n,t,r){return t=(r?fi(n,t,r):void 0===t)?1:ef(t),Te(af(n),t)},Rr.replace=function(){var n=arguments,t=af(n[0]);return n.length<3?t:t.replace(n[1],n[2])},Rr.result=function(n,t,r){var e=-1,u=(t=fu(t,n)).length;for(u||(u=1,n=void 0);++e<u;){var i=null==n?void 0:n[ki(t[e])];void 0===i&&(e=u,i=r),n=No(i)?i.call(n):i}return n},Rr.round=ha,Rr.runInContext=an,Rr.sample=function(n){return(Co(n)?Dr:De)(n)},Rr.size=function(n){if(null==n)return 0;if(Uo(n))return Jo(n)?Mt(n):n.length;var t=ri(n);return t==l||t==p?n.size:Ae(n).length},Rr.snakeCase=Tf,Rr.some=function(n,t,r){var e=Co(n)?ht:Ke;return r&&fi(n,t,r)&&(t=void 0),e(n,Ju(t,3))},Rr.sortedIndex=function(n,t){return Ve(n,t)},Rr.sortedIndexBy=function(n,t,r){return Ge(n,t,Ju(r,2))},Rr.sortedIndexOf=function(n,t){var r=null==n?0:n.length;if(r){var e=Ve(n,t);if(e<r&&Eo(n[e],t))return e}return-1},Rr.sortedLastIndex=function(n,t){return Ve(n,t,!0)},Rr.sortedLastIndexBy=function(n,t,r){return Ge(n,t,Ju(r,2),!0)},Rr.sortedLastIndexOf=function(n,t){if(null==n?0:n.length){var r=Ve(n,t,!0)-1;if(Eo(n[r],t))return r}return-1},Rr.startCase=$f,Rr.startsWith=function(n,t,r){return n=af(n),r=null==r?0:Hr(ef(r),0,n.length),t=Ye(t),n.slice(r,r+t.length)==t},Rr.subtract=pa,Rr.sum=function(n){return n&&n.length?At(n,Vf):0},Rr.sumBy=function(n,t){return n&&n.length?At(n,Ju(t,2)):0},Rr.template=function(n,t,r){var e=Rr.templateSettings;r&&fi(n,t,r)&&(t=void 0),n=af(n),t=vf({},t,e,Nu);var u,i,o=vf({},t.imports,e.imports,Nu),f=mf(o),a=It(o,f),c=0,l=t.interpolate||on,v="__p += '",s=gn((t.escape||on).source+"|"+l.source+"|"+(l===T?Y:on).source+"|"+(t.evaluate||on).source+"|$","g"),h="//# sourceURL="+(kn.call(t,"sourceURL")?(t.sourceURL+"").replace(/[\r\n]/g," "):"lodash.templateSources["+ ++Un+"]")+"\n";n.replace(s,(function(t,r,e,o,f,a){return e||(e=o),v+=n.slice(c,a).replace(fn,Wt),r&&(u=!0,v+="' +\n__e("+r+") +\n'"),f&&(i=!0,v+="';\n"+f+";\n__p += '"),e&&(v+="' +\n((__t = ("+e+")) == null ? '' : __t) +\n'"),c=a+t.length,t})),v+="';\n";var p=kn.call(t,"variable")&&t.variable;p||(v="with (obj) {\n"+v+"\n}\n"),v=(i?v.replace(R,""):v).replace(E,"$1").replace(z,"$1;"),v="function("+(p||"obj")+") {\n"+(p?"":"obj || (obj = {});\n")+"var __t, __p = ''"+(u?", __e = _.escape":"")+(i?", __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n":";\n")+v+"return __p\n}";var _=Ff((function(){return pn(f,h+"return "+v).apply(void 0,a)}));if(_.source=v,Do(_))throw _;return _},Rr.times=function(n,t){if((n=ef(n))<1||n>9007199254740991)return[];var r=4294967295,e=fr(n,4294967295);n-=4294967295;for(var u=kt(e,t=Ju(t));++r<n;)t(r);return u},Rr.toFinite=rf,Rr.toInteger=ef,Rr.toLength=uf,Rr.toLower=function(n){return af(n).toLowerCase()},Rr.toNumber=of,Rr.toSafeInteger=function(n){return n?Hr(ef(n),-9007199254740991,9007199254740991):0===n?n:0},Rr.toString=af,Rr.toUpper=function(n){return af(n).toUpperCase()},Rr.trim=function(n,t,r){if((n=af(n))&&(r||void 0===t))return n.replace(P,"");if(!n||!(t=Ye(t)))return n;var e=Ft(n),u=Ft(t);return cu(e,Et(e,u),zt(e,u)+1).join("")},Rr.trimEnd=function(n,t,r){if((n=af(n))&&(r||void 0===t))return n.replace(Z,"");if(!n||!(t=Ye(t)))return n;var e=Ft(n);return cu(e,0,zt(e,Ft(t))+1).join("")},Rr.trimStart=function(n,t,r){if((n=af(n))&&(r||void 0===t))return n.replace(q,"");if(!n||!(t=Ye(t)))return n;var e=Ft(n);return cu(e,Et(e,Ft(t))).join("")},Rr.truncate=function(n,t){var r=30,e="...";if(Po(t)){var u="separator"in t?t.separator:u;r="length"in t?ef(t.length):r,e="omission"in t?Ye(t.omission):e}var i=(n=af(n)).length;if(Ut(n)){var o=Ft(n);i=o.length}if(r>=i)return n;var f=r-Mt(e);if(f<1)return e;var a=o?cu(o,0,f).join(""):n.slice(0,f);if(void 0===u)return a+e;if(o&&(f+=a.length-f),Go(u)){if(n.slice(f).search(u)){var c,l=a;for(u.global||(u=gn(u.source,af(Q.exec(u))+"g")),u.lastIndex=0;c=u.exec(l);)var v=c.index;a=a.slice(0,void 0===v?f:v)}}else if(n.indexOf(Ye(u),f)!=f){var s=a.lastIndexOf(u);s>-1&&(a=a.slice(0,s))}return a+e},Rr.unescape=function(n){return(n=af(n))&&C.test(n)?n.replace(S,Pt):n},Rr.uniqueId=function(n){var t=++On;return af(n)+t},Rr.upperCase=Df,Rr.upperFirst=Nf,Rr.each=oo,Rr.eachRight=fo,Rr.first=Wi,Yf(Rr,(va={},ae(Rr,(function(n,t){kn.call(Rr.prototype,t)||(va[t]=n)})),va),{chain:!1}),Rr.VERSION="4.17.15",et(["bind","bindKey","curry","curryRight","partial","partialRight"],(function(n){Rr[n].placeholder=Rr})),et(["drop","take"],(function(n,t){Lr.prototype[n]=function(r){r=void 0===r?1:or(ef(r),0);var e=this.__filtered__&&!t?new Lr(this):this.clone();return e.__filtered__?e.__takeCount__=fr(r,e.__takeCount__):e.__views__.push({size:fr(r,4294967295),type:n+(e.__dir__<0?"Right":"")}),e},Lr.prototype[n+"Right"]=function(t){return this.reverse()[n](t).reverse()}})),et(["filter","map","takeWhile"],(function(n,t){var r=t+1,e=1==r||3==r;Lr.prototype[n]=function(n){var t=this.clone();return t.__iteratees__.push({iteratee:Ju(n,3),type:r}),t.__filtered__=t.__filtered__||e,t}})),et(["head","last"],(function(n,t){var r="take"+(t?"Right":"");Lr.prototype[n]=function(){return this[r](1).value()[0]}})),et(["initial","tail"],(function(n,t){var r="drop"+(t?"":"Right");Lr.prototype[n]=function(){return this.__filtered__?new Lr(this):this[r](1)}})),Lr.prototype.compact=function(){return this.filter(Vf)},Lr.prototype.find=function(n){return this.filter(n).head()},Lr.prototype.findLast=function(n){return this.reverse().find(n)},Lr.prototype.invokeMap=$e((function(n,t){return"function"==typeof n?new Lr(this):this.map((function(r){return ye(r,n,t)}))})),Lr.prototype.reject=function(n){return this.filter(Ao(Ju(n)))},Lr.prototype.slice=function(n,t){n=ef(n);var r=this;return r.__filtered__&&(n>0||t<0)?new Lr(r):(n<0?r=r.takeRight(-n):n&&(r=r.drop(n)),void 0!==t&&(r=(t=ef(t))<0?r.dropRight(-t):r.take(t-n)),r)},Lr.prototype.takeRightWhile=function(n){return this.reverse().takeWhile(n).reverse()},Lr.prototype.toArray=function(){return this.take(4294967295)},ae(Lr.prototype,(function(n,t){var r=/^(?:filter|find|map|reject)|While$/.test(t),e=/^(?:head|last)$/.test(t),u=Rr[e?"take"+("last"==t?"Right":""):t],i=e||/^find/.test(t);u&&(Rr.prototype[t]=function(){var t=this.__wrapped__,o=e?[1]:arguments,f=t instanceof Lr,a=o[0],c=f||Co(t),l=function(n){var t=u.apply(Rr,lt([n],o));return e&&v?t[0]:t};c&&r&&"function"==typeof a&&1!=a.length&&(f=c=!1);var v=this.__chain__,s=!!this.__actions__.length,h=i&&!v,p=f&&!s;if(!i&&c){t=p?t:new Lr(this);var _=n.apply(t,o);return _.__actions__.push({func:to,args:[l],thisArg:void 0}),new Sr(_,v)}return h&&p?n.apply(this,o):(_=this.thru(l),h?e?_.value()[0]:_.value():_)})})),et(["pop","push","shift","sort","splice","unshift"],(function(n){var t=wn[n],r=/^(?:push|sort|unshift)$/.test(n)?"tap":"thru",e=/^(?:pop|shift)$/.test(n);Rr.prototype[n]=function(){var n=arguments;if(e&&!this.__chain__){var u=this.value();return t.apply(Co(u)?u:[],n)}return this[r]((function(r){return t.apply(Co(r)?r:[],n)}))}})),ae(Lr.prototype,(function(n,t){var r=Rr[t];if(r){var e=r.name+"";kn.call(br,e)||(br[e]=[]),br[e].push({name:t,func:r})}})),br[Ru(void 0,2).name]=[{name:"wrapper",func:void 0}],Lr.prototype.clone=function(){var n=new Lr(this.__wrapped__);return n.__actions__=gu(this.__actions__),n.__dir__=this.__dir__,n.__filtered__=this.__filtered__,n.__iteratees__=gu(this.__iteratees__),n.__takeCount__=this.__takeCount__,n.__views__=gu(this.__views__),n},Lr.prototype.reverse=function(){if(this.__filtered__){var n=new Lr(this);n.__dir__=-1,n.__filtered__=!0}else(n=this.clone()).__dir__*=-1;return n},Lr.prototype.value=function(){var n=this.__wrapped__.value(),t=this.__dir__,r=Co(n),e=t<0,u=r?n.length:0,i=function(n,t,r){var e=-1,u=r.length;for(;++e<u;){var i=r[e],o=i.size;switch(i.type){case"drop":n+=o;break;case"dropRight":t-=o;break;case"take":t=fr(t,n+o);break;case"takeRight":n=or(n,t-o)}}return{start:n,end:t}}(0,u,this.__views__),o=i.start,f=i.end,a=f-o,c=e?f:o-1,l=this.__iteratees__,v=l.length,s=0,h=fr(a,this.__takeCount__);if(!r||!e&&u==a&&h==a)return ru(n,this.__actions__);var p=[];n:for(;a--&&s<h;){for(var _=-1,d=n[c+=t];++_<v;){var g=l[_],y=g.iteratee,b=g.type,w=y(d);if(2==b)d=w;else if(!w){if(1==b)continue n;break n}}p[s++]=d}return p},Rr.prototype.at=ro,Rr.prototype.chain=function(){return no(this)},Rr.prototype.commit=function(){return new Sr(this.value(),this.__chain__)},Rr.prototype.next=function(){void 0===this.__values__&&(this.__values__=tf(this.value()));var n=this.__index__>=this.__values__.length;return{done:n,value:n?void 0:this.__values__[this.__index__++]}},Rr.prototype.plant=function(n){for(var t,r=this;r instanceof zr;){var e=Ii(r);e.__index__=0,e.__values__=void 0,t?u.__wrapped__=e:t=e;var u=e;r=r.__wrapped__}return u.__wrapped__=n,t},Rr.prototype.reverse=function(){var n=this.__wrapped__;if(n instanceof Lr){var t=n;return this.__actions__.length&&(t=new Lr(this)),(t=t.reverse()).__actions__.push({func:to,args:[Fi],thisArg:void 0}),new Sr(t,this.__chain__)}return this.thru(Fi)},Rr.prototype.toJSON=Rr.prototype.valueOf=Rr.prototype.value=function(){return ru(this.__wrapped__,this.__actions__)},Rr.prototype.first=Rr.prototype.head,Vt&&(Rr.prototype[Vt]=function(){return this}),Rr}();"function"==typeof define&&"object"==typeof define.amd&&define.amd?(Pn._=qt,define((function(){return qt}))):Zn?((Zn.exports=qt)._=qt,qn._=qt):Pn._=qt}).call(this);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
