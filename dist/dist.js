class Attribute{constructor(t,e){this.table=t,this.name=e,this.attr=e,this.weight=0,this.diffEdges=0,this.randomEdges=0,this.sameEdges=0,this.mutable=!0,this.id=e}compareTo(t){return this.weight>t.weight?-1:this.weight<t.weight?1:0}simplifyName(t){return t=t.replace(/"/g,"").replace(/=/g,"").replace(/ /g,"")}}
class DumbHeuristic{constructor(t){this.g=t}arrange(){for(let t=0;t<this.g.maxDepth;t++){let e=g.edgeIndex[t];e=e.sort((t,e)=>t.compareTo(e));for(let t=0;t<e.length-1;t++){let i=e[t],r=e[t+1];i.leftTable==r.leftTable&&(i.leftAttribute.mutable||r.leftAttribute.mutable)&&(this.swap(i.leftAttribute,r.leftAttribute),(i.rightAttribute.mutable||r.rightAttribute.mutable)&&(i.rightTable==r.rightTable?this.swap(i.rightAttribute,r.rightAttribute):this.swap(i.rightTable,r.rightTable)))}}}swap(t,e){let i=t.weight;t.weight=e.weight,e.weight=i}}
class Edge{constructor(t,e,i,h){this.leftTable=t,this.att1=e,this.leftAttribute=e,this.rightTable=i,this.att2=h,this.rightAttribute=h}compareTo(t){if(this.leftTable==t.leftTable)if(this.rightTable==t.rightTable){if(this.leftAttribute.weight>t.leftAttribute.weight&&this.rightAttribute.weight<t.rightAttribute.weight)return!0;if(this.leftAttribute.weight<t.leftAttribute.weight&&this.rightAttribute.weight>t.rightAttribute.weight)return!0}else{if(this.rightTable.weight<t.rightTable.weight&&this.leftAttribute.weight>t.leftAttribute.weight)return!0;if(this.rightTable.weight>t.rightTable.weight&&this.leftAttribute.weight<t.leftAttribute.weight)return!0}else if(this.rightTable==t.rightTable)if(this.leftTable==t.leftTable){if(this.leftAttribute.weight>t.leftAttribute.weight&&this.rightAttribute.weight<t.rightAttribute.weight)return!0;if(this.leftAttribute.weight<t.leftAttribute.weight&&this.rightAttribute.weight>t.rightAttribute.weight)return!0}else{if(this.leftTable.weight<t.leftTable.weight&&this.rightAttribute.weight>t.rightAttribute.weight)return!0;if(this.leftTable.weight>t.leftTable.weight&&this.rightAttribute.weight<t.rightAttribute.weight)return!0}else{if(this.leftTable.weight<t.leftTable.weight&&this.rightTable.weight>t.rightTable.weight)return!0;if(this.leftTable.weight>t.leftTable.weight&&this.rightTable.weight<t.rightTable.weight)return!0}return!1}compareSelfEdgeTo(t){if(this.leftTable.depth==this.rightTable.depth&&t.leftTable.depth==t.rightTable.depth){if(this.leftTable==t.leftTable)if(this.rightTable==t.rightTable){if(this.leftAttribute.weight<t.leftAttribute.weight&&this.rightAttribute.weight<t.rightAttribute.weight)return!0;if(this.leftAttribute.weight>t.leftAttribute.weight&&this.rightAttribute.weight>t.rightAttribute.weight)return!0}else{if(this.leftAttribute.weight<t.leftAttribute.weight&&this.rightTable.weight<t.rightTable.weight)return!0;if(this.leftAttribute.weight>t.leftAttribute.weight&&this.rightTable.weight>t.rightTable.weight)return!0}else if(this.leftTable==t.rightTable)if(this.rightTable==t.leftTable){if(this.rightAttribute.weight<t.leftAttribute.weight&&this.leftAttribute.weight<t.rightAttribute.weight)return!0;if(this.rightAttribute.weight>t.leftAttribute.weight&&this.leftAttribute.weight>t.rightAttribute.weight)return!0}else{if(this.leftAttribute.weight<t.rightAttribute.weight&&this.rightTable.weight<t.leftTable.weight)return!0;if(this.leftAttribute.weight>t.rightAttribute.weight&&this.rightTable.weight>t.leftTable.weight)return!0}else if(this.rightTable==t.leftTable)if(this.leftTable==t.rightTable){if(this.rightAttribute.weight<t.leftAttribute.weight&&this.leftAttribute.weight<t.rightAttribute.weight)return!0;if(this.rightAttribute.weight>t.leftAttribute.weight&&this.leftAttribute.weight>t.rightAttribute.weight)return!0}else{if(this.rightAttribute.weight<t.leftAttribute.weight&&this.leftTable.weight<t.rightTable.weight)return!0;if(this.rightAttribute.weight>t.leftAttribute.weight&&this.leftTable.weight>t.rightTable.weight)return!0}else if(this.rightTable==t.rightTable)if(this.leftTable==t.leftTable){if(this.leftAttribute.weight<t.leftAttribute.weight&&this.rightAttribute.weight<t.rightAttribute.weight)return!0;if(this.leftAttribute.weight>t.leftAttribute.weight&&this.rightAttribute.weight>t.rightAttribute.weight)return!0}else{if(this.rightAttribute.weight<t.rightAttribute.weight&&this.leftTable.weight<t.leftTable.weight)return!0;if(this.rightAttribute.weight>t.rightAttribute.weight&&this.leftTable.weight>t.leftTable.weight)return!0}}else if(this.leftTable.depth==this.rightTable.depth)if(this.leftTable==t.leftTable){if(this.leftAttribute.weight<t.leftAttribute.weight&&this.rightTable.weight>t.leftTable.weight)return!0;if(this.leftAttribute.weight>t.leftAttribute.weight&&this.rightTable.weight<t.leftTable.weight)return!0}else if(this.rightTable==t.rightTable){if(this.rightAttribute.weight<t.leftAttribute.weight&&this.leftTable.weight>t.leftTable.weight)return!0;if(this.rightAttribute.weight>t.leftAttribute.weight&&this.leftTable.weight<t.leftTable.weight)return!0}else{if(this.leftTable.weight>t.leftTable.weight&&this.rightTable.weight<t.leftTable.weight)return!0;if(this.leftTable.weight<t.leftTable.weight&&this.rightTable.weight>t.leftTable.weight)return!0}else if(t.leftTable==this.leftTable){if(t.leftAttribute.weight<this.leftAttribute.weight&&t.rightTable.weight>this.leftTable.weight)return!0;if(t.leftAttribute.weight>this.leftAttribute.weight&&t.rightTable.weight<this.leftTable.weight)return!0}else if(t.rightTable==this.leftTable){if(t.rightAttribute.weight<this.leftAttribute.weight&&t.leftTable.weight>this.leftTable.weight)return!0;if(t.rightAttribute.weight>this.leftAttribute.weight&&t.leftTable.weight<this.leftTable.weight)return!0}else{if(t.leftTable.weight<this.leftAttribute.weight&&t.rightTable.weight>this.leftAttribute.weight)return!0;if(t.leftTable.weight>this.leftAttribute.weight&&t.rightTable.weight<this.leftAttribute.weight)return!0}}crosses(t){return this.leftTable.depth==this.rightTable.depth||t.leftTable.depth==t.rightTable.depth?this.compareSelfEdgeTo(t):!!this.compareTo(t)}compare(t){if(null==t)return 1;this.compareAttributes(this.leftTable,this.leftAttribute,t.leftTable,t.leftAttribute)}compareAttributes(t,e,i,h){let r=t.compareTo(i);return 0==r&&(r=e.compareTo(h)),r}isSameRankEdge(){return this.leftTable.depth==this.rightTable.depth}getBendiness(){let t=0,e=10/(10*this.leftTable.graph.baseRowDistance);return t=this.rightTable.weight+this.rightAttribute.weight*e+this.rightTable.verticalAttrOffset*e-(this.leftTable.weight+this.leftAttribute.weight*e+this.leftTable.verticalAttrOffset*e),t=Math.round(1e3*t)/1e3,Math.abs(t)}}
class Gansner{constructor(t){this.g=t,this.max_iterations=11,this.elapsedTime=0}median(t){return(t=t.sort()).length%2==0?(t[t.length/2]+t[t.length/2-1])/2:t[(t.length-1)/2]}applyArrangement(t){for(let e of t.tables){let t=this.g.tables.find(t=>t.name==e.name);t.weight=e.weight;for(let i of e.attributes){t.attributes.find(t=>t.name==i.name).weight=i.weight}}}arrange(){let t=(new Date).getTime(),e=this.g.getEdgeCrossings();for(let t=0;t<this.max_iterations;t++){let i=_.cloneDeep(this.g);t%2==0?this.arrangeLeft(i):this.arrangeRight(i),this.transpose(i);let a=i.getEdgeCrossings();a<=e&&(this.applyArrangement(i),e=a)}this.elapsedTime=(new Date).getTime()-t}arrangeLeft(t){for(let e=1;e<=t.maxDepth;e++){let i=t.tableIndex[e],a=t.edgeIndex[e-1];for(let t of i){let e=a.filter(e=>e.rightTable==t&&e.leftTable.depth!=e.rightTable.depth).map(t=>parseFloat(t.leftTable.weight));t.weight=this.median(e);for(let e of t.attributes){let i=a.filter(t=>t.rightAttribute==e&&t.leftTable.depth!=t.rightTable.depth).map(t=>parseFloat(t.leftTable.weight)),l=a.filter(t=>t.rightAttribute==e&&t.leftTable.depth!=t.rightTable.depth).map(t=>parseFloat(t.leftAttribute.weight));0!=i.length&&(e.weight=this.median(i)+this.median(l)/t.attributes.length)}}t.setExactWeights()}}arrangeRight(t){for(let e=t.maxDepth-1;e>0;e--){let i=t.tableIndex[e],a=t.edgeIndex[e];for(let t of i){let e=a.filter(e=>e.leftTable==t&&e.leftTable.depth!=e.rightTable.depth).map(t=>parseFloat(t.rightTable.weight));t.weight=this.median(e);for(let e of t.attributes){let i=a.filter(t=>t.leftAttribute==e&&t.leftTable.depth!=t.rightTable.depth).map(t=>parseFloat(t.rightTable.weight)),l=a.filter(t=>t.leftAttribute==e&&t.leftTable.depth!=t.rightTable.depth).map(t=>parseFloat(t.rightAttribute.weight));0!=i.length&&(e.weight=this.median(i)+this.median(l)/t.attributes.length)}}t.setExactWeights()}}transpose(t){let e=!0;for(;e;){e=!1;for(let i=0;i<=t.maxDepth;i++){let a=t.getEdgeCrossingsAtDepth(i),l=t.tableIndex[i];for(let h=0;h<l.length-1;h++){let r=l[h],s=l[h+1];this.swap(r,s),t.getEdgeCrossingsAtDepth(i)+t.getEdgeCrossingsAtDepth(i+1)<a?e=!0:this.swap(r,s)}for(let h of l)for(let l=0;l<h.attributes.length-1;l++){let r=h.attributes[l],s=h.attributes[l+1];this.swap(r,s),t.getEdgeCrossingsAtDepth(i)+t.getEdgeCrossingsAtDepth(i+1)<a?e=!0:this.swap(r,s)}}}}swap(t,e){let i=t.weight;t.weight=e.weight,e.weight=i}}
class GansnerSameRank{constructor(t){this.g=t,this.max_iterations=6,this.elapsedTime=0,this.iterations=[],this.cur_iteration=0}apply_iteration(t){this.applyArrangement(this.iterations[t])}quicksort(t){if(t.length<=1)return t;for(var e=t[0],i=[],a=[],s=1;s<t.length;s++)t[s]<e?i.push(t[s]):a.push(t[s]);return quicksort(i).concat(e,quicksort(a))}median(t){return(t=t.sort()).length%2==0?(t[t.length/2]+t[t.length/2-1])/2:t[(t.length-1)/2]}applyArrangement(t){for(let e of t.tables){let t=this.g.tables.find(t=>t.name==e.name);t.weight=e.weight,t.assignedWeight=e.assignedWeight;for(let i of e.attributes){let e=t.attributes.find(t=>t.name==i.name);e.weight=i.weight,e.assignedWeight=i.assignedWeight}}}arrange(){let t=(new Date).getTime();this.g.setExactWeights();let e=this.g.getEdgeCrossings();for(let t=0;t<this.max_iterations;t++){this.cur_iteration=t;let i=_.cloneDeep(this.g);t%2==0?this.arrangeLeft(i):this.arrangeRight(i),this.transpose(i);let a=i.getEdgeCrossings();a<=e&&(this.applyArrangement(i),e=a),this.iterations[this.cur_iteration]=_.cloneDeep(i)}this.elapsedTime=(new Date).getTime()-t}arrangeLeft(t){console.log("Left");let e={},i={};for(let a=1;a<=t.maxDepth+1;a++){let s=t.tableIndex[a],r=t.edgeIndex[a-1];for(let t in s){let a=s[t],n=r.filter(t=>t.rightTable==a&&!this.isSameRankEdge(t)).map(t=>parseFloat(t.leftTable.weight)),l=this.median(n);isNaN(l)||(e[a.name]=l),i[a.name]={};for(let t of a.attributes){let e=r.filter(e=>e.rightAttribute==t&&!this.isSameRankEdge(e)).map(t=>parseFloat(t.leftTable.weight)),s=r.filter(e=>e.rightAttribute==t&&!this.isSameRankEdge(e)).map(t=>parseFloat(t.leftAttribute.weight)),n=parseFloat(this.median(e))+parseFloat(this.median(s)/a.attributes.length);isNaN(n)||(i[a.name][t.name]=n)}}}this.reorder(t,e,i)}arrangeRight(t){console.log("Right");let e={},i={};for(let a=t.maxDepth-1;a>0;a--){let s=t.tableIndex[a],r=t.edgeIndex[a];for(let t of s){let a=r.filter(e=>e.leftTable==t).map(t=>parseFloat(t.rightTable.weight)),s=parseFloat(this.median(a));isNaN(s)||(e[t.name]=s),i[t.name]={};for(let e of t.attributes){let a=r.filter(t=>t.leftAttribute==e).map(t=>parseFloat(t.rightTable.weight)),s=r.filter(t=>t.leftAttribute==e).map(t=>parseFloat(t.rightAttribute.weight)),n=parseFloat(this.median(a))+parseFloat(this.median(s)/t.attributes.length);isNaN(n)||(i[t.name][e.name]=n)}}}this.reorder(t,e,i)}isSameRankEdge(t){return t.leftTable.depth==t.rightTable.depth}reorder(t,e,i){for(let a in t.tableIndex)if(0!=a){for(let s in t.tableIndex[a]){let r=t.tableIndex[a][s];if(null!=e[r.name]){r.weight=e[r.name],r.assignedWeight=e[r.name];for(let t in r.attributes){let e=r.attributes[t];e.weight=i[r.name][e.name],e.assignedWeight=i[r.name][e.name]}r.attributes.sort((t,e)=>isNaN(t.weight)||isNaN(e.weight)?0:t.weight>e.weight?1:-1);for(let t in r.attributes){r.attributes[t].weight=t}}}t.tableIndex[a].sort((t,e)=>isNaN(t.weight)||isNaN(e.weight)?0:t.weight>e.weight?1:-1);for(let e in t.tableIndex[a]){t.tableIndex[a][e].weight=e}}}transpose(t){let e=!0;for(;e;){e=!1;for(let i=0;i<=t.maxDepth;i++){let a=t.getEdgeCrossingsAtDepth(i),s=t.tableIndex[i];for(let r=0;r<s.length-1;r++){let n=s[r],l=s[r+1];this.swap(n,l),t.getEdgeCrossingsAtDepth(i)+t.getEdgeCrossingsAtDepth(i+1)<a?e=!0:this.swap(n,l)}for(let r of s)for(let s=0;s<r.attributes.length-1;s++){let n=r.attributes[s],l=r.attributes[s+1];this.swap(n,l),t.getEdgeCrossingsAtDepth(i)+t.getEdgeCrossingsAtDepth(i+1)<a?e=!0:this.swap(n,l)}}}}swap(t,e){let i=t.weight;t.weight=e.weight,e.weight=i}}
class Graph{constructor(t){null==t?(this.edges=[],this.tables=[],this.tableIndex=[],this.edgeIndex=[],this.maxDepth=0,this.groups=[],this.baseRowDistance=6,this.attributeCounter=0,this.newLayer()):t&&Object.assign(this,t)}addGroup(t){if(this.groups.push(t),t.graph=this,t.id="g"+this.groups.indexOf(t),null!=t.groupHeader){let e=t.groupHeaderTable;this.addTable(e)}}updateGroupCoords(){for(let t of this.groups)t.updateCoords()}newLayer(){this.tableIndex.push([]),this.edgeIndex.push([])}addTable(t){for(;this.maxDepth<=t.depth;)this.maxDepth+=1,this.newLayer();t.graph=this,this.tables.push(t),this.tableIndex[t.depth].push(t)}addEdge(t){this.edges.push(t),this.edgeIndex[t.leftTable.depth].push(t)}addAttribute(t,e){e.id=e.id+this.attributeCounter,this.attributeCounter+=1,t.attributes.push(e)}ensureUniqueEdges(){}getEdgeCrossings(){let t=0;for(let e in this.edgeIndex)t+=this.getEdgeCrossingsAtDepth(e);return t}getEdgeCrossingsAtDepth(t,e=!1){let s=0,i=this.edgeIndex[t];for(let t in i){let l=i[t];for(let a=parseFloat(t)+1;a<i.length;a++){let t=i[a];l.crosses(t)&&(e&&console.log("Edge "+l.leftAttribute.name+l.rightAttribute.name+" crosses "+t.leftAttribute.name+t.rightAttribute.name),s+=1)}}return s}sortGraph(){for(let t of this.tables)t.main||(t.attributes=t.attributes.sort((t,e)=>t.weight>e.weight?1:-1));this.tables=this.tables.sort((t,e)=>t.weight>e.weight?1:-1);for(let t of this.tableIndex)t.sort((t,e)=>t.weight>e.weight?1:-1)}setExactWeights(){for(let t in this.tableIndex){let e=this.tableIndex[t];e=e.sort((t,e)=>t.weight>e.weight?1:-1);for(let t in e){let s=e[t];s.weight=parseFloat(t);let i=s.attributes;i=i.sort((t,e)=>t.weight>e.weight?1:-1);for(let t in i)i[t].weight=parseFloat(t)}}this.updateGroupCoords()}getNumStraightEdges(){let t=0;for(let e in this.edgeIndex)t+=this.getNumStraightEdgesAtDepth(e);return t}getNumStraightEdgesAtDepth(t){let e=0;for(let s of this.edgeIndex[t])s.leftTable.weight==s.rightTable.weight&&(e+=1);return e}adjustTableYPosition(){this.adjustAttrOffset()}getBendLeft(t){let e=t.depth,s=this.edgeIndex[e-1].filter(e=>e.rightTable==t&&!e.isSameRankEdge());return 0==s.length?0:Math.abs(s.map(t=>t.getBendiness()).reduce((t,e)=>Math.round(1e3*t+1e3*e)/1e3))}getBendRight(t){let e=t.depth,s=this.edgeIndex[e].filter(e=>e.leftTable==t&&!e.isSameRankEdge());return 0==s.length?0:Math.abs(s.map(t=>t.getBendiness()).reduce((t,e)=>Math.round(1e3*t+1e3*e)/1e3))}getTableBendiness(t){return 0==t.depth?Math.round(1e3*this.getBendRight(t))/1e3:Math.round(1e3*this.getBendLeft(t)+1e3*this.getBendRight(t))/1e3}getGraphTotalEdgeBendiness(){return Math.round(1e3*this.tables.map(t=>this.getTableBendiness(t)).reduce((t,e)=>t+e))/1e3}adjustAttrOffset(){let t=!0,e=0,s=(t,e)=>{let s=-2;return s=0==e?0:t[e-1].verticalAttrOffset-this.baseRowDistance+t[e-1].attributes.length+2,s},i=(t,e)=>{let s=2;return s=1==t.length||null==t[e+1]?20:t[e+1].verticalAttrOffset+this.baseRowDistance-t[e].attributes.length-2,s},l=()=>{for(let e=0;e<this.tableIndex.length;e++){let l=this.tableIndex[e];for(let e=0;e<l.length;e++){let a=l[e],h=this.getTableBendiness(a),r=a.verticalAttrOffset,n=s(l,e),d=i(l,e);for(let e=n;e<=d;e++){a.verticalAttrOffset=e;let s=this.getTableBendiness(a);s<=h&&(r=e,h=s,t=!0)}a.verticalAttrOffset=r}}},a=()=>{for(let t=this.tableIndex.length-1;t>0;t--){let e=this.tableIndex[t];for(let t=e.length-1;t>=0;t--){let l=e[t],a=this.getTableBendiness(l),h=l.verticalAttrOffset,r=s(e,t),n=i(e,t);for(let t=r;t<=n;t++){l.verticalAttrOffset=t;let e=this.getTableBendiness(l);e<a&&(h=t,a=e)}l.verticalAttrOffset=h}}};for(;e<10;)e++,e%2==0?l():a();this.updateGroupCoords()}addBlankTables(){let t=0;for(let e of this.groups){let s=Math.min.apply(0,e.tables.map(t=>t.depth)),i=Math.max.apply(0,e.tables.map(t=>t.depth)),l=0;for(let t=s;t<=i;t++){let s=e.tables.filter(e=>e.depth==t).length;s>l&&(l=s)}for(let a=s;a<=i;a++)if(e.tables.filter(t=>t.depth==a).length<l){let s=new Table("blank"+t,"blank"+t,!0,a);s.type="aux",this.addTable(s),e.addTable(s),t+=1}}let e=Math.max.apply(0,this.tableIndex.map(t=>t.length));for(let s of this.tableIndex)if(0!=s.length){let i=this.tableIndex.indexOf(s);for(;s.length<e;){let e=new Table("blank"+t,"blank"+t,!0,i);this.addTable(e),e.type="aux",t+=1}}}sendGroupsToTop(){for(let t of this.tableIndex)t=t.sort((t,e)=>{if(t.groups.length<e.groups.length)return 1})}}
class GraphGenerator{constructor(t=3,e="hello",r=[2,3],i=[1,5],s=.05,a=.05){this.d=t,this.s=3,this.jd=.1,this.v=a,this.js=s,this.attributeCounter=0,this.seed=e,this.tableDistribution=r,this.attributeDistribution=i,this.rng=new Math.seedrandom(this.seed),this.tableDist=()=>r[0]+Math.round(this.rng()*(r[1]-r[0])),this.attrDist=()=>i[0]+Math.round(this.rng()*(i[1]-i[0]))}generate(){g=new Graph,g.baseRowDistance=this.attributeDistribution[1]+2;for(var t=1;t<this.d;t++){g.newLayer();for(var e=0;e<this.tableDist();e++)g.addTable(this.generateTable(t,e))}return this.generateProjections(g),this.generateJoins(g),g.ensureUniqueEdges(),g}generateTable(t,e){name="T"+t+"y"+e;for(var r=new Table(name,name,!1,t),i=0;i<this.attrDist();i++)r.addAttribute("a"+this.attributeCounter),this.attributeCounter+=1;return r}generateProjections(t){let e=t.tableIndex[1],r=[],i=new Table("select","SELECT",!0,0),s=[],a=[],n=0;for(let t of e){let e=t.attributes,i=e[Math.floor(this.rng()*e.length)];s.push(i),a.push(i);for(let s of e)s!=i&&r.push(new Attribute(t,s));n++}let l=this.s*(r.length+n);for(t.addTable(i);n<l;n++){let t=Math.floor(this.rng()*r.length);r[t];r.splice(t,1)}for(let e of s){let r=new Attribute(i,"a"+this.attributeCounter++);r.mutable=!1,i.attributes.push(r),t.addEdge(new Edge(i,r,e.table,e))}}generateInterLayerJoins(t){for(var e=1;e<this.d;e++){let r=t.tableIndex[e],i=t.tableIndex[e+1],s=[],a=[];for(let t of r){let e=t.attributes;for(let r of e)s.push(new Attribute(t,r))}for(let e of i){if(0==s.length)break;let r=e.attributes,i=r[Math.floor(this.rng()*r.length)],n=Math.floor(this.rng()*s.length),l=s[n];s.splice(n,1),t.addEdge(new Edge(l.table,l.attr,e,i)),l.diffEdges++,i.diffEdges++;for(let t of r)t!=i&&a.push(new Attribute(e,t))}for(let e of s){if(0==a.length)break;if(this.rng()<this.jd){let r=Math.floor(this.rng()*a.length),i=a[r];a.splice(r,1),t.addEdge(new Edge(e.table,e.attr,i.table,i.attr)),e.diffEdges++,i.diffEdges++}}}}generateInLayerJoins(){for(var t=1;t<this.d;t++){let e=g.tableIndex[t];for(let t of e){let r=[],i=[];for(let e of t.attributes)r.push(new Attribute(t,e));for(let r of e)if(t!=r)for(let t of r.attributes)0==t.sameEdges&&i.push(new Attribute(r,t));for(let t of r){if(0==i.length)break;if(this.rng()<this.js){let e=Math.floor(this.rng()*i.length),r=i[e];i.splice(e,1),g.addEdge(new Edge(t.table,t.attr,r.table,r.attr)),t.sameEdges++,r.sameEdges++}}}}}generateRandomJoins(t){let e=[];for(let r=1;r<this.d;r++){let i=t.tableIndex[r].map(t=>t.attributes).flat().filter(e=>null==t.edges.find(t=>t.rightAttribute==e)),s=t.tableIndex[r+1].map(t=>t.attributes).flat();for(let r of i)if(this.rng()<this.v){let i=e.length/(e.length+s.length);if(this.rng()<i){let i=Math.floor(this.rng()*e.length),s=e[i];e.splice(i,1),t.addEdge(new Edge(s.table,s,r.table,r))}}e=i.filter(e=>null==t.edges.find(t=>t.leftAttribute==e)),i=[],s=[]}}generateJoins(t){this.generateInterLayerJoins(t),this.generateInLayerJoins(t),this.generateRandomJoins(t)}}
class Group{constructor(t){this.tables=[],this.coords=[],this.x_coord=0,this.y_coord=0,this.width_coord=0,this.height_coord=0,this.id=void 0,this.margin=5,this.graph=void 0,null!=t&&(this.groupHeader="count",this.groupHeaderTable=new Table(this.groupHeader,this.groupHeader,!0,20,"groupheader"),this.addTable(this.groupHeaderTable)),this.coords=[]}addTable(t){t.group=this,t.groups.push(this),this.tables.push(t),this.updateCoords()}updateCoordsPrecise(){this.coords=[];let t=Math.min.apply(0,this.tables.map(t=>t.depth)),h=this.tables.find(h=>h.depth==t);this.x_coord=h.depth;let e=Math.min.apply(0,this.tables.map(t=>t.weight)),i=this.tables.find(t=>t.weight==e);this.y_coord=i.weight;let s=Math.max.apply(0,this.tables.map(t=>t.depth)),a=this.tables.find(t=>t.depth==s);this.width_coord=a.depth-h.depth;let d=Math.max.apply(0,this.tables.map(t=>t.weight)),r=this.tables.find(t=>t.weight==d);this.height_coord=r.weight-i.weight;let p=[h.depth,a.depth];for(let t=0;t<p.length;t++){let h=p[t],e=Math.min.apply(0,this.tables.filter(t=>t.depth==h).map(t=>t.weight)),i=this.tables.find(t=>t.depth==h&&t.weight==e);this.coords.push([i.depth*depth_distance-this.margin,i.weight*table_vert_space+i.verticalAttrOffset*attr_height-this.margin]),this.coords.push([i.depth*depth_distance+table_width+this.margin,i.weight*table_vert_space+i.verticalAttrOffset*attr_height-this.margin])}for(let t=p.length-1;t>=0;t--){let h=p[t],e=Math.max.apply(0,this.tables.filter(t=>t.depth==h).map(t=>t.weight)),i=this.tables.find(t=>t.depth==h&&t.weight==e);this.coords.push([i.depth*depth_distance+table_width+this.margin,i.weight*table_vert_space+(1+i.attributes.length)*attr_height+i.verticalAttrOffset*attr_height+this.margin]),this.coords.push([i.depth*depth_distance-this.margin,i.weight*table_vert_space+(1+i.attributes.length)*attr_height+i.verticalAttrOffset*attr_height+this.margin])}this.coords.push(this.coords[0])}get_subgroups(){let t=[];if(1==this.tables.length)return[];for(let h of this.tables)for(let e of h.groups){if(-1!=t.indexOf(e)||e==this)continue;let h=!0;for(let t of e.tables)-1==this.tables.indexOf(t)&&(h=!1);h&&t.push(e)}return t}updateCoords(){this.margin+=5*this.get_subgroups().length,this.coords=[];let t=Math.min.apply(0,this.tables.map(t=>t.depth)),h=this.tables.find(h=>h.depth==t);this.x_coord=h.depth;let e=t=>parseFloat(t.weight)*table_vert_space+t.verticalAttrOffset*attr_height,i=Math.min.apply(0,this.tables.map(t=>e(t))),s=this.tables.find(t=>e(t)==i);this.y_coord=e(s);let a=Math.max.apply(0,this.tables.map(t=>t.depth)),d=this.tables.find(t=>t.depth==a);this.width_coord=d.depth-h.depth;let r=t=>e(t)+(1+t.attributes.length)*attr_height,p=Math.max.apply(0,this.tables.map(t=>r(t))),o=this.tables.find(t=>r(t)==p);this.height_coord=r(o),this.coords.push([h.depth*depth_distance-this.margin,this.y_coord-this.margin]),this.coords.push([h.depth*depth_distance+this.margin+this.width_coord*depth_distance+table_width,this.y_coord-this.margin]),this.coords.push([h.depth*depth_distance+this.margin+this.width_coord*depth_distance+table_width,this.height_coord+this.margin]),this.coords.push([h.depth*depth_distance-this.margin,this.height_coord+this.margin]),this.coords.push(this.coords[0]),null!=this.groupHeader&&(this.groupHeaderTable.depth=t)}}
class LPBendiness{constructor(e){this.g=e,this.mip=!0,this.verbose=!1,this.elapsedTime=0}async arrange(){let e=(new Date).getTime(),t={};this.fillModel(t);let i,l,n=this.modelToString(t),s={};this.verbose&&glp_set_print_func(console.log);let _=glp_create_prob();glp_read_lp_from_string(_,null,n),glp_scale_prob(_,GLP_SF_AUTO);let g=new SMCP({presolve:GLP_ON});if(glp_simplex(_,g),this.mip)for(glp_intopt(_),i=glp_mip_obj_val(_),l=1;l<=glp_get_num_cols(_);l++)s[glp_get_col_name(_,l)]=glp_mip_col_val(_,l);else for(i=glp_get_obj_val(_),l=1;l<=glp_get_num_cols(_);l++)s[glp_get_col_name(_,l)]=glp_get_col_prim(_,l);this.apply_solution(s),this.elapsedTime=(new Date).getTime()-e}fillModel(e){e.minimize="Minimize \n",e.subjectTo="Subject To \n",e.bounds="\nBounds \n";for(let t of this.g.edges)this.isSameRankEdge(t)||(e.minimize+="bend_"+t.leftAttribute.name+"_"+t.rightAttribute.name+" + ",e.subjectTo+="y_"+t.leftAttribute.name+" - y_"+t.rightAttribute.name+" - bend_"+t.leftAttribute.name+"_"+t.rightAttribute.name+" <= 0\n",e.subjectTo+="y_"+t.rightAttribute.name+" - y_"+t.leftAttribute.name+" - bend_"+t.leftAttribute.name+"_"+t.rightAttribute.name+" <= 0\n");for(let t=0;t<this.g.tableIndex.length;t++){let i=this.g.tableIndex[t];for(let t=0;t<i.length-1;t++){let l=i[t],n=i[t+1];e.subjectTo+="y_"+n.name+" - y_"+l.name+" > "+(2+l.attributes.length)+"\n"}}for(let t of this.g.tables)for(let i=0;i<t.attributes.length;i++){let l=t.attributes[i];e.subjectTo+="y_"+l.name+" - y_"+t.name+" = "+(i+1)+"\n"}e.minimize=e.minimize.substring(0,e.minimize.length-2)+"\n\n"}isSameRankEdge(e){return e.leftTable.depth==e.rightTable.depth}modelToString(e){return e.minimize+e.subjectTo+e.bounds+"\nEnd\n"}apply_solution(e){for(let t=0;t<this.g.tableIndex.length;t++){let i=this.g.tableIndex[t];for(let t=0;t<i.length;t++){let l=i[t],n=e["y_"+l.name];l.verticalAttrOffset=n-l.weight*this.g.baseRowDistance}}}}
class LPBendinessCombined{constructor(e){this.g=e,this.mip=!0,this.verbose=!1,this.elapsedTime=0}async arrange(){let e=(new Date).getTime(),t={};this.fillModel(t);let l,n,i=this.modelToString(t),s={};this.verbose&&glp_set_print_func(console.log);let o=glp_create_prob();glp_read_lp_from_string(o,null,i),glp_scale_prob(o,GLP_SF_AUTO);let a=new SMCP({presolve:GLP_ON});if(glp_simplex(o,a),this.mip)for(glp_intopt(o),l=glp_mip_obj_val(o),n=1;n<=glp_get_num_cols(o);n++)s[glp_get_col_name(o,n)]=glp_mip_col_val(o,n);else for(l=glp_get_obj_val(o),n=1;n<=glp_get_num_cols(o);n++)s[glp_get_col_name(o,n)]=glp_get_col_prim(o,n);this.apply_solution(s),this.elapsedTime=(new Date).getTime()-e}fillModel(e){e.minimize="Minimize \n",e.subjectTo="Subject To \n",e.bounds="\nBounds \n";let t={},l={},n=(e,t,n,i)=>{let s="c_"+e+t+"_"+n+i;return l[s]="",s},i=(e,t,l="")=>"x_"+l+e+"_"+l+t;for(let e=0;e<this.g.maxDepth+1;e++){let l=this.g.tableIndex[e],n=l.map(e=>e.attributes).flat();for(let e=0;e<l.length;e++){let n=l[e].name;for(let s=e+1;s<l.length;s++){let e=l[s].name;t[i(n,e,"T")]=""}}for(let e=0;e<n.length;e++){let l=n[e].name;for(let s=e+1;s<n.length;s++){let e=n[s].name;t[i(l,e)]=""}}}for(let t=0;t<this.g.maxDepth+1;t++){let l=this.g.tableIndex[t],n=l.map(e=>e.attributes).flat();for(let t=0;t<l.length;t++){let n=l[t].name;for(let s=t+1;s<l.length;s++){let t=l[s].name;for(let o=s+1;o<l.length;o++){let s=l[o].name;e.subjectTo+=i(n,t,"T")+" + "+i(t,s,"T")+" - "+i(n,s,"T")+" >= 0\n",e.subjectTo+="- "+i(n,t,"T")+" - "+i(t,s,"T")+" + "+i(n,s,"T")+" >= -1\n"}}}for(let t=0;t<n.length;t++){let l=n[t].name;for(let s=t+1;s<n.length;s++){let o=n[s].name;if(t!=s&&n[t].table.name==n[s].table.name)for(let a=s+1;a<n.length;a++){if(a==s||a==t)continue;if(n[a].table.name!=n[t].table.name)continue;if(n[a].table.name!=n[s].table.name)continue;let u=n[a].name;e.subjectTo+=i(l,o)+" + "+i(o,u)+" - "+i(l,u)+" >= 0\n",e.subjectTo+="- "+i(l,o)+" - "+i(o,u)+" + "+i(l,u)+" >= -1\n"}}}}for(let l=0;l<this.g.maxDepth+1;l++){let s=this.g.edgeIndex[l];for(let l=0;l<s.length;l++){let o=s[l];for(let a=l+1;a<s.length;a++){let l=s[a];if(null!=o.leftTable.group&&null!=o.rightTable.group&&l.leftTable.group!=l.leftTable.group&&(e.subjectTo+=n(u1,v1,u2,v2)+" = 0\n"),this.isSameRankEdge(o)||this.isSameRankEdge(l)){if(this.isSameRankEdge(o)&&this.isSameRankEdge(l)){let s=o.leftAttribute.name,a=o.rightAttribute.name,u=l.leftAttribute.name,b=l.rightAttribute.name,m=n(s,a,u,b),r=1;e.subjectTo+=m+"";let T=i(s,u);null!=t[T]?e.subjectTo+=" + "+T:(T=i(u,s),r-=1,e.subjectTo+=" - "+T);let g=i(a,b);null!=t[g]?e.subjectTo+=" + "+g:(r-=1,g=i(b,a),e.subjectTo+=" - "+g);let c=i(u,a);null!=t[c]?e.subjectTo+=c:(r-=1,c=i(a,u),e.subjectTo+=" + "+c),e.subjectTo+=" >= "+r+"\n",m=n(s,a,u,b),r=1,e.subjectTo+=m+"",T=i(s,u),null!=t[T]?e.subjectTo+=" + "+T:(T=i(u,s),r-=1,e.subjectTo+=" - "+T),g=i(a,b),null!=t[g]?e.subjectTo+=" + "+g:(r-=1,g=i(b,a),e.subjectTo+=" - "+g),c=i(b,s),null!=t[c]?e.subjectTo+=c:(r-=1,c=i(s,b),e.subjectTo+=" + "+c),e.subjectTo+=" >= "+r+"\n"}else if(this.isSameRankEdge(o)&&!this.isSameRankEdge(l)){let s=o.leftAttribute.name,a=o.rightAttribute.name,u=l.leftAttribute.name,b=l.rightAttribute.name,m=n(s,a,u,b),r=1;e.subjectTo+=m+"";let T=i(u,s);null!=t[T]?e.subjectTo+=" + "+T:(T=i(s,u),r-=1,e.subjectTo+=" - "+T);let g=i(a,u);null!=t[g]?e.subjectTo+=" + "+g:(r-=1,g=i(u,a),e.subjectTo+=" - "+g),e.subjectTo+=" >= "+r+"\n",m=n(s,a,u,b),r=1,e.subjectTo+=m+"",T=i(u,a),null!=t[T]?e.subjectTo+=" + "+T:(T=i(a,u),r-=1,e.subjectTo+=" - "+T),g=i(s,u),null!=t[g]?e.subjectTo+=" + "+g:(r-=1,g=i(u,s),e.subjectTo+=" - "+g),e.subjectTo+=" >= "+r+"\n"}else if(!this.isSameRankEdge(o)&&this.isSameRankEdge(l)){let s=o.leftAttribute.name,a=o.rightAttribute.name,u=l.leftAttribute.name,b=l.rightAttribute.name,m=n(s,a,u,b),r=1;e.subjectTo+=m+"";let T=i(s,u);null!=t[T]?e.subjectTo+=" + "+T:(T=i(u,s),r-=1,e.subjectTo+=" - "+T);let g=i(b,s);null!=t[g]?e.subjectTo+=" + "+g:(r-=1,g=i(s,b),e.subjectTo+=" - "+g),e.subjectTo+=" >= "+r+"\n",m=n(s,a,u,b),r=1,e.subjectTo+=m+"",T=i(s,b),null!=t[T]?e.subjectTo+=" + "+T:(T=i(b,s),r-=1,e.subjectTo+=" - "+T),g=i(u,s),null!=t[g]?e.subjectTo+=" + "+g:(r-=1,g=i(s,u),e.subjectTo+=" - "+g),e.subjectTo+=" >= "+r+"\n"}}else{let s=o.leftAttribute.name,a=o.rightAttribute.name,u=l.leftAttribute.name,b=l.rightAttribute.name;if(s==u||a==b)continue;let m=n(s,a,u,b),r=1;e.subjectTo+=m+"";let T=i(u,s);null!=t[T]?e.subjectTo+=" + "+T:(T=i(s,u),r-=1,e.subjectTo+=" - "+T);let g=i(a,b);null!=t[g]?e.subjectTo+=" + "+g:(g=i(b,a),r-=1,e.subjectTo+=" - "+g),e.subjectTo+=" >= "+r+"\n",m=n(s,a,u,b),r=1,e.subjectTo+=m+"",T=i(s,u),null!=t[T]?e.subjectTo+=" + "+T:(T=i(u,s),r-=1,e.subjectTo+=" - "+T),g=i(b,a),null!=t[g]?e.subjectTo+=" + "+g:(g=i(a,b),r-=1,e.subjectTo+=" - "+g),e.subjectTo+=" >= "+r+"\n"}}}}for(let t=0;t<this.g.maxDepth+1;t++){let l=this.g.tableIndex[t].map(e=>e.attributes).flat();for(let t=0;t<l.length;t++){let n=l[t].name,s=l[t].table.name;for(let o=t+1;o<l.length;o++){let t=l[o].name,a=l[o].table.name;s!=a&&(e.subjectTo+=i(n,t)+" - "+i(s,a,"T")+" = 0\n")}}}for(let t of this.g.edges)e.subjectTo+="y_"+t.leftAttribute.name+" - y_"+t.rightAttribute.name+" - bend_"+t.leftAttribute.name+"_"+t.rightAttribute.name+" <= 0\n",e.subjectTo+="y_"+t.rightAttribute.name+" - y_"+t.leftAttribute.name+" - bend_"+t.leftAttribute.name+"_"+t.rightAttribute.name+" <= 0\n";let s=0;for(let l of this.g.tableIndex)for(let n in l){let o=l[n];for(let a in l){if(n==a)continue;let u=l[a],b=i(u.name,o.name,"T");null!=t[b]?(e.subjectTo+="z_"+s+" - "+"20 "+b+" <= 0\n",e.subjectTo+="z_"+s+" - y_"+u.name+" <= 0\n",e.subjectTo+="z_"+s+" - y_"+u.name+" - "+"20 "+b+" >= - "+"20\n",e.subjectTo+="z_"+s+" >= 0\n",e.subjectTo+="y_"+o.name+" - z_"+s+" - "+(2+u.attributes.length)+" "+b+" >= 0\n"):(b=i(o.name,u.name,"T"),e.subjectTo+="z_"+s+" + "+"20 "+b+" <= "+"20\n",e.subjectTo+="z_"+s+" - y_"+u.name+" <= 0\n",e.subjectTo+="z_"+s+" - y_"+u.name+" + "+"20 "+b+" >= 0\n",e.subjectTo+="z_"+s+" >= 0\n",e.subjectTo+="y_"+o.name+" - z_"+s+" + "+(2+u.attributes.length)+" "+b+" >= "+(2+u.attributes.length)+"\n"),s+=1}}for(let l of this.g.tables)for(let n in l.attributes){let s=l.attributes[n],o=1,a="y_"+s.name+" - y_"+l.name;for(let e in l.attributes){if(n==e)continue;let u=l.attributes[e],b=i(u.name,s.name);if(null!=t[b])a+=" - "+b;else{a+=" + "+i(s.name,u.name),o+=1}}a+=" = "+o+"\n",e.subjectTo+=a}for(let t in l)e.minimize+=t+" + ";for(let t of this.g.edges)e.minimize+="0.1 bend_"+t.leftAttribute.name+"_"+t.rightAttribute.name+" + ";e.minimize=e.minimize.substring(0,e.minimize.length-2)+"\n\n";for(let l in t)e.bounds+="binary "+l+"\n"}isSameRankEdge(e){return e.leftTable.depth==e.rightTable.depth}modelToString(e){return e.minimize+e.subjectTo+e.bounds+"\nEnd\n"}apply_solution(e){console.log(e);for(let t=0;t<this.g.maxDepth+1;t++){let l=this.g.tableIndex[t];l.sort((t,l)=>0==e["x_T"+t.name+"_T"+l.name]?1:1==e["x_T"+t.name+"_T"+l.name]?-1:1==e["x_T"+l.name+"_T"+t.name]?1:0==e["x_T"+l.name+"_T"+t.name]?-1:void 0);for(let e in l)l[e].weight=e;for(let t of l){t.attributes.sort((t,l)=>0==e["x_"+t.name+"_"+l.name]?1:1==e["x_"+t.name+"_"+l.name]?-1:1==e["x_"+l.name+"_"+t.name]?1:0==e["x_"+l.name+"_"+t.name]?-1:void 0);for(let e=0;e<t.attributes.length;e++)t.attributes[e].weight=e}}for(let t=0;t<this.g.tableIndex.length;t++){let l=this.g.tableIndex[t];for(let t=0;t<l.length;t++){let n=l[t],i=e["y_"+n.name];null!=i&&(n.verticalAttrOffset=i-n.weight*this.g.baseRowDistance)}}}}
class LPBendinessCombinedPlusGroups{constructor(t,i){this.g=t,this.mip=!0,this.verbose=!1,this.elapsedTime=0,this.numConstraints=0,this.modelString="",this.options=null==i?{bendiness_reduction_active:!0,bendiness_reduction_type:"optimize_angles",crossings_reduction_active:!0,crossings_reduction_weight:1,bendiness_reduction_weight:.1,bendiness_angle_optimization_weight:.01}:i}async arrange(){if(0==this.options.crossings_reduction_active&&0==this.options.bendiness_reduction_active)return;let t=(new Date).getTime(),i={};this.fillModel(i);let e=this.modelToString(i);if(this.modelString=e,i.minimize.length<=10)return;let s,n,o={};this.verbose&&glp_set_print_func(console.log);let h=glp_create_prob();glp_read_lp_from_string(h,null,e),glp_scale_prob(h,GLP_SF_AUTO);let l=new SMCP({presolve:GLP_ON});if(glp_simplex(h,l),this.mip)for(glp_intopt(h),s=glp_mip_obj_val(h),n=1;n<=glp_get_num_cols(h);n++)o[glp_get_col_name(h,n)]=glp_mip_col_val(h,n);else for(s=glp_get_obj_val(h),n=1;n<=glp_get_num_cols(h);n++)o[glp_get_col_name(h,n)]=glp_get_col_prim(h,n);this.apply_solution(o),this.elapsedTime=(new Date).getTime()-t}fillModel(t){this.m=30,this.zcount=0,this.buffer=2,t.minimize="Minimize \n",t.subjectTo="Subject To \n",t.bounds="\nBounds \n",this.definitions={},this.crossing_vars={};for(let t=0;t<this.g.maxDepth+1;t++){let i=this.g.tableIndex[t],e=i.map(t=>t.attributes).flat();for(let t=0;t<i.length;t++){let e=i[t].id;for(let s=t+1;s<i.length;s++){let t=i[s].id;this.definitions[this.mkxBase(e,t,"T")]=""}}for(let t=0;t<e.length;t++){let i=e[t].id;for(let s=t+1;s<e.length;s++){let t=e[s].id;this.definitions[this.mkxBase(i,t)]=""}}}this.options.bendiness_reduction_active?this.setGroupConstraints(t):(this.g.addBlankTables(),this.xGroupConstraints(t)),this.setTransitivityConstraints(t),this.options.crossings_reduction_active&&this.addCrossingsReduction(t);for(let i=0;i<this.g.maxDepth+1;i++){let e=this.g.tableIndex[i].map(t=>t.attributes).flat();for(let i=0;i<e.length;i++){let s=e[i].id,n=e[i].table.id;for(let o=i+1;o<e.length;o++){let i=e[o].id,h=e[o].table.id;n!=h&&(t.subjectTo+=this.mkxBase(s,i)+" - "+this.mkxBase(n,h,"T")+" = 0\n")}}}this.options.bendiness_reduction_active?"simple"==this.options.bendiness_reduction_type?this.addSimpleBendiness(this.g,t):"optimize_angles"==this.options.bendiness_reduction_type&&this.addBendinessPlusMaximizeCrossingAngle(this.g,t):t.minimize=t.minimize.substring(0,t.minimize.length-2)+"\n\n";for(let i in this.definitions)t.bounds+="binary "+i+"\n";for(let i in this.crossing_vars)t.bounds+="binary "+i+"\n";this.numConstraints=t.subjectTo.split("\n").length,console.log("number of constraints: ",this.numConstraints)}mkc(t,i,e,s){let n="c_"+t+i+"_"+e+s;return this.crossing_vars[n]="",n}mkxDict(t,i,e,s){let n="",o=0,h=" - ";" - "==t&&(h=" + ");let l=this.mkxBase(i,e,s);return null!=this.definitions[l]?n+=t+l:(l=this.mkxBase(e,i,s),null==this.definitions[l]&&console.warn(l+" not yet in dict"),o-=1,n+=h+l),[n,o]}groupConditionApplies(t,i,e){for(let s of t.groups)if(i.groups.includes(s)){if(e.groups.includes(s))continue;return!0}return!1}xGroupConstraints(t){for(let i of this.g.groups){let e=Math.min.apply(0,i.tables.map(t=>t.depth)),s=Math.max.apply(0,i.tables.map(t=>t.depth));for(let n=e;n<s;n++){let e=i.tables.filter(t=>t.depth==n),s=this.g.tables.filter(t=>t.depth==n&&!t.groups.includes(i)),o=i.tables.filter(t=>t.depth==n+1),h=this.g.tables.filter(t=>t.depth==n+1&&!t.groups.includes(i)),l="";for(let t of e)for(let i of s)l+=" + "+this.mkxBase(t.id,i.id,"T");let r="";for(let t of o)for(let i of h)r+=" - "+this.mkxBase(t.id,i.id,"T");""!=l&&""!=r&&(t.subjectTo+=l+r+" = 0\n")}}}setTransitivityConstraints(t){for(let i=0;i<this.g.maxDepth+1;i++){let e=this.g.tableIndex[i],s=e.map(t=>t.attributes).flat();for(let i=0;i<e.length;i++){let s=e[i].id,n=e[i];for(let o=i+1;o<e.length;o++){let i=e[o].id,h=e[o];for(let l=o+1;l<e.length;l++){let o=e[l].id,r=e[l];s!=i&&i!=o&&s!=o&&(this.groupConditionApplies(n,h,r)?t.subjectTo+=""+this.mkxDict(" + ",s,o,"T")[0]+this.mkxDict(" - ",i,o,"T")[0]+" = "+(-this.mkxDict(" - ",i,o,"T")[1]+this.mkxDict(" + ",s,o,"T")[1])+"\n":this.groupConditionApplies(n,r,h)?t.subjectTo+=""+this.mkxDict(" + ",s,i,"T")[0]+this.mkxDict(" - ",o,i,"T")[0]+" = "+(-this.mkxDict(" - ",o,i,"T")[1]+this.mkxDict(" + ",s,i,"T")[1])+"\n":(t.subjectTo+=this.mkxBase(s,i,"T")+" + "+this.mkxBase(i,o,"T")+" - "+this.mkxBase(s,o,"T")+" >= 0\n",t.subjectTo+="- "+this.mkxBase(s,i,"T")+" - "+this.mkxBase(i,o,"T")+" + "+this.mkxBase(s,o,"T")+" >= -1\n"))}}}for(let i=0;i<s.length;i++){let e=s[i].id;for(let n=i+1;n<s.length;n++){let o=s[n].id;if(i!=n&&s[i].table.id==s[n].table.id){for(let h=n+1;h<s.length;h++){if(h==n||h==i)continue;if(s[h].table.id!=s[i].table.id)continue;if(s[h].table.id!=s[n].table.id)continue;let l=s[h].id;e!=o&&o!=l&&e!=l&&(t.subjectTo+=this.mkxBase(e,o)+" + "+this.mkxBase(o,l)+" - "+this.mkxBase(e,l)+" >= 0\n",t.subjectTo+="- "+this.mkxBase(e,o)+" - "+this.mkxBase(o,l)+" + "+this.mkxBase(e,l)+" >= -1\n")}"constraint"==s[n].type?t.subjectTo+=this.mkxDict(" + ",e,o)[0]+" = "+(1+this.mkxDict(" + ",e,o)[1])+"\n":"constraint"==s[i].type&&(t.subjectTo+=this.mkxDict(" + ",o,e)[0]+" = "+(1+this.mkxDict(" + ",o,e)[1])+"\n")}}}}}setGroupConstraints(t){for(let i of this.g.groups){for(let e of i.tables)t.subjectTo+="y_groupstart_"+i.id+" - y_"+e.id+" <= 0\n",t.subjectTo+="y_groupend_"+i.id+" - y_"+e.id+" >= "+(e.attributes.length+this.buffer)+"\n";for(let e of this.g.tables)-1==i.tables.indexOf(e)&&-1!=i.tables.map(t=>t.depth).indexOf(e.depth)&&(t.subjectTo+="y_"+e.id+" - "+this.m+" z_"+this.zcount+" - y_groupstart_"+i.id+" <= - "+(e.attributes.length+this.buffer)+"\n",t.subjectTo+="- y_"+e.id+" + "+this.m+" z_"+this.zcount+" + y_groupend_"+i.id+" <= "+this.m+"\n",this.zcount+=1)}for(let i=0;i<=this.zcount;i++)t.bounds+="binary z_"+i+"\n"}addCrossingsReduction(t){for(let i=0;i<this.g.maxDepth+1;i++){let e=this.g.edgeIndex[i];for(let i=0;i<e.length;i++){let s=e[i];for(let n=i+1;n<e.length;n++){let i=e[n],o=s.leftAttribute.id,h=s.rightAttribute.id,l=i.leftAttribute.id,r=i.rightAttribute.id;if(this.isSameRankEdge(s)||this.isSameRankEdge(i)){if(this.isSameRankEdge(s)&&this.isSameRankEdge(i)){let i=this.mkc(o,h,l,r),e=1+this.mkxDict(" + ",o,l)[1]+this.mkxDict(" + ",h,r)[1]+this.mkxDict(" + ",l,h)[1];t.subjectTo+=i+""+this.mkxDict(" + ",o,l)[0]+this.mkxDict(" + ",h,r)[0]+this.mkxDict(" + ",l,h)[0],t.subjectTo+=" >= "+e+"\n",i=this.mkc(o,h,l,r),e=1+this.mkxDict(" + ",o,l)[1]+this.mkxDict(" + ",h,r)[1]+this.mkxDict(" + ",r,o)[1],t.subjectTo+=i+""+this.mkxDict(" + ",o,l)[0]+this.mkxDict(" + ",h,r)[0]+this.mkxDict(" + ",r,o)[0],t.subjectTo+=" >= "+e+"\n"}else if(this.isSameRankEdge(s)&&!this.isSameRankEdge(i)){let i=this.mkc(o,h,l,r),e=1+this.mkxDict(" + ",l,o)[1]+this.mkxDict(" + ",h,l)[1];t.subjectTo+=i+""+this.mkxDict(" + ",l,o)[0]+this.mkxDict(" + ",h,l)[0],t.subjectTo+=" >= "+e+"\n",i=this.mkc(o,h,l,r),e=1+this.mkxDict(" + ",l,h)[1]+this.mkxDict(" + ",o,l)[1],t.subjectTo+=i+""+this.mkxDict(" + ",l,h)[0]+this.mkxDict(" + ",o,l)[0],t.subjectTo+=" >= "+e+"\n"}else if(!this.isSameRankEdge(s)&&this.isSameRankEdge(i)){let i=this.mkc(o,h,l,r),e=1+this.mkxDict(" + ",o,l)[1]+this.mkxDict(" + ",r,o)[1];t.subjectTo+=i+""+this.mkxDict(" + ",o,l)[0]+this.mkxDict(" + ",r,o)[0],t.subjectTo+=" >= "+e+"\n",i=this.mkc(o,h,l,r),e=1+this.mkxDict(" + ",o,r)[1]+this.mkxDict(" + ",l,o)[1],t.subjectTo+=i+""+this.mkxDict(" + ",o,r)[0]+this.mkxDict(" + ",l,o)[0],t.subjectTo+=" >= "+e+"\n"}}else{if(o==l||h==r)continue;let i=this.mkc(o,h,l,r),e=1+this.mkxDict(" + ",l,o)[1]+this.mkxDict(" + ",h,r)[1];t.subjectTo+=i+""+this.mkxDict(" + ",l,o)[0]+this.mkxDict(" + ",h,r)[0],t.subjectTo+=" >= "+e+"\n",i=this.mkc(o,h,l,r),e=1+this.mkxDict(" + ",o,l)[1]+this.mkxDict(" + ",r,h)[1],t.subjectTo+=i+""+this.mkxDict(" + ",o,l)[0]+this.mkxDict(" + ",r,h)[0],t.subjectTo+=" >= "+e+"\n"}}}}for(let i in this.crossing_vars)t.minimize+=this.options.crossings_reduction_weight+" "+i+" + "}isSameRankEdge(t){return t.leftTable.depth==t.rightTable.depth}modelToString(t){return t.minimize+t.subjectTo+t.bounds+"\nEnd\n"}mkxBase(t,i,e=""){return"x_"+e+t+"_"+e+i}addBendinessPlusMaximizeCrossingAngle(t,i){for(let e of t.edges)this.isSameRankEdge(e)||(i.subjectTo+="y_"+e.leftAttribute.id+" - y_"+e.rightAttribute.id+" - bend_"+e.leftAttribute.id+"_"+e.rightAttribute.id+" <= 0\n",i.subjectTo+="y_"+e.rightAttribute.id+" - y_"+e.leftAttribute.id+" - bend_"+e.leftAttribute.id+"_"+e.rightAttribute.id+" <= 0\n");for(let e of t.tableIndex)for(let t in e){let s=e[t];for(let n in e){if(t==n)continue;let o=e[n],h=this.mkxBase(o.id,s.id,"T");null!=this.definitions[h]?(i.subjectTo+="z_"+this.zcount+" - "+this.m+" "+h+" <= 0\n",i.subjectTo+="z_"+this.zcount+" - y_"+o.id+" <= 0\n",i.subjectTo+="z_"+this.zcount+" - y_"+o.id+" - "+this.m+" "+h+" >= - "+this.m+"\n",i.subjectTo+="z_"+this.zcount+" >= 0\n",i.subjectTo+="y_"+s.id+" - z_"+this.zcount+" - "+(this.buffer+o.attributes.length)+" "+h+" >= 0\n"):(h=this.mkxBase(s.id,o.id,"T"),i.subjectTo+="z_"+this.zcount+" + "+this.m+" "+h+" <= "+this.m+"\n",i.subjectTo+="z_"+this.zcount+" - y_"+o.id+" <= 0\n",i.subjectTo+="z_"+this.zcount+" - y_"+o.id+" + "+this.m+" "+h+" >= 0\n",i.subjectTo+="z_"+this.zcount+" >= 0\n",i.subjectTo+="y_"+s.id+" - z_"+this.zcount+" + "+(this.buffer+o.attributes.length)+" "+h+" >= "+(this.buffer+o.attributes.length)+"\n"),this.zcount+=1}}for(let e of t.tables)for(let t in e.attributes){let s=e.attributes[t],n=1,o="y_"+s.id+" - y_"+e.id;for(let i in e.attributes){if(t==i)continue;let h=e.attributes[i],l=this.mkxBase(h.id,s.id);if(null!=this.definitions[l])o+=" - "+l;else{o+=" + "+this.mkxBase(s.id,h.id),n+=1}}o+=" = "+n+"\n",i.subjectTo+=o}for(let e of t.edges){if(this.isSameRankEdge(e))continue;let t=e.leftAttribute.id,s=e.rightAttribute.id;for(let e in this.crossing_vars){let n=e.split("_");n[1]!=t+s&&n[2]!=t+s||(i.subjectTo+="onecross_"+t+"_"+s+" - "+e+" >= 0\n")}i.bounds+="binary onecross_"+t+"_"+s+"\n",i.subjectTo+="auxbend_"+t+"_"+s+" + "+this.m+" onecross_"+t+"_"+s+" <= "+this.m+"\n",i.subjectTo+="auxbend_"+t+"_"+s+" - bend_"+t+"_"+s+" <= 0\n",i.subjectTo+="auxbend_"+t+"_"+s+" - bend_"+t+"_"+s+" + "+this.m+" onecross_"+t+"_"+s+" >= 0\n",i.subjectTo+="auxbend_"+t+"_"+s+" >= 0\n",i.subjectTo+="aux2bend_"+t+"_"+s+" - "+this.m+" onecross_"+t+"_"+s+" <= 0\n",i.subjectTo+="aux2bend_"+t+"_"+s+" + bend_"+t+"_"+s+" <= "+this.m+"\n",i.subjectTo+="aux2bend_"+t+"_"+s+" + bend_"+t+"_"+s+" - "+this.m+" onecross_"+t+"_"+s+" >= 0\n",i.subjectTo+="aux2bend_"+t+"_"+s+" >= 0\n"}for(let e of t.edges)this.isSameRankEdge(e)||(i.minimize+=this.options.bendiness_reduction_weight+" auxbend_"+e.leftAttribute.id+"_"+e.rightAttribute.id+" + ",i.minimize+=this.options.bendiness_angle_optimization_weight+" aux2bend_"+e.leftAttribute.id+"_"+e.rightAttribute.id+" + ");i.minimize=i.minimize.substring(0,i.minimize.length-2)+"\n\n"}addSimpleBendiness(t,i){for(let e of t.edges)this.isSameRankEdge(e)||(i.subjectTo+="y_"+e.leftAttribute.id+" - y_"+e.rightAttribute.id+" - bend_"+e.leftAttribute.id+"_"+e.rightAttribute.id+" <= 0\n",i.subjectTo+="y_"+e.rightAttribute.id+" - y_"+e.leftAttribute.id+" - bend_"+e.leftAttribute.id+"_"+e.rightAttribute.id+" <= 0\n");for(let e of t.tableIndex)for(let t in e){let s=e[t];for(let n in e){if(t==n)continue;let o=e[n],h=this.mkxBase(o.id,s.id,"T");null!=this.definitions[h]?(i.subjectTo+="z_"+this.zcount+" - "+this.m+" "+h+" <= 0\n",i.subjectTo+="z_"+this.zcount+" - y_"+o.id+" <= 0\n",i.subjectTo+="z_"+this.zcount+" - y_"+o.id+" - "+this.m+" "+h+" >= - "+this.m+"\n",i.subjectTo+="z_"+this.zcount+" >= 0\n",i.subjectTo+="y_"+s.id+" - z_"+this.zcount+" - "+(this.buffer+o.attributes.length)+" "+h+" >= 0\n"):(h=this.mkxBase(s.id,o.id,"T"),i.subjectTo+="z_"+this.zcount+" + "+this.m+" "+h+" <= "+this.m+"\n",i.subjectTo+="z_"+this.zcount+" - y_"+o.id+" <= 0\n",i.subjectTo+="z_"+this.zcount+" - y_"+o.id+" + "+this.m+" "+h+" >= 0\n",i.subjectTo+="z_"+this.zcount+" >= 0\n",i.subjectTo+="y_"+s.id+" - z_"+this.zcount+" + "+(this.buffer+o.attributes.length)+" "+h+" >= "+(this.buffer+o.attributes.length)+"\n"),this.zcount+=1}}for(let e of t.tables)for(let t in e.attributes){let s=e.attributes[t],n=1,o="y_"+s.id+" - y_"+e.id;for(let i in e.attributes){if(t==i)continue;let h=e.attributes[i],l=this.mkxBase(h.id,s.id);if(null!=this.definitions[l])o+=" - "+l;else{o+=" + "+this.mkxBase(s.id,h.id),n+=1}}o+=" = "+n+"\n",i.subjectTo+=o}for(let e of t.edges)this.isSameRankEdge(e)||(i.minimize+=this.options.bendiness_reduction_weight+" bend_"+e.leftAttribute.id+"_"+e.rightAttribute.id+" + ");i.minimize=i.minimize.substring(0,i.minimize.length-2)+"\n\n"}apply_solution(t){console.log(t);for(let i=0;i<this.g.maxDepth+1;i++){let e=this.g.tableIndex[i];e.sort((i,e)=>0==t["x_T"+i.id+"_T"+e.id]?1:1==t["x_T"+i.id+"_T"+e.id]?-1:1==t["x_T"+e.id+"_T"+i.id]?1:0==t["x_T"+e.id+"_T"+i.id]?-1:void 0);for(let t in e)e[t].weight=t;for(let i of e){i.attributes.sort((i,e)=>0==t["x_"+i.id+"_"+e.id]?1:1==t["x_"+i.id+"_"+e.id]?-1:1==t["x_"+e.id+"_"+i.id]?1:0==t["x_"+e.id+"_"+i.id]?-1:void 0);for(let t=0;t<i.attributes.length;t++)i.attributes[t].weight=t}}if(this.options.bendiness_reduction_active)for(let i=0;i<this.g.tableIndex.length;i++){let e=this.g.tableIndex[i];for(let i=0;i<e.length;i++){let s=e[i],n=t["y_"+s.id];null!=n&&(s.verticalAttrOffset=n-s.weight*this.g.baseRowDistance)}}}}
class LPFormulation{constructor(e){this.g=e,this.mip=!0,this.verbose=!1,this.elapsedTime=0}async arrange(){let e=(new Date).getTime(),t={};this.fillModel(t);let l,n,i=this.modelToString(t),a={};this.verbose&&glp_set_print_func(console.log);let o=glp_create_prob();glp_read_lp_from_string(o,null,i),glp_scale_prob(o,GLP_SF_AUTO);let s=new SMCP({presolve:GLP_ON});if(glp_simplex(o,s),this.mip)for(glp_intopt(o),l=glp_mip_obj_val(o),n=1;n<=glp_get_num_cols(o);n++)a[glp_get_col_name(o,n)]=glp_mip_col_val(o,n);else for(l=glp_get_obj_val(o),n=1;n<=glp_get_num_cols(o);n++)a[glp_get_col_name(o,n)]=glp_get_col_prim(o,n);this.apply_solution(a),this.elapsedTime=(new Date).getTime()-e}fillModel(e){e.minimize="Minimize \n",e.subjectTo="Subject To \n",e.bounds="\nBounds \n";let t={},l={},n=(e,t,n,i)=>{let a="c_"+e+t+"_"+n+i;return l[a]="",a},i=(e,t,l="")=>"x_"+l+e+"_"+l+t;for(let e=0;e<this.g.maxDepth+1;e++){let l=this.g.tableIndex[e],n=l.map(e=>e.attributes).flat();for(let e=0;e<l.length;e++){let n=l[e].name;for(let a=e+1;a<l.length;a++){let e=l[a].name;t[i(n,e,"T")]=""}}for(let e=0;e<n.length;e++){let l=n[e].name;for(let a=e+1;a<n.length;a++){let e=n[a].name;t[i(l,e)]=""}}}for(let t=0;t<this.g.maxDepth+1;t++){let l=this.g.tableIndex[t],n=l.map(e=>e.attributes).flat();for(let t=0;t<l.length;t++){let n=l[t].name;for(let a=t+1;a<l.length;a++){let t=l[a].name;for(let o=a+1;o<l.length;o++){let a=l[o].name;e.subjectTo+=i(n,t,"T")+" + "+i(t,a,"T")+" - "+i(n,a,"T")+" >= 0\n",e.subjectTo+="- "+i(n,t,"T")+" - "+i(t,a,"T")+" + "+i(n,a,"T")+" >= -1\n"}}}for(let t=0;t<n.length;t++){let l=n[t].name;for(let a=t+1;a<n.length;a++){let o=n[a].name;if(t!=a&&n[t].table.name==n[a].table.name)for(let s=a+1;s<n.length;s++){if(s==a||s==t)continue;if(n[s].table.name!=n[t].table.name)continue;if(n[s].table.name!=n[a].table.name)continue;let u=n[s].name;e.subjectTo+=i(l,o)+" + "+i(o,u)+" - "+i(l,u)+" >= 0\n",e.subjectTo+="- "+i(l,o)+" - "+i(o,u)+" + "+i(l,u)+" >= -1\n"}}}}for(let l=0;l<this.g.maxDepth+1;l++){let a=this.g.edgeIndex[l];for(let l=0;l<a.length;l++){let o=a[l];for(let s=l+1;s<a.length;s++){let l=a[s];if(null!=o.leftTable.group&&null!=o.rightTable.group&&l.leftTable.group!=l.leftTable.group&&(e.subjectTo+=n(u1,v1,u2,v2)+" = 0\n"),this.isSameRankEdge(o)||this.isSameRankEdge(l)){if(this.isSameRankEdge(o)&&this.isSameRankEdge(l)){let a=o.leftAttribute.name,s=o.rightAttribute.name,u=l.leftAttribute.name,b=l.rightAttribute.name,m=n(a,s,u,b),r=1;e.subjectTo+=m+"";let g=i(a,u);null!=t[g]?e.subjectTo+=" + "+g:(g=i(u,a),r-=1,e.subjectTo+=" - "+g);let _=i(s,b);null!=t[_]?e.subjectTo+=" + "+_:(r-=1,_=i(b,s),e.subjectTo+=" - "+_);let h=i(u,s);null!=t[h]?e.subjectTo+=h:(r-=1,h=i(s,u),e.subjectTo+=" + "+h),e.subjectTo+=" >= "+r+"\n",m=n(a,s,u,b),r=1,e.subjectTo+=m+"",g=i(a,u),null!=t[g]?e.subjectTo+=" + "+g:(g=i(u,a),r-=1,e.subjectTo+=" - "+g),_=i(s,b),null!=t[_]?e.subjectTo+=" + "+_:(r-=1,_=i(b,s),e.subjectTo+=" - "+_),h=i(b,a),null!=t[h]?e.subjectTo+=h:(r-=1,h=i(a,b),e.subjectTo+=" + "+h),e.subjectTo+=" >= "+r+"\n"}else if(this.isSameRankEdge(o)&&!this.isSameRankEdge(l)){let a=o.leftAttribute.name,s=o.rightAttribute.name,u=l.leftAttribute.name,b=l.rightAttribute.name,m=n(a,s,u,b),r=1;e.subjectTo+=m+"";let g=i(u,a);null!=t[g]?e.subjectTo+=" + "+g:(g=i(a,u),r-=1,e.subjectTo+=" - "+g);let _=i(s,u);null!=t[_]?e.subjectTo+=" + "+_:(r-=1,_=i(u,s),e.subjectTo+=" - "+_),e.subjectTo+=" >= "+r+"\n",m=n(a,s,u,b),r=1,e.subjectTo+=m+"",g=i(u,s),null!=t[g]?e.subjectTo+=" + "+g:(g=i(s,u),r-=1,e.subjectTo+=" - "+g),_=i(a,u),null!=t[_]?e.subjectTo+=" + "+_:(r-=1,_=i(u,a),e.subjectTo+=" - "+_),e.subjectTo+=" >= "+r+"\n"}else if(!this.isSameRankEdge(o)&&this.isSameRankEdge(l)){let a=o.leftAttribute.name,s=o.rightAttribute.name,u=l.leftAttribute.name,b=l.rightAttribute.name,m=n(a,s,u,b),r=1;e.subjectTo+=m+"";let g=i(a,u);null!=t[g]?e.subjectTo+=" + "+g:(g=i(u,a),r-=1,e.subjectTo+=" - "+g);let _=i(b,a);null!=t[_]?e.subjectTo+=" + "+_:(r-=1,_=i(a,b),e.subjectTo+=" - "+_),e.subjectTo+=" >= "+r+"\n",m=n(a,s,u,b),r=1,e.subjectTo+=m+"",g=i(a,b),null!=t[g]?e.subjectTo+=" + "+g:(g=i(b,a),r-=1,e.subjectTo+=" - "+g),_=i(u,a),null!=t[_]?e.subjectTo+=" + "+_:(r-=1,_=i(a,u),e.subjectTo+=" - "+_),e.subjectTo+=" >= "+r+"\n"}}else{let a=o.leftAttribute.name,s=o.rightAttribute.name,u=l.leftAttribute.name,b=l.rightAttribute.name;if(a==u||s==b)continue;let m=n(a,s,u,b),r=1;e.subjectTo+=m+"";let g=i(u,a);null!=t[g]?e.subjectTo+=" + "+g:(g=i(a,u),r-=1,e.subjectTo+=" - "+g);let _=i(s,b);null!=t[_]?e.subjectTo+=" + "+_:(_=i(b,s),r-=1,e.subjectTo+=" - "+_),e.subjectTo+=" >= "+r+"\n",m=n(a,s,u,b),r=1,e.subjectTo+=m+"",g=i(a,u),null!=t[g]?e.subjectTo+=" + "+g:(g=i(u,a),r-=1,e.subjectTo+=" - "+g),_=i(b,s),null!=t[_]?e.subjectTo+=" + "+_:(_=i(s,b),r-=1,e.subjectTo+=" - "+_),e.subjectTo+=" >= "+r+"\n"}}}}for(let t=0;t<this.g.maxDepth+1;t++){let l=this.g.tableIndex[t].map(e=>e.attributes).flat();for(let t=0;t<l.length;t++){let n=l[t].name,a=l[t].table.name;for(let o=t+1;o<l.length;o++){let t=l[o].name,s=l[o].table.name;a!=s&&(e.subjectTo+=i(n,t)+" - "+i(a,s,"T")+" = 0\n")}}}for(let t in l)e.minimize+=t+" + ";e.minimize=e.minimize.substring(0,e.minimize.length-2)+"\n\n";for(let l in t)e.bounds+="binary "+l+"\n"}fillModel2(e){e.minimize="Minimize \ncrossings: ",e.subjectTo="Subject To \n",e.bounds="\nBounds \n";for(let t=0;t<this.g.maxDepth+1;t++){let l=this.g.edgeIndex[t];for(let t=0;t<l.length;t++)for(let n=0;n<l.length;n++)if(l[t]!=l[n]){let i="c_"+l[t].leftAttribute.name+l[t].rightAttribute.name+"_"+l[n].leftAttribute.name+l[n].rightAttribute.name;e.minimize+=i+" + ",e.bounds+="binary "+i+"\n"}}e.minimize=e.minimize.substring(0,e.minimize.length-2)+"\n\n";for(let t=0;t<this.g.maxDepth+1;t++){let l=this.g.tableIndex[t];for(let t=0;t<l.length;t++){let n=l[t];for(let i=0;i<l.length;i++){if(t==i)continue;let a=l[i];n!=a&&(e.subjectTo+="x_T"+n.name+"_T"+a.name+" + x_T"+a.name+"_T"+n.name+" = 1\n",e.bounds+="binary x_T"+n.name+"_T"+a.name+"\n")}}}for(let t=0;t<this.g.maxDepth+1;t++){let l=this.g.tableIndex[t];for(let t=0;t<l.length;t++){let n=l[t];for(let i=0;i<l.length;i++){if(t==i)continue;let a=l[i];for(let t=i+1;t<l.length;t++){let i=l[t];e.subjectTo+="x_T"+i.name+"_T"+n.name+" - x_T"+i.name+"_T"+a.name+" - x_T"+a.name+"_T"+n.name+" >= - 1\n"}}}}for(let t=0;t<this.g.maxDepth+1;t++){let l=this.g.tableIndex[t].map(e=>e.attributes).flat();for(let t=0;t<l.length;t++){let n=l[t];for(let i=t+1;i<l.length;i++){let t=l[i];n!=t&&(e.subjectTo+="x_"+n.name+"_"+t.name+" + x_"+t.name+"_"+n.name+" = 1\n")}}}for(let t=0;t<this.g.maxDepth+1;t++){let l=this.g.tableIndex[t].map(e=>e.attributes).flat();for(let t of l)for(let n of l)t.table!=n.table&&(e.subjectTo+="x_"+t.name+"_"+n.name+" - x_T"+t.table.name+"_T"+n.table.name+" = 0\n")}for(let t=0;t<this.g.maxDepth+1;t++){let l=this.g.tableIndex[t].map(e=>e.attributes).flat();for(let t=0;t<l.length;t++){let n=l[t];for(let i=0;i<l.length;i++){let a=l[i];if(t!=i)for(let o=0;o<l.length;o++){if(o==t||o==i)continue;let s=l[o];e.subjectTo+="x_"+s.name+"_"+n.name+" - x_"+s.name+"_"+a.name+" - x_"+a.name+"_"+n.name+" >= - 1\n"}}}}for(let t=0;t<this.g.maxDepth;t++){let l=this.g.edgeIndex[t];for(let t=0;t<l.length;t++){let n=l[t];for(let i=0;i<l.length;i++){if(t==i)continue;let a=l[i];if(n.leftTable.depth==n.rightTable.depth||a.leftTable.depth==a.rightTable.depth)continue;let o=n.leftAttribute.name,s=n.rightAttribute.name,u=a.leftAttribute.name,b=a.rightAttribute.name;e.subjectTo+="c_"+o+s+"_"+u+b+" + x_"+u+"_"+o+" + x_"+s+"_"+b+" >= 1\n",e.subjectTo+="c_"+o+s+"_"+u+b+" + x_"+o+"_"+u+" + x_"+b+"_"+s+" >= 1\n"}}}for(let t=0;t<this.g.maxDepth+1;t++){let l=this.g.edgeIndex[t];for(let t=0;t<l.length;t++){let n=l[t];for(let t=0;t<l.length;t++){let i=l[t];if(n!=i)if(n.leftTable.depth==n.rightTable.depth&&i.leftTable.depth==i.rightTable.depth){let t=n.leftAttribute.name,l=n.rightAttribute.name,a=i.leftAttribute.name,o=i.rightAttribute.name;e.subjectTo+="c_"+t+l+"_"+a+o+" + x_"+t+"_"+a+" + x_"+l+"_"+o+" + x_"+a+"_"+l+" >= 1\n",e.subjectTo+="c_"+t+l+"_"+a+o+" + x_"+t+"_"+a+" + x_"+l+"_"+o+" + x_"+o+"_"+t+" >= 1\n"}else if(this.isSameRankEdge(n)&&!this.isSameRankEdge(i)){let t=n.leftAttribute.name,l=n.rightAttribute.name,a=i.leftAttribute.name,o=i.rightAttribute.name;e.subjectTo+="c_"+t+l+"_"+a+o+" + x_"+a+"_"+t+" + x_"+l+"_"+a+" >= 1\n",e.subjectTo+="c_"+t+l+"_"+a+o+" + x_"+a+"_"+l+" + x_"+t+"_"+a+" >= 1\n"}}}}}isSameRankEdge(e){return e.leftTable.depth==e.rightTable.depth}modelToString(e){return e.minimize+e.subjectTo+e.bounds+"\nEnd\n"}apply_solution(e){for(let t=0;t<this.g.maxDepth+1;t++){let l=this.g.tableIndex[t];l.sort((t,l)=>0==e["x_T"+t.name+"_T"+l.name]?1:1==e["x_T"+t.name+"_T"+l.name]?-1:1==e["x_T"+l.name+"_T"+t.name]?1:0==e["x_T"+l.name+"_T"+t.name]?-1:void 0);for(let e in l)l[e].weight=e;for(let t of l){t.attributes.sort((t,l)=>0==e["x_"+t.name+"_"+l.name]?1:1==e["x_"+t.name+"_"+l.name]?-1:1==e["x_"+l.name+"_"+t.name]?1:0==e["x_"+l.name+"_"+t.name]?-1:void 0);for(let e=0;e<t.attributes.length;e++)t.attributes[e].weight=e}}}}
class Sweep{constructor(t){this.g=t,this.elapsedTime=0}arrange(){let t=(new Date).getTime();this.g.setExactWeights(),this.sweepRight(),this.sweepLeft(),this.elapsedTime=(new Date).getTime()-t}sweepRight(){for(let t=1;t<=this.g.maxDepth;t++){let e,s,g=this.g.tableIndex[t];do{e=this.g.getEdgeCrossingsAtDepth(t-1)+this.g.getEdgeCrossingsAtDepth(t),s=e;do{e=this.g.getEdgeCrossingsAtDepth(t-1)+this.g.getEdgeCrossingsAtDepth(t),s=e;for(let e=0;e<g.length-1;e++){let h=g[e],i=g[e+1];this.swap(h,i);let l=this.g.getEdgeCrossingsAtDepth(t-1)+this.g.getEdgeCrossingsAtDepth(t);s>l?(s=l,g[e]=i,g[e+1]=h):this.swap(h,i)}}while(e>s);do{e=this.g.getEdgeCrossingsAtDepth(t-1)+this.g.getEdgeCrossingsAtDepth(t),s=e;for(let e=0;e<g.length;e++){let h=g[e].attributes;for(let e=0;e<h.length-1;e++){let g=h[e],i=h[e+1];this.swap(g,i);let l=this.g.getEdgeCrossingsAtDepth(t-1)+this.g.getEdgeCrossingsAtDepth(t);s>l?(s=l,h[e]=i,h[e+1]=g):this.swap(g,i)}}}while(e>s)}while(e>s)}}sweepLeft(){for(let t=this.g.maxDepth;t>=2;t--){let e,s,g=this.g.tableIndex[t-1];do{e=this.g.getEdgeCrossingsAtDepth(t-1)+this.g.getEdgeCrossingsAtDepth(t-2),s=e;do{e=this.g.getEdgeCrossingsAtDepth(t-1)+this.g.getEdgeCrossingsAtDepth(t-2),s=e;for(let e=0;e<g.length-1;e++){let h=g[e],i=g[e+1];this.swap(h,i);let l=this.g.getEdgeCrossingsAtDepth(t-1)+this.g.getEdgeCrossingsAtDepth(t-2);s>l?(s=l,g[e]=i,g[e+1]=h):this.swap(h,i)}}while(e>s);do{e=this.g.getEdgeCrossingsAtDepth(t-1)+this.g.getEdgeCrossingsAtDepth(t-2),s=e;for(let e=0;e<g.length;e++){let h=g[e].attributes;for(let e=0;e<h.length-1;e++){let g=h[e],i=h[e+1];this.swap(g,i);let l=this.g.getEdgeCrossingsAtDepth(t-1)+this.g.getEdgeCrossingsAtDepth(t-2);s>l?(s=l,h[e]=i,h[e+1]=g):this.swap(g,i)}}}while(e>s)}while(e>s)}}swap(t,e){let s=t.weight;t.weight=e.weight,e.weight=s}}
class Table{constructor(t,i,h,s,e){this.name=t,this.header=i,this.main=h,this.depth=s,this.attributes=[],this.attrMaps=[],this.weight=0,this.group=void 0,this.groups=[],this.graph=void 0,this.visibility="visible",this.verticalAttrOffset=0,this.id=t,this.type=e}addAttribute(t){this.attributes.push(new Attribute(this,t))}compareTo(t){return this.depth>t.depth?-1:this.depth<t.depth||this.weight<t.weight?1:this.weight>t.weight?-1:0}}
let find_negative_vertical_space=t=>{let e=1/0;for(d of t.tables){let a=t.tableIndex[d.depth].indexOf(d)*table_vert_space+d.verticalAttrOffset*attr_height;a<e&&(e=a)}return e},drawGraph=(t,e,a)=>{let r=d3.line().curve(d3.curveBasis),l=d3.line();table_vert_space=e.baseRowDistance*attr_height;let i=find_negative_vertical_space(e);visg=t.append("g").attr("transform","translate(20, "+(20-i)+")"),t.append("defs").append("marker").attr("id","arrow").attr("viewBox",[0,0,10,10]).attr("refX",5).attr("refY",5).attr("markerWidth",10).attr("markerHeight",10).attr("orient","auto-start-reverse").append("path").attr("d",d3.line()([[0,0],[0,10],[10,5]])).attr("stroke","black");for(let t in[...Array(10).keys()])visg.append("path").attr("stroke-width",1).attr("stroke","#ccc").attr("fill","none").style("stroke-dasharray","5, 3").attr("d",l([[0,attr_height*e.baseRowDistance*t],[1e3,attr_height*e.baseRowDistance*t]]));tablegroups=visg.selectAll(".tables").data(e.tables.filter(t=>"aux"!=t.type)).enter().append("g").attr("class","tablegroup").attr("id",t=>"tablegroup_"+t.name).style("visibility",t=>t.visibility).attr("transform",t=>"translate("+t.depth*depth_distance+","+(e.tableIndex[t.depth].indexOf(t)*table_vert_space+t.verticalAttrOffset*attr_height)+")"),tablegroups.append("rect").attr("width",table_width).attr("height",t=>t.attributes.length*attr_height+header_height).attr("fill",t=>"groupheader"==t.type?"#eee":"black").attr("stroke","gray").on("click",t=>console.log(t)),tablegroups.append("text").attr("x",table_width/2).attr("y",attr_height/2+5).attr("text-anchor","middle").attr("fill",t=>"groupheader"==t.type?"black":"white").attr("font-size","0.7em").attr("font-family","Arial").text(t=>t.header),attrgroups=tablegroups.selectAll(".attrs").data(t=>t.attributes).enter().append("g").attr("transform",(t,e)=>"translate(0, "+(header_height+e*attr_height)+")"),attrgroups.append("rect").attr("width",table_width).attr("height",attr_height).attr("fill",t=>"constraint"==t.type?"#FFFF73":"#ccc").attr("stroke","white").attr("stroke-width",2).on("click",t=>console.log(t)),attrgroups.append("text").attr("x",table_width/2).attr("y",attr_height/2+3).attr("text-anchor","middle").attr("font-size","0.7em").attr("font-family","Arial").text(t=>t.attr);let d=t=>[t.leftTable.depth*depth_distance+table_width,t.leftTable.attributes.indexOf(t.leftAttribute)*attr_height+header_height+attr_height/2+e.tableIndex[t.leftTable.depth].indexOf(t.leftTable)*table_vert_space+t.leftTable.verticalAttrOffset*attr_height],s=t=>t.leftTable.depth!=t.rightTable.depth?[t.rightTable.depth*depth_distance,t.rightTable.attributes.indexOf(t.rightAttribute)*attr_height+header_height+attr_height/2+e.tableIndex[t.rightTable.depth].indexOf(t.rightTable)*table_vert_space+t.rightTable.verticalAttrOffset*attr_height]:[t.leftTable.depth*depth_distance+table_width,t.rightTable.attributes.indexOf(t.rightAttribute)*attr_height+header_height+attr_height/2+e.tableIndex[t.rightTable.depth].indexOf(t.rightTable)*table_vert_space+t.rightTable.verticalAttrOffset*attr_height];e.updateGroupCoords(),visg.selectAll(".grouprects").data(e.groups).enter().append("path").attr("class","grouplines").attr("stroke-width",2).attr("stroke","black").attr("fill","none").style("stroke-dasharray","5, 3").attr("d",t=>l(t.coords)),edges=visg.selectAll(".edges").data(e.edges).enter().append("path").attr("stroke","black").attr("fill","none").attr("marker-end",t=>"directed"==t.type?"url(#arrow)":"").attr("d",t=>(first=d(t),second=s(t),r([first,[first[0]+.2*depth_distance,first[1]],[second[0]+(t.leftTable.depth==t.rightTable.depth?1:-1)*depth_distance*.2,second[1]],second]))),edgeLabels=visg.selectAll(".edgeLabels").data(e.edges.filter(t=>null!=t.label)).enter().append("text").text(t=>t.label).style("font-size","small").style("text-anchor","middle").attr("transform",t=>(first=d(t),second=s(t),"translate("+(first[0]/2+second[0]/2+(t.leftTable.depth==t.rightTable.depth?1:0)*depth_distance*.16)+","+(first[1]/2-2+second[1]/2)+")")),d3.select(t.node().parentNode).append("div").append("text").text("crossings: "+e.getEdgeCrossings()+", tables: "+e.tables.length+", edges: "+e.edges.length).style("font-family","Arial").attr("class","crossing_count"),null!=a&&null!=a.elapsedTime&&(d3.select(t.node().parentNode).append("div").append("text").text("time: "+a.elapsedTime+"ms").style("font-family","Arial").attr("class","crossing_count"),null!=a.iterations&&(d3.select(t.node().parentNode).append("text").text("⏹️"),d3.select(t.node().parentNode).append("text").text("⏪").on("click",()=>{a.cur_iteration--,a.apply_iteration(a.cur_iteration),t.selectAll(".tablegroup").transition().duration(750).attr("transform",t=>"translate("+t.depth*depth_distance+" ,  "+a.g.tableIndex[t.depth].indexOf(t)*table_vert_space+" )")}),d3.select(t.node().parentNode).append("text").text(a.cur_iteration),d3.select(t.node().parentNode).append("text").text("⏩").on("click",()=>{}),d3.select(t.node().parentNode).append("text").text("▶️")))};
let parseQuery=(e,t)=>{const l=(new NodeSQLParser.Parser).astify(e),r=t;console.log(l);let a=(e=>{let t={},l=e.split("\n");for(let e of l){let l=e.split("(")[0],r=e.split("(")[1].split(")")[0].split(",");t[l]=[];for(let e of r)t[l].push(e.replace(/ /g,""))}return t})(r);g=new Graph;let o=new Table("select","select",!0,0);g.addTable(o);let i={},n=0;for(let e of l.from)null!=e.as?(i[e.as]=e.table+n,n+=1):(i[e.table]=e.table+n,n+=1);let f=(e,t,l,r)=>{console.log("navigateExpr",t,e,l);for(let t of e.from)null!=t.as?(i[t.as]=t.table+n,n+=1):(i[t.table]=t.table+n,n+=1);p(e.where,t+1,l,r)},s=(e,t)=>{let l=e.attributes.find(e=>e.name==t);return null==l&&(l=new Attribute(e,t),g.addAttribute(e,l)),l},b=(e,t)=>{let l=g.tables.find(t=>t.id==e);if(null==l){if(l=new Table(e,e,!0,parseFloat(depth)),null!=t&&t.length>0)for(group of t)group.addTable(l);g.addTable(l);let r=e.slice(0,e.length-1);if(null==r&&console.error("not found: "+e),null!=a[r])for(let e of a[r]){let t=new Attribute(l,e);g.addAttribute(l,t)}}return l},p=(e,t,l,r)=>{if(null!=e)if(console.log("navigateWhere",t,e,l),"AND"==e.operator&&(p(e.left,t+1,l,r),p(e.right,t+1,l,r)),null!=e.left&&null==e.left.table&&(e.left.table=r.columns.find(t=>t.column==e.left.attribute).expr.table),"="==e.operator||">"==e.operator||"<"==e.operator||"<>"==e.operator){if("string"==e.right.type){let t=b(i[e.left.table],l),r=new Attribute(t,e.left.column+" "+e.operator+' "'+e.right.value+'"');r.id=r.name.replace(/"/g,"").replace(/=/g,"").replace(/>/g,"").replace(/</g,"").replace(/ /g,"")+"c",r.type="constraint",t.attributes.push(r)}else if("number"==e.right.type){let t=b(i[e.left.table],l),r=new Attribute(t,e.left.column+" "+e.operator+" "+e.right.value);r.id=r.name.replace(/"/g,"").replace(/=/g,"").replace(/>/g,"").replace(/</g,"").replace(/ /g,"")+"c",r.type="constraint",t.attributes.push(r)}else if("column_ref"==e.right.type){let t=i[e.left.table],r=i[e.right.table],a=b(t,l),o=s(a,e.left.column),n=b(r,l),f=s(n,e.right.column),p=new Edge(a,o,n,f);"<>"==e.operator?p.label="<>":"<"==e.operator?(p.type="directed",p.label="<"):">"==e.operator&&(p.type="directed",p.label=">"),g.addEdge(p)}else console.warn("something weird here");e.add=!0}else if("NOT EXISTS"==e.operator){let a=new Group;a.type="NOT EXISTS",g.addGroup(a),l.push(a),f(e.expr.ast,t+1,l,r)}else"EXISTS"==e.operator&&f(e.expr.ast,t+1,l,r)};for(let e of l.columns)if("*"==e)for(let e of l.from){let t=b(i[e.table]);for(let e of t.attributes){let l=new Attribute(o,e.name);g.addAttribute(o,l),g.addEdge(new Edge(o,l,t,e))}}else{let t,r=e.expr.column,a=new Attribute(o,r);o.attributes.push(a),t=null==e.expr.table?b(i[l.from[0].table]):b(i[e.expr.table]);let n=s(t,e.expr.column),f=new Edge(o,a,t,n);g.addEdge(f)}return p(l.where,0,[],l),assignTablesToDepths(g),g},assignTablesToDepths=e=>{for(let t=0;t<4;t++){e.tables.forEach(e=>e.visited=!1),arrangeTables(e,e.tableIndex[0][0]);for(let t in e.tableIndex)e.tableIndex[t]=[];for(let t of e.tables){e.tableIndex[t.depth].push(t);for(let l of t.attributes){0==e.edges.filter(e=>e.leftAttribute==l||e.rightAttribute==l).length&&"constraint"!=l.type&&t.attributes.splice(t.attributes.indexOf(l),1)}}for(let t in e.edgeIndex)e.edgeIndex[t]=[];for(let t of e.edges){if(t.leftTable.depth>t.rightTable.depth){let e=t.leftTable,l=t.leftAttribute;t.leftTable=t.rightTable,t.rightTable=e,t.leftAttribute=t.rightAttribute,t.rightAttribute=l}e.edgeIndex[t.leftTable.depth].push(t)}}},arrangeTables=(e,t)=>{let l=e.edges.filter(e=>e.leftTable==t);if(0!=l.length)for(let r in l){let a=l[r].rightTable;if(1!=a.visited){for(a.visited=!0,a.depth=t.depth+1;e.tableIndex.length<a.depth;)e.newLayer();arrangeTables(e,a)}}};

!function(t,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports):"function"==typeof define&&define.amd?define(["exports"],n):n((t=t||self).d3=t.d3||{})}(this,(function(t){"use strict";function n(t,n){return t<n?-1:t>n?1:t>=n?0:NaN}function e(t){var e;return 1===t.length&&(e=t,t=function(t,r){return n(e(t),r)}),{left:function(n,e,r,i){for(null==r&&(r=0),null==i&&(i=n.length);r<i;){var o=r+i>>>1;t(n[o],e)<0?r=o+1:i=o}return r},right:function(n,e,r,i){for(null==r&&(r=0),null==i&&(i=n.length);r<i;){var o=r+i>>>1;t(n[o],e)>0?i=o:r=o+1}return r}}}var r=e(n),i=r.right,o=r.left;function a(t,n){return[t,n]}function u(t){return null===t?NaN:+t}function c(t,n){var e,r,i=t.length,o=0,a=-1,c=0,f=0;if(null==n)for(;++a<i;)isNaN(e=u(t[a]))||(f+=(r=e-c)*(e-(c+=r/++o)));else for(;++a<i;)isNaN(e=u(n(t[a],a,t)))||(f+=(r=e-c)*(e-(c+=r/++o)));if(o>1)return f/(o-1)}function f(t,n){var e=c(t,n);return e?Math.sqrt(e):e}function s(t,n){var e,r,i,o=t.length,a=-1;if(null==n){for(;++a<o;)if(null!=(e=t[a])&&e>=e)for(r=i=e;++a<o;)null!=(e=t[a])&&(r>e&&(r=e),i<e&&(i=e))}else for(;++a<o;)if(null!=(e=n(t[a],a,t))&&e>=e)for(r=i=e;++a<o;)null!=(e=n(t[a],a,t))&&(r>e&&(r=e),i<e&&(i=e));return[r,i]}var l=Array.prototype,h=l.slice,d=l.map;function p(t){return function(){return t}}function v(t){return t}function g(t,n,e){t=+t,n=+n,e=(i=arguments.length)<2?(n=t,t=0,1):i<3?1:+e;for(var r=-1,i=0|Math.max(0,Math.ceil((n-t)/e)),o=new Array(i);++r<i;)o[r]=t+r*e;return o}var y=Math.sqrt(50),_=Math.sqrt(10),b=Math.sqrt(2);function m(t,n,e){var r,i,o,a,u=-1;if(e=+e,(t=+t)==(n=+n)&&e>0)return[t];if((r=n<t)&&(i=t,t=n,n=i),0===(a=x(t,n,e))||!isFinite(a))return[];if(a>0)for(t=Math.ceil(t/a),n=Math.floor(n/a),o=new Array(i=Math.ceil(n-t+1));++u<i;)o[u]=(t+u)*a;else for(t=Math.floor(t*a),n=Math.ceil(n*a),o=new Array(i=Math.ceil(t-n+1));++u<i;)o[u]=(t-u)/a;return r&&o.reverse(),o}function x(t,n,e){var r=(n-t)/Math.max(0,e),i=Math.floor(Math.log(r)/Math.LN10),o=r/Math.pow(10,i);return i>=0?(o>=y?10:o>=_?5:o>=b?2:1)*Math.pow(10,i):-Math.pow(10,-i)/(o>=y?10:o>=_?5:o>=b?2:1)}function w(t,n,e){var r=Math.abs(n-t)/Math.max(0,e),i=Math.pow(10,Math.floor(Math.log(r)/Math.LN10)),o=r/i;return o>=y?i*=10:o>=_?i*=5:o>=b&&(i*=2),n<t?-i:i}function M(t){return Math.ceil(Math.log(t.length)/Math.LN2)+1}function N(t,n,e){if(null==e&&(e=u),r=t.length){if((n=+n)<=0||r<2)return+e(t[0],0,t);if(n>=1)return+e(t[r-1],r-1,t);var r,i=(r-1)*n,o=Math.floor(i),a=+e(t[o],o,t);return a+(+e(t[o+1],o+1,t)-a)*(i-o)}}function T(t,n){var e,r,i=t.length,o=-1;if(null==n){for(;++o<i;)if(null!=(e=t[o])&&e>=e)for(r=e;++o<i;)null!=(e=t[o])&&e>r&&(r=e)}else for(;++o<i;)if(null!=(e=n(t[o],o,t))&&e>=e)for(r=e;++o<i;)null!=(e=n(t[o],o,t))&&e>r&&(r=e);return r}function A(t){for(var n,e,r,i=t.length,o=-1,a=0;++o<i;)a+=t[o].length;for(e=new Array(a);--i>=0;)for(n=(r=t[i]).length;--n>=0;)e[--a]=r[n];return e}function S(t,n){var e,r,i=t.length,o=-1;if(null==n){for(;++o<i;)if(null!=(e=t[o])&&e>=e)for(r=e;++o<i;)null!=(e=t[o])&&r>e&&(r=e)}else for(;++o<i;)if(null!=(e=n(t[o],o,t))&&e>=e)for(r=e;++o<i;)null!=(e=n(t[o],o,t))&&r>e&&(r=e);return r}function k(t){if(!(i=t.length))return[];for(var n=-1,e=S(t,E),r=new Array(e);++n<e;)for(var i,o=-1,a=r[n]=new Array(i);++o<i;)a[o]=t[o][n];return r}function E(t){return t.length}var C=Array.prototype.slice;function P(t){return t}var z=1e-6;function R(t){return"translate("+(t+.5)+",0)"}function D(t){return"translate(0,"+(t+.5)+")"}function q(){return!this.__axis}function L(t,n){var e=[],r=null,i=null,o=6,a=6,u=3,c=1===t||4===t?-1:1,f=4===t||2===t?"x":"y",s=1===t||3===t?R:D;function l(l){var h=null==r?n.ticks?n.ticks.apply(n,e):n.domain():r,d=null==i?n.tickFormat?n.tickFormat.apply(n,e):P:i,p=Math.max(o,0)+u,v=n.range(),g=+v[0]+.5,y=+v[v.length-1]+.5,_=(n.bandwidth?function(t){var n=Math.max(0,t.bandwidth()-1)/2;return t.round()&&(n=Math.round(n)),function(e){return+t(e)+n}}:function(t){return function(n){return+t(n)}})(n.copy()),b=l.selection?l.selection():l,m=b.selectAll(".domain").data([null]),x=b.selectAll(".tick").data(h,n).order(),w=x.exit(),M=x.enter().append("g").attr("class","tick"),N=x.select("line"),T=x.select("text");m=m.merge(m.enter().insert("path",".tick").attr("class","domain").attr("stroke","currentColor")),x=x.merge(M),N=N.merge(M.append("line").attr("stroke","currentColor").attr(f+"2",c*o)),T=T.merge(M.append("text").attr("fill","currentColor").attr(f,c*p).attr("dy",1===t?"0em":3===t?"0.71em":"0.32em")),l!==b&&(m=m.transition(l),x=x.transition(l),N=N.transition(l),T=T.transition(l),w=w.transition(l).attr("opacity",z).attr("transform",(function(t){return isFinite(t=_(t))?s(t):this.getAttribute("transform")})),M.attr("opacity",z).attr("transform",(function(t){var n=this.parentNode.__axis;return s(n&&isFinite(n=n(t))?n:_(t))}))),w.remove(),m.attr("d",4===t||2==t?a?"M"+c*a+","+g+"H0.5V"+y+"H"+c*a:"M0.5,"+g+"V"+y:a?"M"+g+","+c*a+"V0.5H"+y+"V"+c*a:"M"+g+",0.5H"+y),x.attr("opacity",1).attr("transform",(function(t){return s(_(t))})),N.attr(f+"2",c*o),T.attr(f,c*p).text(d),b.filter(q).attr("fill","none").attr("font-size",10).attr("font-family","sans-serif").attr("text-anchor",2===t?"start":4===t?"end":"middle"),b.each((function(){this.__axis=_}))}return l.scale=function(t){return arguments.length?(n=t,l):n},l.ticks=function(){return e=C.call(arguments),l},l.tickArguments=function(t){return arguments.length?(e=null==t?[]:C.call(t),l):e.slice()},l.tickValues=function(t){return arguments.length?(r=null==t?null:C.call(t),l):r&&r.slice()},l.tickFormat=function(t){return arguments.length?(i=t,l):i},l.tickSize=function(t){return arguments.length?(o=a=+t,l):o},l.tickSizeInner=function(t){return arguments.length?(o=+t,l):o},l.tickSizeOuter=function(t){return arguments.length?(a=+t,l):a},l.tickPadding=function(t){return arguments.length?(u=+t,l):u},l}var U={value:function(){}};function O(){for(var t,n=0,e=arguments.length,r={};n<e;++n){if(!(t=arguments[n]+"")||t in r||/[\s.]/.test(t))throw new Error("illegal type: "+t);r[t]=[]}return new B(r)}function B(t){this._=t}function F(t,n){return t.trim().split(/^|\s+/).map((function(t){var e="",r=t.indexOf(".");if(r>=0&&(e=t.slice(r+1),t=t.slice(0,r)),t&&!n.hasOwnProperty(t))throw new Error("unknown type: "+t);return{type:t,name:e}}))}function Y(t,n){for(var e,r=0,i=t.length;r<i;++r)if((e=t[r]).name===n)return e.value}function I(t,n,e){for(var r=0,i=t.length;r<i;++r)if(t[r].name===n){t[r]=U,t=t.slice(0,r).concat(t.slice(r+1));break}return null!=e&&t.push({name:n,value:e}),t}B.prototype=O.prototype={constructor:B,on:function(t,n){var e,r=this._,i=F(t+"",r),o=-1,a=i.length;if(!(arguments.length<2)){if(null!=n&&"function"!=typeof n)throw new Error("invalid callback: "+n);for(;++o<a;)if(e=(t=i[o]).type)r[e]=I(r[e],t.name,n);else if(null==n)for(e in r)r[e]=I(r[e],t.name,null);return this}for(;++o<a;)if((e=(t=i[o]).type)&&(e=Y(r[e],t.name)))return e},copy:function(){var t={},n=this._;for(var e in n)t[e]=n[e].slice();return new B(t)},call:function(t,n){if((e=arguments.length-2)>0)for(var e,r,i=new Array(e),o=0;o<e;++o)i[o]=arguments[o+2];if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(o=0,e=(r=this._[t]).length;o<e;++o)r[o].value.apply(n,i)},apply:function(t,n,e){if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(var r=this._[t],i=0,o=r.length;i<o;++i)r[i].value.apply(n,e)}};var H="http://www.w3.org/1999/xhtml",j={svg:"http://www.w3.org/2000/svg",xhtml:H,xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"};function X(t){var n=t+="",e=n.indexOf(":");return e>=0&&"xmlns"!==(n=t.slice(0,e))&&(t=t.slice(e+1)),j.hasOwnProperty(n)?{space:j[n],local:t}:t}function V(t){var n=X(t);return(n.local?function(t){return function(){return this.ownerDocument.createElementNS(t.space,t.local)}}:function(t){return function(){var n=this.ownerDocument,e=this.namespaceURI;return e===H&&n.documentElement.namespaceURI===H?n.createElement(t):n.createElementNS(e,t)}})(n)}function G(){}function $(t){return null==t?G:function(){return this.querySelector(t)}}function W(){return[]}function Z(t){return null==t?W:function(){return this.querySelectorAll(t)}}function Q(t){return function(){return this.matches(t)}}function K(t){return new Array(t.length)}function J(t,n){this.ownerDocument=t.ownerDocument,this.namespaceURI=t.namespaceURI,this._next=null,this._parent=t,this.__data__=n}J.prototype={constructor:J,appendChild:function(t){return this._parent.insertBefore(t,this._next)},insertBefore:function(t,n){return this._parent.insertBefore(t,n)},querySelector:function(t){return this._parent.querySelector(t)},querySelectorAll:function(t){return this._parent.querySelectorAll(t)}};function tt(t,n,e,r,i,o){for(var a,u=0,c=n.length,f=o.length;u<f;++u)(a=n[u])?(a.__data__=o[u],r[u]=a):e[u]=new J(t,o[u]);for(;u<c;++u)(a=n[u])&&(i[u]=a)}function nt(t,n,e,r,i,o,a){var u,c,f,s={},l=n.length,h=o.length,d=new Array(l);for(u=0;u<l;++u)(c=n[u])&&(d[u]=f="$"+a.call(c,c.__data__,u,n),f in s?i[u]=c:s[f]=c);for(u=0;u<h;++u)(c=s[f="$"+a.call(t,o[u],u,o)])?(r[u]=c,c.__data__=o[u],s[f]=null):e[u]=new J(t,o[u]);for(u=0;u<l;++u)(c=n[u])&&s[d[u]]===c&&(i[u]=c)}function et(t,n){return t<n?-1:t>n?1:t>=n?0:NaN}function rt(t){return t.ownerDocument&&t.ownerDocument.defaultView||t.document&&t||t.defaultView}function it(t,n){return t.style.getPropertyValue(n)||rt(t).getComputedStyle(t,null).getPropertyValue(n)}function ot(t){return t.trim().split(/^|\s+/)}function at(t){return t.classList||new ut(t)}function ut(t){this._node=t,this._names=ot(t.getAttribute("class")||"")}function ct(t,n){for(var e=at(t),r=-1,i=n.length;++r<i;)e.add(n[r])}function ft(t,n){for(var e=at(t),r=-1,i=n.length;++r<i;)e.remove(n[r])}function st(){this.textContent=""}function lt(){this.innerHTML=""}function ht(){this.nextSibling&&this.parentNode.appendChild(this)}function dt(){this.previousSibling&&this.parentNode.insertBefore(this,this.parentNode.firstChild)}function pt(){return null}function vt(){var t=this.parentNode;t&&t.removeChild(this)}function gt(){var t=this.cloneNode(!1),n=this.parentNode;return n?n.insertBefore(t,this.nextSibling):t}function yt(){var t=this.cloneNode(!0),n=this.parentNode;return n?n.insertBefore(t,this.nextSibling):t}ut.prototype={add:function(t){this._names.indexOf(t)<0&&(this._names.push(t),this._node.setAttribute("class",this._names.join(" ")))},remove:function(t){var n=this._names.indexOf(t);n>=0&&(this._names.splice(n,1),this._node.setAttribute("class",this._names.join(" ")))},contains:function(t){return this._names.indexOf(t)>=0}};var _t={};function bt(t,n,e){return t=mt(t,n,e),function(n){var e=n.relatedTarget;e&&(e===this||8&e.compareDocumentPosition(this))||t.call(this,n)}}function mt(n,e,r){return function(i){var o=t.event;t.event=i;try{n.call(this,this.__data__,e,r)}finally{t.event=o}}}function xt(t){return function(){var n=this.__on;if(n){for(var e,r=0,i=-1,o=n.length;r<o;++r)e=n[r],t.type&&e.type!==t.type||e.name!==t.name?n[++i]=e:this.removeEventListener(e.type,e.listener,e.capture);++i?n.length=i:delete this.__on}}}function wt(t,n,e){var r=_t.hasOwnProperty(t.type)?bt:mt;return function(i,o,a){var u,c=this.__on,f=r(n,o,a);if(c)for(var s=0,l=c.length;s<l;++s)if((u=c[s]).type===t.type&&u.name===t.name)return this.removeEventListener(u.type,u.listener,u.capture),this.addEventListener(u.type,u.listener=f,u.capture=e),void(u.value=n);this.addEventListener(t.type,f,e),u={type:t.type,name:t.name,value:n,listener:f,capture:e},c?c.push(u):this.__on=[u]}}function Mt(n,e,r,i){var o=t.event;n.sourceEvent=t.event,t.event=n;try{return e.apply(r,i)}finally{t.event=o}}function Nt(t,n,e){var r=rt(t),i=r.CustomEvent;"function"==typeof i?i=new i(n,e):(i=r.document.createEvent("Event"),e?(i.initEvent(n,e.bubbles,e.cancelable),i.detail=e.detail):i.initEvent(n,!1,!1)),t.dispatchEvent(i)}t.event=null,"undefined"!=typeof document&&("onmouseenter"in document.documentElement||(_t={mouseenter:"mouseover",mouseleave:"mouseout"}));var Tt=[null];function At(t,n){this._groups=t,this._parents=n}function St(){return new At([[document.documentElement]],Tt)}function kt(t){return"string"==typeof t?new At([[document.querySelector(t)]],[document.documentElement]):new At([[t]],Tt)}At.prototype=St.prototype={constructor:At,select:function(t){"function"!=typeof t&&(t=$(t));for(var n=this._groups,e=n.length,r=new Array(e),i=0;i<e;++i)for(var o,a,u=n[i],c=u.length,f=r[i]=new Array(c),s=0;s<c;++s)(o=u[s])&&(a=t.call(o,o.__data__,s,u))&&("__data__"in o&&(a.__data__=o.__data__),f[s]=a);return new At(r,this._parents)},selectAll:function(t){"function"!=typeof t&&(t=Z(t));for(var n=this._groups,e=n.length,r=[],i=[],o=0;o<e;++o)for(var a,u=n[o],c=u.length,f=0;f<c;++f)(a=u[f])&&(r.push(t.call(a,a.__data__,f,u)),i.push(a));return new At(r,i)},filter:function(t){"function"!=typeof t&&(t=Q(t));for(var n=this._groups,e=n.length,r=new Array(e),i=0;i<e;++i)for(var o,a=n[i],u=a.length,c=r[i]=[],f=0;f<u;++f)(o=a[f])&&t.call(o,o.__data__,f,a)&&c.push(o);return new At(r,this._parents)},data:function(t,n){if(!t)return d=new Array(this.size()),f=-1,this.each((function(t){d[++f]=t})),d;var e=n?nt:tt,r=this._parents,i=this._groups;"function"!=typeof t&&(t=function(t){return function(){return t}}(t));for(var o=i.length,a=new Array(o),u=new Array(o),c=new Array(o),f=0;f<o;++f){var s=r[f],l=i[f],h=l.length,d=t.call(s,s&&s.__data__,f,r),p=d.length,v=u[f]=new Array(p),g=a[f]=new Array(p);e(s,l,v,g,c[f]=new Array(h),d,n);for(var y,_,b=0,m=0;b<p;++b)if(y=v[b]){for(b>=m&&(m=b+1);!(_=g[m])&&++m<p;);y._next=_||null}}return(a=new At(a,r))._enter=u,a._exit=c,a},enter:function(){return new At(this._enter||this._groups.map(K),this._parents)},exit:function(){return new At(this._exit||this._groups.map(K),this._parents)},join:function(t,n,e){var r=this.enter(),i=this,o=this.exit();return r="function"==typeof t?t(r):r.append(t+""),null!=n&&(i=n(i)),null==e?o.remove():e(o),r&&i?r.merge(i).order():i},merge:function(t){for(var n=this._groups,e=t._groups,r=n.length,i=e.length,o=Math.min(r,i),a=new Array(r),u=0;u<o;++u)for(var c,f=n[u],s=e[u],l=f.length,h=a[u]=new Array(l),d=0;d<l;++d)(c=f[d]||s[d])&&(h[d]=c);for(;u<r;++u)a[u]=n[u];return new At(a,this._parents)},order:function(){for(var t=this._groups,n=-1,e=t.length;++n<e;)for(var r,i=t[n],o=i.length-1,a=i[o];--o>=0;)(r=i[o])&&(a&&4^r.compareDocumentPosition(a)&&a.parentNode.insertBefore(r,a),a=r);return this},sort:function(t){function n(n,e){return n&&e?t(n.__data__,e.__data__):!n-!e}t||(t=et);for(var e=this._groups,r=e.length,i=new Array(r),o=0;o<r;++o){for(var a,u=e[o],c=u.length,f=i[o]=new Array(c),s=0;s<c;++s)(a=u[s])&&(f[s]=a);f.sort(n)}return new At(i,this._parents).order()},call:function(){var t=arguments[0];return arguments[0]=this,t.apply(null,arguments),this},nodes:function(){var t=new Array(this.size()),n=-1;return this.each((function(){t[++n]=this})),t},node:function(){for(var t=this._groups,n=0,e=t.length;n<e;++n)for(var r=t[n],i=0,o=r.length;i<o;++i){var a=r[i];if(a)return a}return null},size:function(){var t=0;return this.each((function(){++t})),t},empty:function(){return!this.node()},each:function(t){for(var n=this._groups,e=0,r=n.length;e<r;++e)for(var i,o=n[e],a=0,u=o.length;a<u;++a)(i=o[a])&&t.call(i,i.__data__,a,o);return this},attr:function(t,n){var e=X(t);if(arguments.length<2){var r=this.node();return e.local?r.getAttributeNS(e.space,e.local):r.getAttribute(e)}return this.each((null==n?e.local?function(t){return function(){this.removeAttributeNS(t.space,t.local)}}:function(t){return function(){this.removeAttribute(t)}}:"function"==typeof n?e.local?function(t,n){return function(){var e=n.apply(this,arguments);null==e?this.removeAttributeNS(t.space,t.local):this.setAttributeNS(t.space,t.local,e)}}:function(t,n){return function(){var e=n.apply(this,arguments);null==e?this.removeAttribute(t):this.setAttribute(t,e)}}:e.local?function(t,n){return function(){this.setAttributeNS(t.space,t.local,n)}}:function(t,n){return function(){this.setAttribute(t,n)}})(e,n))},style:function(t,n,e){return arguments.length>1?this.each((null==n?function(t){return function(){this.style.removeProperty(t)}}:"function"==typeof n?function(t,n,e){return function(){var r=n.apply(this,arguments);null==r?this.style.removeProperty(t):this.style.setProperty(t,r,e)}}:function(t,n,e){return function(){this.style.setProperty(t,n,e)}})(t,n,null==e?"":e)):it(this.node(),t)},property:function(t,n){return arguments.length>1?this.each((null==n?function(t){return function(){delete this[t]}}:"function"==typeof n?function(t,n){return function(){var e=n.apply(this,arguments);null==e?delete this[t]:this[t]=e}}:function(t,n){return function(){this[t]=n}})(t,n)):this.node()[t]},classed:function(t,n){var e=ot(t+"");if(arguments.length<2){for(var r=at(this.node()),i=-1,o=e.length;++i<o;)if(!r.contains(e[i]))return!1;return!0}return this.each(("function"==typeof n?function(t,n){return function(){(n.apply(this,arguments)?ct:ft)(this,t)}}:n?function(t){return function(){ct(this,t)}}:function(t){return function(){ft(this,t)}})(e,n))},text:function(t){return arguments.length?this.each(null==t?st:("function"==typeof t?function(t){return function(){var n=t.apply(this,arguments);this.textContent=null==n?"":n}}:function(t){return function(){this.textContent=t}})(t)):this.node().textContent},html:function(t){return arguments.length?this.each(null==t?lt:("function"==typeof t?function(t){return function(){var n=t.apply(this,arguments);this.innerHTML=null==n?"":n}}:function(t){return function(){this.innerHTML=t}})(t)):this.node().innerHTML},raise:function(){return this.each(ht)},lower:function(){return this.each(dt)},append:function(t){var n="function"==typeof t?t:V(t);return this.select((function(){return this.appendChild(n.apply(this,arguments))}))},insert:function(t,n){var e="function"==typeof t?t:V(t),r=null==n?pt:"function"==typeof n?n:$(n);return this.select((function(){return this.insertBefore(e.apply(this,arguments),r.apply(this,arguments)||null)}))},remove:function(){return this.each(vt)},clone:function(t){return this.select(t?yt:gt)},datum:function(t){return arguments.length?this.property("__data__",t):this.node().__data__},on:function(t,n,e){var r,i,o=function(t){return t.trim().split(/^|\s+/).map((function(t){var n="",e=t.indexOf(".");return e>=0&&(n=t.slice(e+1),t=t.slice(0,e)),{type:t,name:n}}))}(t+""),a=o.length;if(!(arguments.length<2)){for(u=n?wt:xt,null==e&&(e=!1),r=0;r<a;++r)this.each(u(o[r],n,e));return this}var u=this.node().__on;if(u)for(var c,f=0,s=u.length;f<s;++f)for(r=0,c=u[f];r<a;++r)if((i=o[r]).type===c.type&&i.name===c.name)return c.value},dispatch:function(t,n){return this.each(("function"==typeof n?function(t,n){return function(){return Nt(this,t,n.apply(this,arguments))}}:function(t,n){return function(){return Nt(this,t,n)}})(t,n))}};var Et=0;function Ct(){return new Pt}function Pt(){this._="@"+(++Et).toString(36)}function zt(){for(var n,e=t.event;n=e.sourceEvent;)e=n;return e}function Rt(t,n){var e=t.ownerSVGElement||t;if(e.createSVGPoint){var r=e.createSVGPoint();return r.x=n.clientX,r.y=n.clientY,[(r=r.matrixTransform(t.getScreenCTM().inverse())).x,r.y]}var i=t.getBoundingClientRect();return[n.clientX-i.left-t.clientLeft,n.clientY-i.top-t.clientTop]}function Dt(t){var n=zt();return n.changedTouches&&(n=n.changedTouches[0]),Rt(t,n)}function qt(t,n,e){arguments.length<3&&(e=n,n=zt().changedTouches);for(var r,i=0,o=n?n.length:0;i<o;++i)if((r=n[i]).identifier===e)return Rt(t,r);return null}function Lt(){t.event.stopImmediatePropagation()}function Ut(){t.event.preventDefault(),t.event.stopImmediatePropagation()}function Ot(t){var n=t.document.documentElement,e=kt(t).on("dragstart.drag",Ut,!0);"onselectstart"in n?e.on("selectstart.drag",Ut,!0):(n.__noselect=n.style.MozUserSelect,n.style.MozUserSelect="none")}function Bt(t,n){var e=t.document.documentElement,r=kt(t).on("dragstart.drag",null);n&&(r.on("click.drag",Ut,!0),setTimeout((function(){r.on("click.drag",null)}),0)),"onselectstart"in e?r.on("selectstart.drag",null):(e.style.MozUserSelect=e.__noselect,delete e.__noselect)}function Ft(t){return function(){return t}}function Yt(t,n,e,r,i,o,a,u,c,f){this.target=t,this.type=n,this.subject=e,this.identifier=r,this.active=i,this.x=o,this.y=a,this.dx=u,this.dy=c,this._=f}function It(){return!t.event.ctrlKey&&!t.event.button}function Ht(){return this.parentNode}function jt(n){return null==n?{x:t.event.x,y:t.event.y}:n}function Xt(){return navigator.maxTouchPoints||"ontouchstart"in this}function Vt(t,n,e){t.prototype=n.prototype=e,e.constructor=t}function Gt(t,n){var e=Object.create(t.prototype);for(var r in n)e[r]=n[r];return e}function $t(){}Pt.prototype=Ct.prototype={constructor:Pt,get:function(t){for(var n=this._;!(n in t);)if(!(t=t.parentNode))return;return t[n]},set:function(t,n){return t[this._]=n},remove:function(t){return this._ in t&&delete t[this._]},toString:function(){return this._}},Yt.prototype.on=function(){var t=this._.on.apply(this._,arguments);return t===this._?this:t};var Wt="\\s*([+-]?\\d+)\\s*",Zt="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*",Qt="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*",Kt=/^#([0-9a-f]{3,8})$/,Jt=new RegExp("^rgb\\("+[Wt,Wt,Wt]+"\\)$"),tn=new RegExp("^rgb\\("+[Qt,Qt,Qt]+"\\)$"),nn=new RegExp("^rgba\\("+[Wt,Wt,Wt,Zt]+"\\)$"),en=new RegExp("^rgba\\("+[Qt,Qt,Qt,Zt]+"\\)$"),rn=new RegExp("^hsl\\("+[Zt,Qt,Qt]+"\\)$"),on=new RegExp("^hsla\\("+[Zt,Qt,Qt,Zt]+"\\)$"),an={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};function un(){return this.rgb().formatHex()}function cn(){return this.rgb().formatRgb()}function fn(t){var n,e;return t=(t+"").trim().toLowerCase(),(n=Kt.exec(t))?(e=n[1].length,n=parseInt(n[1],16),6===e?sn(n):3===e?new pn(n>>8&15|n>>4&240,n>>4&15|240&n,(15&n)<<4|15&n,1):8===e?ln(n>>24&255,n>>16&255,n>>8&255,(255&n)/255):4===e?ln(n>>12&15|n>>8&240,n>>8&15|n>>4&240,n>>4&15|240&n,((15&n)<<4|15&n)/255):null):(n=Jt.exec(t))?new pn(n[1],n[2],n[3],1):(n=tn.exec(t))?new pn(255*n[1]/100,255*n[2]/100,255*n[3]/100,1):(n=nn.exec(t))?ln(n[1],n[2],n[3],n[4]):(n=en.exec(t))?ln(255*n[1]/100,255*n[2]/100,255*n[3]/100,n[4]):(n=rn.exec(t))?_n(n[1],n[2]/100,n[3]/100,1):(n=on.exec(t))?_n(n[1],n[2]/100,n[3]/100,n[4]):an.hasOwnProperty(t)?sn(an[t]):"transparent"===t?new pn(NaN,NaN,NaN,0):null}function sn(t){return new pn(t>>16&255,t>>8&255,255&t,1)}function ln(t,n,e,r){return r<=0&&(t=n=e=NaN),new pn(t,n,e,r)}function hn(t){return t instanceof $t||(t=fn(t)),t?new pn((t=t.rgb()).r,t.g,t.b,t.opacity):new pn}function dn(t,n,e,r){return 1===arguments.length?hn(t):new pn(t,n,e,null==r?1:r)}function pn(t,n,e,r){this.r=+t,this.g=+n,this.b=+e,this.opacity=+r}function vn(){return"#"+yn(this.r)+yn(this.g)+yn(this.b)}function gn(){var t=this.opacity;return(1===(t=isNaN(t)?1:Math.max(0,Math.min(1,t)))?"rgb(":"rgba(")+Math.max(0,Math.min(255,Math.round(this.r)||0))+", "+Math.max(0,Math.min(255,Math.round(this.g)||0))+", "+Math.max(0,Math.min(255,Math.round(this.b)||0))+(1===t?")":", "+t+")")}function yn(t){return((t=Math.max(0,Math.min(255,Math.round(t)||0)))<16?"0":"")+t.toString(16)}function _n(t,n,e,r){return r<=0?t=n=e=NaN:e<=0||e>=1?t=n=NaN:n<=0&&(t=NaN),new xn(t,n,e,r)}function bn(t){if(t instanceof xn)return new xn(t.h,t.s,t.l,t.opacity);if(t instanceof $t||(t=fn(t)),!t)return new xn;if(t instanceof xn)return t;var n=(t=t.rgb()).r/255,e=t.g/255,r=t.b/255,i=Math.min(n,e,r),o=Math.max(n,e,r),a=NaN,u=o-i,c=(o+i)/2;return u?(a=n===o?(e-r)/u+6*(e<r):e===o?(r-n)/u+2:(n-e)/u+4,u/=c<.5?o+i:2-o-i,a*=60):u=c>0&&c<1?0:a,new xn(a,u,c,t.opacity)}function mn(t,n,e,r){return 1===arguments.length?bn(t):new xn(t,n,e,null==r?1:r)}function xn(t,n,e,r){this.h=+t,this.s=+n,this.l=+e,this.opacity=+r}function wn(t,n,e){return 255*(t<60?n+(e-n)*t/60:t<180?e:t<240?n+(e-n)*(240-t)/60:n)}Vt($t,fn,{copy:function(t){return Object.assign(new this.constructor,this,t)},displayable:function(){return this.rgb().displayable()},hex:un,formatHex:un,formatHsl:function(){return bn(this).formatHsl()},formatRgb:cn,toString:cn}),Vt(pn,dn,Gt($t,{brighter:function(t){return t=null==t?1/.7:Math.pow(1/.7,t),new pn(this.r*t,this.g*t,this.b*t,this.opacity)},darker:function(t){return t=null==t?.7:Math.pow(.7,t),new pn(this.r*t,this.g*t,this.b*t,this.opacity)},rgb:function(){return this},displayable:function(){return-.5<=this.r&&this.r<255.5&&-.5<=this.g&&this.g<255.5&&-.5<=this.b&&this.b<255.5&&0<=this.opacity&&this.opacity<=1},hex:vn,formatHex:vn,formatRgb:gn,toString:gn})),Vt(xn,mn,Gt($t,{brighter:function(t){return t=null==t?1/.7:Math.pow(1/.7,t),new xn(this.h,this.s,this.l*t,this.opacity)},darker:function(t){return t=null==t?.7:Math.pow(.7,t),new xn(this.h,this.s,this.l*t,this.opacity)},rgb:function(){var t=this.h%360+360*(this.h<0),n=isNaN(t)||isNaN(this.s)?0:this.s,e=this.l,r=e+(e<.5?e:1-e)*n,i=2*e-r;return new pn(wn(t>=240?t-240:t+120,i,r),wn(t,i,r),wn(t<120?t+240:t-120,i,r),this.opacity)},displayable:function(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1},formatHsl:function(){var t=this.opacity;return(1===(t=isNaN(t)?1:Math.max(0,Math.min(1,t)))?"hsl(":"hsla(")+(this.h||0)+", "+100*(this.s||0)+"%, "+100*(this.l||0)+"%"+(1===t?")":", "+t+")")}}));var Mn=Math.PI/180,Nn=180/Math.PI,Tn=4/29,An=6/29,Sn=3*An*An;function kn(t){if(t instanceof Cn)return new Cn(t.l,t.a,t.b,t.opacity);if(t instanceof Un)return On(t);t instanceof pn||(t=hn(t));var n,e,r=Dn(t.r),i=Dn(t.g),o=Dn(t.b),a=Pn((.2225045*r+.7168786*i+.0606169*o)/1);return r===i&&i===o?n=e=a:(n=Pn((.4360747*r+.3850649*i+.1430804*o)/.96422),e=Pn((.0139322*r+.0971045*i+.7141733*o)/.82521)),new Cn(116*a-16,500*(n-a),200*(a-e),t.opacity)}function En(t,n,e,r){return 1===arguments.length?kn(t):new Cn(t,n,e,null==r?1:r)}function Cn(t,n,e,r){this.l=+t,this.a=+n,this.b=+e,this.opacity=+r}function Pn(t){return t>.008856451679035631?Math.pow(t,1/3):t/Sn+Tn}function zn(t){return t>An?t*t*t:Sn*(t-Tn)}function Rn(t){return 255*(t<=.0031308?12.92*t:1.055*Math.pow(t,1/2.4)-.055)}function Dn(t){return(t/=255)<=.04045?t/12.92:Math.pow((t+.055)/1.055,2.4)}function qn(t){if(t instanceof Un)return new Un(t.h,t.c,t.l,t.opacity);if(t instanceof Cn||(t=kn(t)),0===t.a&&0===t.b)return new Un(NaN,0<t.l&&t.l<100?0:NaN,t.l,t.opacity);var n=Math.atan2(t.b,t.a)*Nn;return new Un(n<0?n+360:n,Math.sqrt(t.a*t.a+t.b*t.b),t.l,t.opacity)}function Ln(t,n,e,r){return 1===arguments.length?qn(t):new Un(t,n,e,null==r?1:r)}function Un(t,n,e,r){this.h=+t,this.c=+n,this.l=+e,this.opacity=+r}function On(t){if(isNaN(t.h))return new Cn(t.l,0,0,t.opacity);var n=t.h*Mn;return new Cn(t.l,Math.cos(n)*t.c,Math.sin(n)*t.c,t.opacity)}Vt(Cn,En,Gt($t,{brighter:function(t){return new Cn(this.l+18*(null==t?1:t),this.a,this.b,this.opacity)},darker:function(t){return new Cn(this.l-18*(null==t?1:t),this.a,this.b,this.opacity)},rgb:function(){var t=(this.l+16)/116,n=isNaN(this.a)?t:t+this.a/500,e=isNaN(this.b)?t:t-this.b/200;return new pn(Rn(3.1338561*(n=.96422*zn(n))-1.6168667*(t=1*zn(t))-.4906146*(e=.82521*zn(e))),Rn(-.9787684*n+1.9161415*t+.033454*e),Rn(.0719453*n-.2289914*t+1.4052427*e),this.opacity)}})),Vt(Un,Ln,Gt($t,{brighter:function(t){return new Un(this.h,this.c,this.l+18*(null==t?1:t),this.opacity)},darker:function(t){return new Un(this.h,this.c,this.l-18*(null==t?1:t),this.opacity)},rgb:function(){return On(this).rgb()}}));var Bn=1.78277,Fn=-.29227,Yn=-.90649,In=1.97294,Hn=In*Yn,jn=In*Bn,Xn=Bn*Fn- -.14861*Yn;function Vn(t,n,e,r){return 1===arguments.length?function(t){if(t instanceof Gn)return new Gn(t.h,t.s,t.l,t.opacity);t instanceof pn||(t=hn(t));var n=t.r/255,e=t.g/255,r=t.b/255,i=(Xn*r+Hn*n-jn*e)/(Xn+Hn-jn),o=r-i,a=(In*(e-i)-Fn*o)/Yn,u=Math.sqrt(a*a+o*o)/(In*i*(1-i)),c=u?Math.atan2(a,o)*Nn-120:NaN;return new Gn(c<0?c+360:c,u,i,t.opacity)}(t):new Gn(t,n,e,null==r?1:r)}function Gn(t,n,e,r){this.h=+t,this.s=+n,this.l=+e,this.opacity=+r}function $n(t,n,e,r,i){var o=t*t,a=o*t;return((1-3*t+3*o-a)*n+(4-6*o+3*a)*e+(1+3*t+3*o-3*a)*r+a*i)/6}function Wn(t){var n=t.length-1;return function(e){var r=e<=0?e=0:e>=1?(e=1,n-1):Math.floor(e*n),i=t[r],o=t[r+1],a=r>0?t[r-1]:2*i-o,u=r<n-1?t[r+2]:2*o-i;return $n((e-r/n)*n,a,i,o,u)}}function Zn(t){var n=t.length;return function(e){var r=Math.floor(((e%=1)<0?++e:e)*n),i=t[(r+n-1)%n],o=t[r%n],a=t[(r+1)%n],u=t[(r+2)%n];return $n((e-r/n)*n,i,o,a,u)}}function Qn(t){return function(){return t}}function Kn(t,n){return function(e){return t+e*n}}function Jn(t,n){var e=n-t;return e?Kn(t,e>180||e<-180?e-360*Math.round(e/360):e):Qn(isNaN(t)?n:t)}function te(t,n){var e=n-t;return e?Kn(t,e):Qn(isNaN(t)?n:t)}Vt(Gn,Vn,Gt($t,{brighter:function(t){return t=null==t?1/.7:Math.pow(1/.7,t),new Gn(this.h,this.s,this.l*t,this.opacity)},darker:function(t){return t=null==t?.7:Math.pow(.7,t),new Gn(this.h,this.s,this.l*t,this.opacity)},rgb:function(){var t=isNaN(this.h)?0:(this.h+120)*Mn,n=+this.l,e=isNaN(this.s)?0:this.s*n*(1-n),r=Math.cos(t),i=Math.sin(t);return new pn(255*(n+e*(-.14861*r+Bn*i)),255*(n+e*(Fn*r+Yn*i)),255*(n+e*(In*r)),this.opacity)}}));var ne=function t(n){var e=function(t){return 1==(t=+t)?te:function(n,e){return e-n?function(t,n,e){return t=Math.pow(t,e),n=Math.pow(n,e)-t,e=1/e,function(r){return Math.pow(t+r*n,e)}}(n,e,t):Qn(isNaN(n)?e:n)}}(n);function r(t,n){var r=e((t=dn(t)).r,(n=dn(n)).r),i=e(t.g,n.g),o=e(t.b,n.b),a=te(t.opacity,n.opacity);return function(n){return t.r=r(n),t.g=i(n),t.b=o(n),t.opacity=a(n),t+""}}return r.gamma=t,r}(1);function ee(t){return function(n){var e,r,i=n.length,o=new Array(i),a=new Array(i),u=new Array(i);for(e=0;e<i;++e)r=dn(n[e]),o[e]=r.r||0,a[e]=r.g||0,u[e]=r.b||0;return o=t(o),a=t(a),u=t(u),r.opacity=1,function(t){return r.r=o(t),r.g=a(t),r.b=u(t),r+""}}}var re=ee(Wn),ie=ee(Zn);function oe(t,n){n||(n=[]);var e,r=t?Math.min(n.length,t.length):0,i=n.slice();return function(o){for(e=0;e<r;++e)i[e]=t[e]*(1-o)+n[e]*o;return i}}function ae(t){return ArrayBuffer.isView(t)&&!(t instanceof DataView)}function ue(t,n){var e,r=n?n.length:0,i=t?Math.min(r,t.length):0,o=new Array(i),a=new Array(r);for(e=0;e<i;++e)o[e]=pe(t[e],n[e]);for(;e<r;++e)a[e]=n[e];return function(t){for(e=0;e<i;++e)a[e]=o[e](t);return a}}function ce(t,n){var e=new Date;return t=+t,n=+n,function(r){return e.setTime(t*(1-r)+n*r),e}}function fe(t,n){return t=+t,n=+n,function(e){return t*(1-e)+n*e}}function se(t,n){var e,r={},i={};for(e in null!==t&&"object"==typeof t||(t={}),null!==n&&"object"==typeof n||(n={}),n)e in t?r[e]=pe(t[e],n[e]):i[e]=n[e];return function(t){for(e in r)i[e]=r[e](t);return i}}var le=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,he=new RegExp(le.source,"g");function de(t,n){var e,r,i,o=le.lastIndex=he.lastIndex=0,a=-1,u=[],c=[];for(t+="",n+="";(e=le.exec(t))&&(r=he.exec(n));)(i=r.index)>o&&(i=n.slice(o,i),u[a]?u[a]+=i:u[++a]=i),(e=e[0])===(r=r[0])?u[a]?u[a]+=r:u[++a]=r:(u[++a]=null,c.push({i:a,x:fe(e,r)})),o=he.lastIndex;return o<n.length&&(i=n.slice(o),u[a]?u[a]+=i:u[++a]=i),u.length<2?c[0]?function(t){return function(n){return t(n)+""}}(c[0].x):function(t){return function(){return t}}(n):(n=c.length,function(t){for(var e,r=0;r<n;++r)u[(e=c[r]).i]=e.x(t);return u.join("")})}function pe(t,n){var e,r=typeof n;return null==n||"boolean"===r?Qn(n):("number"===r?fe:"string"===r?(e=fn(n))?(n=e,ne):de:n instanceof fn?ne:n instanceof Date?ce:ae(n)?oe:Array.isArray(n)?ue:"function"!=typeof n.valueOf&&"function"!=typeof n.toString||isNaN(n)?se:fe)(t,n)}function ve(t,n){return t=+t,n=+n,function(e){return Math.round(t*(1-e)+n*e)}}var ge,ye,_e,be,me=180/Math.PI,xe={translateX:0,translateY:0,rotate:0,skewX:0,scaleX:1,scaleY:1};function we(t,n,e,r,i,o){var a,u,c;return(a=Math.sqrt(t*t+n*n))&&(t/=a,n/=a),(c=t*e+n*r)&&(e-=t*c,r-=n*c),(u=Math.sqrt(e*e+r*r))&&(e/=u,r/=u,c/=u),t*r<n*e&&(t=-t,n=-n,c=-c,a=-a),{translateX:i,translateY:o,rotate:Math.atan2(n,t)*me,skewX:Math.atan(c)*me,scaleX:a,scaleY:u}}function Me(t,n,e,r){function i(t){return t.length?t.pop()+" ":""}return function(o,a){var u=[],c=[];return o=t(o),a=t(a),function(t,r,i,o,a,u){if(t!==i||r!==o){var c=a.push("translate(",null,n,null,e);u.push({i:c-4,x:fe(t,i)},{i:c-2,x:fe(r,o)})}else(i||o)&&a.push("translate("+i+n+o+e)}(o.translateX,o.translateY,a.translateX,a.translateY,u,c),function(t,n,e,o){t!==n?(t-n>180?n+=360:n-t>180&&(t+=360),o.push({i:e.push(i(e)+"rotate(",null,r)-2,x:fe(t,n)})):n&&e.push(i(e)+"rotate("+n+r)}(o.rotate,a.rotate,u,c),function(t,n,e,o){t!==n?o.push({i:e.push(i(e)+"skewX(",null,r)-2,x:fe(t,n)}):n&&e.push(i(e)+"skewX("+n+r)}(o.skewX,a.skewX,u,c),function(t,n,e,r,o,a){if(t!==e||n!==r){var u=o.push(i(o)+"scale(",null,",",null,")");a.push({i:u-4,x:fe(t,e)},{i:u-2,x:fe(n,r)})}else 1===e&&1===r||o.push(i(o)+"scale("+e+","+r+")")}(o.scaleX,o.scaleY,a.scaleX,a.scaleY,u,c),o=a=null,function(t){for(var n,e=-1,r=c.length;++e<r;)u[(n=c[e]).i]=n.x(t);return u.join("")}}}var Ne=Me((function(t){return"none"===t?xe:(ge||(ge=document.createElement("DIV"),ye=document.documentElement,_e=document.defaultView),ge.style.transform=t,t=_e.getComputedStyle(ye.appendChild(ge),null).getPropertyValue("transform"),ye.removeChild(ge),we(+(t=t.slice(7,-1).split(","))[0],+t[1],+t[2],+t[3],+t[4],+t[5]))}),"px, ","px)","deg)"),Te=Me((function(t){return null==t?xe:(be||(be=document.createElementNS("http://www.w3.org/2000/svg","g")),be.setAttribute("transform",t),(t=be.transform.baseVal.consolidate())?we((t=t.matrix).a,t.b,t.c,t.d,t.e,t.f):xe)}),", ",")",")"),Ae=Math.SQRT2;function Se(t){return((t=Math.exp(t))+1/t)/2}function ke(t,n){var e,r,i=t[0],o=t[1],a=t[2],u=n[0],c=n[1],f=n[2],s=u-i,l=c-o,h=s*s+l*l;if(h<1e-12)r=Math.log(f/a)/Ae,e=function(t){return[i+t*s,o+t*l,a*Math.exp(Ae*t*r)]};else{var d=Math.sqrt(h),p=(f*f-a*a+4*h)/(2*a*2*d),v=(f*f-a*a-4*h)/(2*f*2*d),g=Math.log(Math.sqrt(p*p+1)-p),y=Math.log(Math.sqrt(v*v+1)-v);r=(y-g)/Ae,e=function(t){var n=t*r,e=Se(g),u=a/(2*d)*(e*function(t){return((t=Math.exp(2*t))-1)/(t+1)}(Ae*n+g)-function(t){return((t=Math.exp(t))-1/t)/2}(g));return[i+u*s,o+u*l,a*e/Se(Ae*n+g)]}}return e.duration=1e3*r,e}function Ee(t){return function(n,e){var r=t((n=mn(n)).h,(e=mn(e)).h),i=te(n.s,e.s),o=te(n.l,e.l),a=te(n.opacity,e.opacity);return function(t){return n.h=r(t),n.s=i(t),n.l=o(t),n.opacity=a(t),n+""}}}var Ce=Ee(Jn),Pe=Ee(te);function ze(t){return function(n,e){var r=t((n=Ln(n)).h,(e=Ln(e)).h),i=te(n.c,e.c),o=te(n.l,e.l),a=te(n.opacity,e.opacity);return function(t){return n.h=r(t),n.c=i(t),n.l=o(t),n.opacity=a(t),n+""}}}var Re=ze(Jn),De=ze(te);function qe(t){return function n(e){function r(n,r){var i=t((n=Vn(n)).h,(r=Vn(r)).h),o=te(n.s,r.s),a=te(n.l,r.l),u=te(n.opacity,r.opacity);return function(t){return n.h=i(t),n.s=o(t),n.l=a(Math.pow(t,e)),n.opacity=u(t),n+""}}return e=+e,r.gamma=n,r}(1)}var Le,Ue,Oe=qe(Jn),Be=qe(te),Fe=0,Ye=0,Ie=0,He=0,je=0,Xe=0,Ve="object"==typeof performance&&performance.now?performance:Date,Ge="object"==typeof window&&window.requestAnimationFrame?window.requestAnimationFrame.bind(window):function(t){setTimeout(t,17)};function $e(){return je||(Ge(We),je=Ve.now()+Xe)}function We(){je=0}function Ze(){this._call=this._time=this._next=null}function Qe(t,n,e){var r=new Ze;return r.restart(t,n,e),r}function Ke(){$e(),++Fe;for(var t,n=Le;n;)(t=je-n._time)>=0&&n._call.call(null,t),n=n._next;--Fe}function Je(){je=(He=Ve.now())+Xe,Fe=Ye=0;try{Ke()}finally{Fe=0,function(){for(var t,n,e=Le,r=1/0;e;)e._call?(r>e._time&&(r=e._time),t=e,e=e._next):(n=e._next,e._next=null,e=t?t._next=n:Le=n);Ue=t,nr(r)}(),je=0}}function tr(){var t=Ve.now(),n=t-He;n>1e3&&(Xe-=n,He=t)}function nr(t){Fe||(Ye&&(Ye=clearTimeout(Ye)),t-je>24?(t<1/0&&(Ye=setTimeout(Je,t-Ve.now()-Xe)),Ie&&(Ie=clearInterval(Ie))):(Ie||(He=Ve.now(),Ie=setInterval(tr,1e3)),Fe=1,Ge(Je)))}function er(t,n,e){var r=new Ze;return n=null==n?0:+n,r.restart((function(e){r.stop(),t(e+n)}),n,e),r}Ze.prototype=Qe.prototype={constructor:Ze,restart:function(t,n,e){if("function"!=typeof t)throw new TypeError("callback is not a function");e=(null==e?$e():+e)+(null==n?0:+n),this._next||Ue===this||(Ue?Ue._next=this:Le=this,Ue=this),this._call=t,this._time=e,nr()},stop:function(){this._call&&(this._call=null,this._time=1/0,nr())}};var rr=O("start","end","cancel","interrupt"),ir=[];function or(t,n,e,r,i,o){var a=t.__transition;if(a){if(e in a)return}else t.__transition={};!function(t,n,e){var r,i=t.__transition;function o(c){var f,s,l,h;if(1!==e.state)return u();for(f in i)if((h=i[f]).name===e.name){if(3===h.state)return er(o);4===h.state?(h.state=6,h.timer.stop(),h.on.call("interrupt",t,t.__data__,h.index,h.group),delete i[f]):+f<n&&(h.state=6,h.timer.stop(),h.on.call("cancel",t,t.__data__,h.index,h.group),delete i[f])}if(er((function(){3===e.state&&(e.state=4,e.timer.restart(a,e.delay,e.time),a(c))})),e.state=2,e.on.call("start",t,t.__data__,e.index,e.group),2===e.state){for(e.state=3,r=new Array(l=e.tween.length),f=0,s=-1;f<l;++f)(h=e.tween[f].value.call(t,t.__data__,e.index,e.group))&&(r[++s]=h);r.length=s+1}}function a(n){for(var i=n<e.duration?e.ease.call(null,n/e.duration):(e.timer.restart(u),e.state=5,1),o=-1,a=r.length;++o<a;)r[o].call(t,i);5===e.state&&(e.on.call("end",t,t.__data__,e.index,e.group),u())}function u(){for(var r in e.state=6,e.timer.stop(),delete i[n],i)return;delete t.__transition}i[n]=e,e.timer=Qe((function(t){e.state=1,e.timer.restart(o,e.delay,e.time),e.delay<=t&&o(t-e.delay)}),0,e.time)}(t,e,{name:n,index:r,group:i,on:rr,tween:ir,time:o.time,delay:o.delay,duration:o.duration,ease:o.ease,timer:null,state:0})}function ar(t,n){var e=cr(t,n);if(e.state>0)throw new Error("too late; already scheduled");return e}function ur(t,n){var e=cr(t,n);if(e.state>3)throw new Error("too late; already running");return e}function cr(t,n){var e=t.__transition;if(!e||!(e=e[n]))throw new Error("transition not found");return e}function fr(t,n){var e,r,i,o=t.__transition,a=!0;if(o){for(i in n=null==n?null:n+"",o)(e=o[i]).name===n?(r=e.state>2&&e.state<5,e.state=6,e.timer.stop(),e.on.call(r?"interrupt":"cancel",t,t.__data__,e.index,e.group),delete o[i]):a=!1;a&&delete t.__transition}}function sr(t,n,e){var r=t._id;return t.each((function(){var t=ur(this,r);(t.value||(t.value={}))[n]=e.apply(this,arguments)})),function(t){return cr(t,r).value[n]}}function lr(t,n){var e;return("number"==typeof n?fe:n instanceof fn?ne:(e=fn(n))?(n=e,ne):de)(t,n)}var hr=St.prototype.constructor;function dr(t){return function(){this.style.removeProperty(t)}}var pr=0;function vr(t,n,e,r){this._groups=t,this._parents=n,this._name=e,this._id=r}function gr(t){return St().transition(t)}function yr(){return++pr}var _r=St.prototype;function br(t){return((t*=2)<=1?t*t:--t*(2-t)+1)/2}function mr(t){return((t*=2)<=1?t*t*t:(t-=2)*t*t+2)/2}vr.prototype=gr.prototype={constructor:vr,select:function(t){var n=this._name,e=this._id;"function"!=typeof t&&(t=$(t));for(var r=this._groups,i=r.length,o=new Array(i),a=0;a<i;++a)for(var u,c,f=r[a],s=f.length,l=o[a]=new Array(s),h=0;h<s;++h)(u=f[h])&&(c=t.call(u,u.__data__,h,f))&&("__data__"in u&&(c.__data__=u.__data__),l[h]=c,or(l[h],n,e,h,l,cr(u,e)));return new vr(o,this._parents,n,e)},selectAll:function(t){var n=this._name,e=this._id;"function"!=typeof t&&(t=Z(t));for(var r=this._groups,i=r.length,o=[],a=[],u=0;u<i;++u)for(var c,f=r[u],s=f.length,l=0;l<s;++l)if(c=f[l]){for(var h,d=t.call(c,c.__data__,l,f),p=cr(c,e),v=0,g=d.length;v<g;++v)(h=d[v])&&or(h,n,e,v,d,p);o.push(d),a.push(c)}return new vr(o,a,n,e)},filter:function(t){"function"!=typeof t&&(t=Q(t));for(var n=this._groups,e=n.length,r=new Array(e),i=0;i<e;++i)for(var o,a=n[i],u=a.length,c=r[i]=[],f=0;f<u;++f)(o=a[f])&&t.call(o,o.__data__,f,a)&&c.push(o);return new vr(r,this._parents,this._name,this._id)},merge:function(t){if(t._id!==this._id)throw new Error;for(var n=this._groups,e=t._groups,r=n.length,i=e.length,o=Math.min(r,i),a=new Array(r),u=0;u<o;++u)for(var c,f=n[u],s=e[u],l=f.length,h=a[u]=new Array(l),d=0;d<l;++d)(c=f[d]||s[d])&&(h[d]=c);for(;u<r;++u)a[u]=n[u];return new vr(a,this._parents,this._name,this._id)},selection:function(){return new hr(this._groups,this._parents)},transition:function(){for(var t=this._name,n=this._id,e=yr(),r=this._groups,i=r.length,o=0;o<i;++o)for(var a,u=r[o],c=u.length,f=0;f<c;++f)if(a=u[f]){var s=cr(a,n);or(a,t,e,f,u,{time:s.time+s.delay+s.duration,delay:0,duration:s.duration,ease:s.ease})}return new vr(r,this._parents,t,e)},call:_r.call,nodes:_r.nodes,node:_r.node,size:_r.size,empty:_r.empty,each:_r.each,on:function(t,n){var e=this._id;return arguments.length<2?cr(this.node(),e).on.on(t):this.each(function(t,n,e){var r,i,o=function(t){return(t+"").trim().split(/^|\s+/).every((function(t){var n=t.indexOf(".");return n>=0&&(t=t.slice(0,n)),!t||"start"===t}))}(n)?ar:ur;return function(){var a=o(this,t),u=a.on;u!==r&&(i=(r=u).copy()).on(n,e),a.on=i}}(e,t,n))},attr:function(t,n){var e=X(t),r="transform"===e?Te:lr;return this.attrTween(t,"function"==typeof n?(e.local?function(t,n,e){var r,i,o;return function(){var a,u,c=e(this);if(null!=c)return(a=this.getAttributeNS(t.space,t.local))===(u=c+"")?null:a===r&&u===i?o:(i=u,o=n(r=a,c));this.removeAttributeNS(t.space,t.local)}}:function(t,n,e){var r,i,o;return function(){var a,u,c=e(this);if(null!=c)return(a=this.getAttribute(t))===(u=c+"")?null:a===r&&u===i?o:(i=u,o=n(r=a,c));this.removeAttribute(t)}})(e,r,sr(this,"attr."+t,n)):null==n?(e.local?function(t){return function(){this.removeAttributeNS(t.space,t.local)}}:function(t){return function(){this.removeAttribute(t)}})(e):(e.local?function(t,n,e){var r,i,o=e+"";return function(){var a=this.getAttributeNS(t.space,t.local);return a===o?null:a===r?i:i=n(r=a,e)}}:function(t,n,e){var r,i,o=e+"";return function(){var a=this.getAttribute(t);return a===o?null:a===r?i:i=n(r=a,e)}})(e,r,n))},attrTween:function(t,n){var e="attr."+t;if(arguments.length<2)return(e=this.tween(e))&&e._value;if(null==n)return this.tween(e,null);if("function"!=typeof n)throw new Error;var r=X(t);return this.tween(e,(r.local?function(t,n){var e,r;function i(){var i=n.apply(this,arguments);return i!==r&&(e=(r=i)&&function(t,n){return function(e){this.setAttributeNS(t.space,t.local,n.call(this,e))}}(t,i)),e}return i._value=n,i}:function(t,n){var e,r;function i(){var i=n.apply(this,arguments);return i!==r&&(e=(r=i)&&function(t,n){return function(e){this.setAttribute(t,n.call(this,e))}}(t,i)),e}return i._value=n,i})(r,n))},style:function(t,n,e){var r="transform"==(t+="")?Ne:lr;return null==n?this.styleTween(t,function(t,n){var e,r,i;return function(){var o=it(this,t),a=(this.style.removeProperty(t),it(this,t));return o===a?null:o===e&&a===r?i:i=n(e=o,r=a)}}(t,r)).on("end.style."+t,dr(t)):"function"==typeof n?this.styleTween(t,function(t,n,e){var r,i,o;return function(){var a=it(this,t),u=e(this),c=u+"";return null==u&&(this.style.removeProperty(t),c=u=it(this,t)),a===c?null:a===r&&c===i?o:(i=c,o=n(r=a,u))}}(t,r,sr(this,"style."+t,n))).each(function(t,n){var e,r,i,o,a="style."+n,u="end."+a;return function(){var c=ur(this,t),f=c.on,s=null==c.value[a]?o||(o=dr(n)):void 0;f===e&&i===s||(r=(e=f).copy()).on(u,i=s),c.on=r}}(this._id,t)):this.styleTween(t,function(t,n,e){var r,i,o=e+"";return function(){var a=it(this,t);return a===o?null:a===r?i:i=n(r=a,e)}}(t,r,n),e).on("end.style."+t,null)},styleTween:function(t,n,e){var r="style."+(t+="");if(arguments.length<2)return(r=this.tween(r))&&r._value;if(null==n)return this.tween(r,null);if("function"!=typeof n)throw new Error;return this.tween(r,function(t,n,e){var r,i;function o(){var o=n.apply(this,arguments);return o!==i&&(r=(i=o)&&function(t,n,e){return function(r){this.style.setProperty(t,n.call(this,r),e)}}(t,o,e)),r}return o._value=n,o}(t,n,null==e?"":e))},text:function(t){return this.tween("text","function"==typeof t?function(t){return function(){var n=t(this);this.textContent=null==n?"":n}}(sr(this,"text",t)):function(t){return function(){this.textContent=t}}(null==t?"":t+""))},textTween:function(t){var n="text";if(arguments.length<1)return(n=this.tween(n))&&n._value;if(null==t)return this.tween(n,null);if("function"!=typeof t)throw new Error;return this.tween(n,function(t){var n,e;function r(){var r=t.apply(this,arguments);return r!==e&&(n=(e=r)&&function(t){return function(n){this.textContent=t.call(this,n)}}(r)),n}return r._value=t,r}(t))},remove:function(){return this.on("end.remove",function(t){return function(){var n=this.parentNode;for(var e in this.__transition)if(+e!==t)return;n&&n.removeChild(this)}}(this._id))},tween:function(t,n){var e=this._id;if(t+="",arguments.length<2){for(var r,i=cr(this.node(),e).tween,o=0,a=i.length;o<a;++o)if((r=i[o]).name===t)return r.value;return null}return this.each((null==n?function(t,n){var e,r;return function(){var i=ur(this,t),o=i.tween;if(o!==e)for(var a=0,u=(r=e=o).length;a<u;++a)if(r[a].name===n){(r=r.slice()).splice(a,1);break}i.tween=r}}:function(t,n,e){var r,i;if("function"!=typeof e)throw new Error;return function(){var o=ur(this,t),a=o.tween;if(a!==r){i=(r=a).slice();for(var u={name:n,value:e},c=0,f=i.length;c<f;++c)if(i[c].name===n){i[c]=u;break}c===f&&i.push(u)}o.tween=i}})(e,t,n))},delay:function(t){var n=this._id;return arguments.length?this.each(("function"==typeof t?function(t,n){return function(){ar(this,t).delay=+n.apply(this,arguments)}}:function(t,n){return n=+n,function(){ar(this,t).delay=n}})(n,t)):cr(this.node(),n).delay},duration:function(t){var n=this._id;return arguments.length?this.each(("function"==typeof t?function(t,n){return function(){ur(this,t).duration=+n.apply(this,arguments)}}:function(t,n){return n=+n,function(){ur(this,t).duration=n}})(n,t)):cr(this.node(),n).duration},ease:function(t){var n=this._id;return arguments.length?this.each(function(t,n){if("function"!=typeof n)throw new Error;return function(){ur(this,t).ease=n}}(n,t)):cr(this.node(),n).ease},end:function(){var t,n,e=this,r=e._id,i=e.size();return new Promise((function(o,a){var u={value:a},c={value:function(){0==--i&&o()}};e.each((function(){var e=ur(this,r),i=e.on;i!==t&&((n=(t=i).copy())._.cancel.push(u),n._.interrupt.push(u),n._.end.push(c)),e.on=n}))}))}};var xr=function t(n){function e(t){return Math.pow(t,n)}return n=+n,e.exponent=t,e}(3),wr=function t(n){function e(t){return 1-Math.pow(1-t,n)}return n=+n,e.exponent=t,e}(3),Mr=function t(n){function e(t){return((t*=2)<=1?Math.pow(t,n):2-Math.pow(2-t,n))/2}return n=+n,e.exponent=t,e}(3),Nr=Math.PI,Tr=Nr/2;function Ar(t){return(1-Math.cos(Nr*t))/2}function Sr(t){return((t*=2)<=1?Math.pow(2,10*t-10):2-Math.pow(2,10-10*t))/2}function kr(t){return((t*=2)<=1?1-Math.sqrt(1-t*t):Math.sqrt(1-(t-=2)*t)+1)/2}var Er=4/11,Cr=7.5625;function Pr(t){return(t=+t)<Er?Cr*t*t:t<.7272727272727273?Cr*(t-=.5454545454545454)*t+.75:t<.9090909090909091?Cr*(t-=.8181818181818182)*t+.9375:Cr*(t-=.9545454545454546)*t+.984375}var zr=function t(n){function e(t){return t*t*((n+1)*t-n)}return n=+n,e.overshoot=t,e}(1.70158),Rr=function t(n){function e(t){return--t*t*((n+1)*t+n)+1}return n=+n,e.overshoot=t,e}(1.70158),Dr=function t(n){function e(t){return((t*=2)<1?t*t*((n+1)*t-n):(t-=2)*t*((n+1)*t+n)+2)/2}return n=+n,e.overshoot=t,e}(1.70158),qr=2*Math.PI,Lr=function t(n,e){var r=Math.asin(1/(n=Math.max(1,n)))*(e/=qr);function i(t){return n*Math.pow(2,10*--t)*Math.sin((r-t)/e)}return i.amplitude=function(n){return t(n,e*qr)},i.period=function(e){return t(n,e)},i}(1,.3),Ur=function t(n,e){var r=Math.asin(1/(n=Math.max(1,n)))*(e/=qr);function i(t){return 1-n*Math.pow(2,-10*(t=+t))*Math.sin((t+r)/e)}return i.amplitude=function(n){return t(n,e*qr)},i.period=function(e){return t(n,e)},i}(1,.3),Or=function t(n,e){var r=Math.asin(1/(n=Math.max(1,n)))*(e/=qr);function i(t){return((t=2*t-1)<0?n*Math.pow(2,10*t)*Math.sin((r-t)/e):2-n*Math.pow(2,-10*t)*Math.sin((r+t)/e))/2}return i.amplitude=function(n){return t(n,e*qr)},i.period=function(e){return t(n,e)},i}(1,.3),Br={time:null,delay:0,duration:250,ease:mr};function Fr(t,n){for(var e;!(e=t.__transition)||!(e=e[n]);)if(!(t=t.parentNode))return Br.time=$e(),Br;return e}St.prototype.interrupt=function(t){return this.each((function(){fr(this,t)}))},St.prototype.transition=function(t){var n,e;t instanceof vr?(n=t._id,t=t._name):(n=yr(),(e=Br).time=$e(),t=null==t?null:t+"");for(var r=this._groups,i=r.length,o=0;o<i;++o)for(var a,u=r[o],c=u.length,f=0;f<c;++f)(a=u[f])&&or(a,t,n,f,u,e||Fr(a,n));return new vr(r,this._parents,t,n)};var Yr=[null];function Ir(t){return function(){return t}}function Hr(t,n,e){this.target=t,this.type=n,this.selection=e}function jr(){t.event.stopImmediatePropagation()}function Xr(){t.event.preventDefault(),t.event.stopImmediatePropagation()}var Vr={name:"drag"},Gr={name:"space"},$r={name:"handle"},Wr={name:"center"};function Zr(t){return[+t[0],+t[1]]}function Qr(t){return[Zr(t[0]),Zr(t[1])]}var Kr={name:"x",handles:["w","e"].map(ai),input:function(t,n){return null==t?null:[[+t[0],n[0][1]],[+t[1],n[1][1]]]},output:function(t){return t&&[t[0][0],t[1][0]]}},Jr={name:"y",handles:["n","s"].map(ai),input:function(t,n){return null==t?null:[[n[0][0],+t[0]],[n[1][0],+t[1]]]},output:function(t){return t&&[t[0][1],t[1][1]]}},ti={name:"xy",handles:["n","w","e","s","nw","ne","sw","se"].map(ai),input:function(t){return null==t?null:Qr(t)},output:function(t){return t}},ni={overlay:"crosshair",selection:"move",n:"ns-resize",e:"ew-resize",s:"ns-resize",w:"ew-resize",nw:"nwse-resize",ne:"nesw-resize",se:"nwse-resize",sw:"nesw-resize"},ei={e:"w",w:"e",nw:"ne",ne:"nw",se:"sw",sw:"se"},ri={n:"s",s:"n",nw:"sw",ne:"se",se:"ne",sw:"nw"},ii={overlay:1,selection:1,n:null,e:1,s:null,w:-1,nw:-1,ne:1,se:1,sw:-1},oi={overlay:1,selection:1,n:-1,e:null,s:1,w:null,nw:-1,ne:-1,se:1,sw:1};function ai(t){return{type:t}}function ui(){return!t.event.ctrlKey&&!t.event.button}function ci(){var t=this.ownerSVGElement||this;return t.hasAttribute("viewBox")?[[(t=t.viewBox.baseVal).x,t.y],[t.x+t.width,t.y+t.height]]:[[0,0],[t.width.baseVal.value,t.height.baseVal.value]]}function fi(){return navigator.maxTouchPoints||"ontouchstart"in this}function si(t){for(;!t.__brush;)if(!(t=t.parentNode))return;return t.__brush}function li(n){var e,r=ci,i=ui,o=fi,a=!0,u=O("start","brush","end"),c=6;function f(t){var e=t.property("__brush",g).selectAll(".overlay").data([ai("overlay")]);e.enter().append("rect").attr("class","overlay").attr("pointer-events","all").attr("cursor",ni.overlay).merge(e).each((function(){var t=si(this).extent;kt(this).attr("x",t[0][0]).attr("y",t[0][1]).attr("width",t[1][0]-t[0][0]).attr("height",t[1][1]-t[0][1])})),t.selectAll(".selection").data([ai("selection")]).enter().append("rect").attr("class","selection").attr("cursor",ni.selection).attr("fill","#777").attr("fill-opacity",.3).attr("stroke","#fff").attr("shape-rendering","crispEdges");var r=t.selectAll(".handle").data(n.handles,(function(t){return t.type}));r.exit().remove(),r.enter().append("rect").attr("class",(function(t){return"handle handle--"+t.type})).attr("cursor",(function(t){return ni[t.type]})),t.each(s).attr("fill","none").attr("pointer-events","all").on("mousedown.brush",d).filter(o).on("touchstart.brush",d).on("touchmove.brush",p).on("touchend.brush touchcancel.brush",v).style("touch-action","none").style("-webkit-tap-highlight-color","rgba(0,0,0,0)")}function s(){var t=kt(this),n=si(this).selection;n?(t.selectAll(".selection").style("display",null).attr("x",n[0][0]).attr("y",n[0][1]).attr("width",n[1][0]-n[0][0]).attr("height",n[1][1]-n[0][1]),t.selectAll(".handle").style("display",null).attr("x",(function(t){return"e"===t.type[t.type.length-1]?n[1][0]-c/2:n[0][0]-c/2})).attr("y",(function(t){return"s"===t.type[0]?n[1][1]-c/2:n[0][1]-c/2})).attr("width",(function(t){return"n"===t.type||"s"===t.type?n[1][0]-n[0][0]+c:c})).attr("height",(function(t){return"e"===t.type||"w"===t.type?n[1][1]-n[0][1]+c:c}))):t.selectAll(".selection,.handle").style("display","none").attr("x",null).attr("y",null).attr("width",null).attr("height",null)}function l(t,n,e){return!e&&t.__brush.emitter||new h(t,n)}function h(t,n){this.that=t,this.args=n,this.state=t.__brush,this.active=0}function d(){if((!e||t.event.touches)&&i.apply(this,arguments)){var r,o,u,c,f,h,d,p,v,g,y,_,b=this,m=t.event.target.__data__.type,x="selection"===(a&&t.event.metaKey?m="overlay":m)?Vr:a&&t.event.altKey?Wr:$r,w=n===Jr?null:ii[m],M=n===Kr?null:oi[m],N=si(b),T=N.extent,A=N.selection,S=T[0][0],k=T[0][1],E=T[1][0],C=T[1][1],P=0,z=0,R=w&&M&&a&&t.event.shiftKey,D=t.event.touches?(_=t.event.changedTouches[0].identifier,function(n){return qt(n,t.event.touches,_)}):Dt,q=D(b),L=q,U=l(b,arguments,!0).beforestart();"overlay"===m?(A&&(v=!0),N.selection=A=[[r=n===Jr?S:q[0],u=n===Kr?k:q[1]],[f=n===Jr?E:r,d=n===Kr?C:u]]):(r=A[0][0],u=A[0][1],f=A[1][0],d=A[1][1]),o=r,c=u,h=f,p=d;var O=kt(b).attr("pointer-events","none"),B=O.selectAll(".overlay").attr("cursor",ni[m]);if(t.event.touches)U.moved=Y,U.ended=H;else{var F=kt(t.event.view).on("mousemove.brush",Y,!0).on("mouseup.brush",H,!0);a&&F.on("keydown.brush",(function(){switch(t.event.keyCode){case 16:R=w&&M;break;case 18:x===$r&&(w&&(f=h-P*w,r=o+P*w),M&&(d=p-z*M,u=c+z*M),x=Wr,I());break;case 32:x!==$r&&x!==Wr||(w<0?f=h-P:w>0&&(r=o-P),M<0?d=p-z:M>0&&(u=c-z),x=Gr,B.attr("cursor",ni.selection),I());break;default:return}Xr()}),!0).on("keyup.brush",(function(){switch(t.event.keyCode){case 16:R&&(g=y=R=!1,I());break;case 18:x===Wr&&(w<0?f=h:w>0&&(r=o),M<0?d=p:M>0&&(u=c),x=$r,I());break;case 32:x===Gr&&(t.event.altKey?(w&&(f=h-P*w,r=o+P*w),M&&(d=p-z*M,u=c+z*M),x=Wr):(w<0?f=h:w>0&&(r=o),M<0?d=p:M>0&&(u=c),x=$r),B.attr("cursor",ni[m]),I());break;default:return}Xr()}),!0),Ot(t.event.view)}jr(),fr(b),s.call(b),U.start()}function Y(){var t=D(b);!R||g||y||(Math.abs(t[0]-L[0])>Math.abs(t[1]-L[1])?y=!0:g=!0),L=t,v=!0,Xr(),I()}function I(){var t;switch(P=L[0]-q[0],z=L[1]-q[1],x){case Gr:case Vr:w&&(P=Math.max(S-r,Math.min(E-f,P)),o=r+P,h=f+P),M&&(z=Math.max(k-u,Math.min(C-d,z)),c=u+z,p=d+z);break;case $r:w<0?(P=Math.max(S-r,Math.min(E-r,P)),o=r+P,h=f):w>0&&(P=Math.max(S-f,Math.min(E-f,P)),o=r,h=f+P),M<0?(z=Math.max(k-u,Math.min(C-u,z)),c=u+z,p=d):M>0&&(z=Math.max(k-d,Math.min(C-d,z)),c=u,p=d+z);break;case Wr:w&&(o=Math.max(S,Math.min(E,r-P*w)),h=Math.max(S,Math.min(E,f+P*w))),M&&(c=Math.max(k,Math.min(C,u-z*M)),p=Math.max(k,Math.min(C,d+z*M)))}h<o&&(w*=-1,t=r,r=f,f=t,t=o,o=h,h=t,m in ei&&B.attr("cursor",ni[m=ei[m]])),p<c&&(M*=-1,t=u,u=d,d=t,t=c,c=p,p=t,m in ri&&B.attr("cursor",ni[m=ri[m]])),N.selection&&(A=N.selection),g&&(o=A[0][0],h=A[1][0]),y&&(c=A[0][1],p=A[1][1]),A[0][0]===o&&A[0][1]===c&&A[1][0]===h&&A[1][1]===p||(N.selection=[[o,c],[h,p]],s.call(b),U.brush())}function H(){if(jr(),t.event.touches){if(t.event.touches.length)return;e&&clearTimeout(e),e=setTimeout((function(){e=null}),500)}else Bt(t.event.view,v),F.on("keydown.brush keyup.brush mousemove.brush mouseup.brush",null);O.attr("pointer-events","all"),B.attr("cursor",ni.overlay),N.selection&&(A=N.selection),function(t){return t[0][0]===t[1][0]||t[0][1]===t[1][1]}(A)&&(N.selection=null,s.call(b)),U.end()}}function p(){l(this,arguments).moved()}function v(){l(this,arguments).ended()}function g(){var t=this.__brush||{selection:null};return t.extent=Qr(r.apply(this,arguments)),t.dim=n,t}return f.move=function(t,e){t.selection?t.on("start.brush",(function(){l(this,arguments).beforestart().start()})).on("interrupt.brush end.brush",(function(){l(this,arguments).end()})).tween("brush",(function(){var t=this,r=t.__brush,i=l(t,arguments),o=r.selection,a=n.input("function"==typeof e?e.apply(this,arguments):e,r.extent),u=pe(o,a);function c(n){r.selection=1===n&&null===a?null:u(n),s.call(t),i.brush()}return null!==o&&null!==a?c:c(1)})):t.each((function(){var t=this,r=arguments,i=t.__brush,o=n.input("function"==typeof e?e.apply(t,r):e,i.extent),a=l(t,r).beforestart();fr(t),i.selection=null===o?null:o,s.call(t),a.start().brush().end()}))},f.clear=function(t){f.move(t,null)},h.prototype={beforestart:function(){return 1==++this.active&&(this.state.emitter=this,this.starting=!0),this},start:function(){return this.starting?(this.starting=!1,this.emit("start")):this.emit("brush"),this},brush:function(){return this.emit("brush"),this},end:function(){return 0==--this.active&&(delete this.state.emitter,this.emit("end")),this},emit:function(t){Mt(new Hr(f,t,n.output(this.state.selection)),u.apply,u,[t,this.that,this.args])}},f.extent=function(t){return arguments.length?(r="function"==typeof t?t:Ir(Qr(t)),f):r},f.filter=function(t){return arguments.length?(i="function"==typeof t?t:Ir(!!t),f):i},f.touchable=function(t){return arguments.length?(o="function"==typeof t?t:Ir(!!t),f):o},f.handleSize=function(t){return arguments.length?(c=+t,f):c},f.keyModifiers=function(t){return arguments.length?(a=!!t,f):a},f.on=function(){var t=u.on.apply(u,arguments);return t===u?f:t},f}var hi=Math.cos,di=Math.sin,pi=Math.PI,vi=pi/2,gi=2*pi,yi=Math.max;function _i(t){return function(n,e){return t(n.source.value+n.target.value,e.source.value+e.target.value)}}var bi=Array.prototype.slice;function mi(t){return function(){return t}}var xi=Math.PI,wi=2*xi,Mi=wi-1e-6;function Ni(){this._x0=this._y0=this._x1=this._y1=null,this._=""}function Ti(){return new Ni}function Ai(t){return t.source}function Si(t){return t.target}function ki(t){return t.radius}function Ei(t){return t.startAngle}function Ci(t){return t.endAngle}function Pi(){}function zi(t,n){var e=new Pi;if(t instanceof Pi)t.each((function(t,n){e.set(n,t)}));else if(Array.isArray(t)){var r,i=-1,o=t.length;if(null==n)for(;++i<o;)e.set(i,t[i]);else for(;++i<o;)e.set(n(r=t[i],i,t),r)}else if(t)for(var a in t)e.set(a,t[a]);return e}function Ri(){return{}}function Di(t,n,e){t[n]=e}function qi(){return zi()}function Li(t,n,e){t.set(n,e)}function Ui(){}Ni.prototype=Ti.prototype={constructor:Ni,moveTo:function(t,n){this._+="M"+(this._x0=this._x1=+t)+","+(this._y0=this._y1=+n)},closePath:function(){null!==this._x1&&(this._x1=this._x0,this._y1=this._y0,this._+="Z")},lineTo:function(t,n){this._+="L"+(this._x1=+t)+","+(this._y1=+n)},quadraticCurveTo:function(t,n,e,r){this._+="Q"+ +t+","+ +n+","+(this._x1=+e)+","+(this._y1=+r)},bezierCurveTo:function(t,n,e,r,i,o){this._+="C"+ +t+","+ +n+","+ +e+","+ +r+","+(this._x1=+i)+","+(this._y1=+o)},arcTo:function(t,n,e,r,i){t=+t,n=+n,e=+e,r=+r,i=+i;var o=this._x1,a=this._y1,u=e-t,c=r-n,f=o-t,s=a-n,l=f*f+s*s;if(i<0)throw new Error("negative radius: "+i);if(null===this._x1)this._+="M"+(this._x1=t)+","+(this._y1=n);else if(l>1e-6)if(Math.abs(s*u-c*f)>1e-6&&i){var h=e-o,d=r-a,p=u*u+c*c,v=h*h+d*d,g=Math.sqrt(p),y=Math.sqrt(l),_=i*Math.tan((xi-Math.acos((p+l-v)/(2*g*y)))/2),b=_/y,m=_/g;Math.abs(b-1)>1e-6&&(this._+="L"+(t+b*f)+","+(n+b*s)),this._+="A"+i+","+i+",0,0,"+ +(s*h>f*d)+","+(this._x1=t+m*u)+","+(this._y1=n+m*c)}else this._+="L"+(this._x1=t)+","+(this._y1=n)},arc:function(t,n,e,r,i,o){t=+t,n=+n,o=!!o;var a=(e=+e)*Math.cos(r),u=e*Math.sin(r),c=t+a,f=n+u,s=1^o,l=o?r-i:i-r;if(e<0)throw new Error("negative radius: "+e);null===this._x1?this._+="M"+c+","+f:(Math.abs(this._x1-c)>1e-6||Math.abs(this._y1-f)>1e-6)&&(this._+="L"+c+","+f),e&&(l<0&&(l=l%wi+wi),l>Mi?this._+="A"+e+","+e+",0,1,"+s+","+(t-a)+","+(n-u)+"A"+e+","+e+",0,1,"+s+","+(this._x1=c)+","+(this._y1=f):l>1e-6&&(this._+="A"+e+","+e+",0,"+ +(l>=xi)+","+s+","+(this._x1=t+e*Math.cos(i))+","+(this._y1=n+e*Math.sin(i))))},rect:function(t,n,e,r){this._+="M"+(this._x0=this._x1=+t)+","+(this._y0=this._y1=+n)+"h"+ +e+"v"+ +r+"h"+-e+"Z"},toString:function(){return this._}},Pi.prototype=zi.prototype={constructor:Pi,has:function(t){return"$"+t in this},get:function(t){return this["$"+t]},set:function(t,n){return this["$"+t]=n,this},remove:function(t){var n="$"+t;return n in this&&delete this[n]},clear:function(){for(var t in this)"$"===t[0]&&delete this[t]},keys:function(){var t=[];for(var n in this)"$"===n[0]&&t.push(n.slice(1));return t},values:function(){var t=[];for(var n in this)"$"===n[0]&&t.push(this[n]);return t},entries:function(){var t=[];for(var n in this)"$"===n[0]&&t.push({key:n.slice(1),value:this[n]});return t},size:function(){var t=0;for(var n in this)"$"===n[0]&&++t;return t},empty:function(){for(var t in this)if("$"===t[0])return!1;return!0},each:function(t){for(var n in this)"$"===n[0]&&t(this[n],n.slice(1),this)}};var Oi=zi.prototype;function Bi(t,n){var e=new Ui;if(t instanceof Ui)t.each((function(t){e.add(t)}));else if(t){var r=-1,i=t.length;if(null==n)for(;++r<i;)e.add(t[r]);else for(;++r<i;)e.add(n(t[r],r,t))}return e}Ui.prototype=Bi.prototype={constructor:Ui,has:Oi.has,add:function(t){return this["$"+(t+="")]=t,this},remove:Oi.remove,clear:Oi.clear,values:Oi.keys,size:Oi.size,empty:Oi.empty,each:Oi.each};var Fi=Array.prototype.slice;function Yi(t,n){return t-n}function Ii(t){return function(){return t}}function Hi(t,n){for(var e,r=-1,i=n.length;++r<i;)if(e=ji(t,n[r]))return e;return 0}function ji(t,n){for(var e=n[0],r=n[1],i=-1,o=0,a=t.length,u=a-1;o<a;u=o++){var c=t[o],f=c[0],s=c[1],l=t[u],h=l[0],d=l[1];if(Xi(c,l,n))return 0;s>r!=d>r&&e<(h-f)*(r-s)/(d-s)+f&&(i=-i)}return i}function Xi(t,n,e){var r,i,o,a;return function(t,n,e){return(n[0]-t[0])*(e[1]-t[1])==(e[0]-t[0])*(n[1]-t[1])}(t,n,e)&&(i=t[r=+(t[0]===n[0])],o=e[r],a=n[r],i<=o&&o<=a||a<=o&&o<=i)}function Vi(){}var Gi=[[],[[[1,1.5],[.5,1]]],[[[1.5,1],[1,1.5]]],[[[1.5,1],[.5,1]]],[[[1,.5],[1.5,1]]],[[[1,1.5],[.5,1]],[[1,.5],[1.5,1]]],[[[1,.5],[1,1.5]]],[[[1,.5],[.5,1]]],[[[.5,1],[1,.5]]],[[[1,1.5],[1,.5]]],[[[.5,1],[1,.5]],[[1.5,1],[1,1.5]]],[[[1.5,1],[1,.5]]],[[[.5,1],[1.5,1]]],[[[1,1.5],[1.5,1]]],[[[.5,1],[1,1.5]]],[]];function $i(){var t=1,n=1,e=M,r=u;function i(t){var n=e(t);if(Array.isArray(n))n=n.slice().sort(Yi);else{var r=s(t),i=r[0],a=r[1];n=w(i,a,n),n=g(Math.floor(i/n)*n,Math.floor(a/n)*n,n)}return n.map((function(n){return o(t,n)}))}function o(e,i){var o=[],u=[];return function(e,r,i){var o,u,c,f,s,l,h=new Array,d=new Array;for(o=u=-1,f=e[0]>=r,Gi[f<<1].forEach(p);++o<t-1;)c=f,f=e[o+1]>=r,Gi[c|f<<1].forEach(p);for(Gi[f<<0].forEach(p);++u<n-1;){for(o=-1,f=e[u*t+t]>=r,s=e[u*t]>=r,Gi[f<<1|s<<2].forEach(p);++o<t-1;)c=f,f=e[u*t+t+o+1]>=r,l=s,s=e[u*t+o+1]>=r,Gi[c|f<<1|s<<2|l<<3].forEach(p);Gi[f|s<<3].forEach(p)}for(o=-1,s=e[u*t]>=r,Gi[s<<2].forEach(p);++o<t-1;)l=s,s=e[u*t+o+1]>=r,Gi[s<<2|l<<3].forEach(p);function p(t){var n,e,r=[t[0][0]+o,t[0][1]+u],c=[t[1][0]+o,t[1][1]+u],f=a(r),s=a(c);(n=d[f])?(e=h[s])?(delete d[n.end],delete h[e.start],n===e?(n.ring.push(c),i(n.ring)):h[n.start]=d[e.end]={start:n.start,end:e.end,ring:n.ring.concat(e.ring)}):(delete d[n.end],n.ring.push(c),d[n.end=s]=n):(n=h[s])?(e=d[f])?(delete h[n.start],delete d[e.end],n===e?(n.ring.push(c),i(n.ring)):h[e.start]=d[n.end]={start:e.start,end:n.end,ring:e.ring.concat(n.ring)}):(delete h[n.start],n.ring.unshift(r),h[n.start=f]=n):h[f]=d[s]={start:f,end:s,ring:[r,c]}}Gi[s<<3].forEach(p)}(e,i,(function(t){r(t,e,i),function(t){for(var n=0,e=t.length,r=t[e-1][1]*t[0][0]-t[e-1][0]*t[0][1];++n<e;)r+=t[n-1][1]*t[n][0]-t[n-1][0]*t[n][1];return r}(t)>0?o.push([t]):u.push(t)})),u.forEach((function(t){for(var n,e=0,r=o.length;e<r;++e)if(-1!==Hi((n=o[e])[0],t))return void n.push(t)})),{type:"MultiPolygon",value:i,coordinates:o}}function a(n){return 2*n[0]+n[1]*(t+1)*4}function u(e,r,i){e.forEach((function(e){var o,a=e[0],u=e[1],c=0|a,f=0|u,s=r[f*t+c];a>0&&a<t&&c===a&&(o=r[f*t+c-1],e[0]=a+(i-o)/(s-o)-.5),u>0&&u<n&&f===u&&(o=r[(f-1)*t+c],e[1]=u+(i-o)/(s-o)-.5)}))}return i.contour=o,i.size=function(e){if(!arguments.length)return[t,n];var r=Math.ceil(e[0]),o=Math.ceil(e[1]);if(!(r>0&&o>0))throw new Error("invalid size");return t=r,n=o,i},i.thresholds=function(t){return arguments.length?(e="function"==typeof t?t:Array.isArray(t)?Ii(Fi.call(t)):Ii(t),i):e},i.smooth=function(t){return arguments.length?(r=t?u:Vi,i):r===u},i}function Wi(t,n,e){for(var r=t.width,i=t.height,o=1+(e<<1),a=0;a<i;++a)for(var u=0,c=0;u<r+e;++u)u<r&&(c+=t.data[u+a*r]),u>=e&&(u>=o&&(c-=t.data[u-o+a*r]),n.data[u-e+a*r]=c/Math.min(u+1,r-1+o-u,o))}function Zi(t,n,e){for(var r=t.width,i=t.height,o=1+(e<<1),a=0;a<r;++a)for(var u=0,c=0;u<i+e;++u)u<i&&(c+=t.data[a+u*r]),u>=e&&(u>=o&&(c-=t.data[a+(u-o)*r]),n.data[a+(u-e)*r]=c/Math.min(u+1,i-1+o-u,o))}function Qi(t){return t[0]}function Ki(t){return t[1]}function Ji(){return 1}var to={},no={};function eo(t){return new Function("d","return {"+t.map((function(t,n){return JSON.stringify(t)+": d["+n+'] || ""'})).join(",")+"}")}function ro(t){var n=Object.create(null),e=[];return t.forEach((function(t){for(var r in t)r in n||e.push(n[r]=r)})),e}function io(t,n){var e=t+"",r=e.length;return r<n?new Array(n-r+1).join(0)+e:e}function oo(t){var n=new RegExp('["'+t+"\n\r]"),e=t.charCodeAt(0);function r(t,n){var r,i=[],o=t.length,a=0,u=0,c=o<=0,f=!1;function s(){if(c)return no;if(f)return f=!1,to;var n,r,i=a;if(34===t.charCodeAt(i)){for(;a++<o&&34!==t.charCodeAt(a)||34===t.charCodeAt(++a););return(n=a)>=o?c=!0:10===(r=t.charCodeAt(a++))?f=!0:13===r&&(f=!0,10===t.charCodeAt(a)&&++a),t.slice(i+1,n-1).replace(/""/g,'"')}for(;a<o;){if(10===(r=t.charCodeAt(n=a++)))f=!0;else if(13===r)f=!0,10===t.charCodeAt(a)&&++a;else if(r!==e)continue;return t.slice(i,n)}return c=!0,t.slice(i,o)}for(10===t.charCodeAt(o-1)&&--o,13===t.charCodeAt(o-1)&&--o;(r=s())!==no;){for(var l=[];r!==to&&r!==no;)l.push(r),r=s();n&&null==(l=n(l,u++))||i.push(l)}return i}function i(n,e){return n.map((function(n){return e.map((function(t){return a(n[t])})).join(t)}))}function o(n){return n.map(a).join(t)}function a(t){return null==t?"":t instanceof Date?function(t){var n=t.getUTCHours(),e=t.getUTCMinutes(),r=t.getUTCSeconds(),i=t.getUTCMilliseconds();return isNaN(t)?"Invalid Date":function(t){return t<0?"-"+io(-t,6):t>9999?"+"+io(t,6):io(t,4)}(t.getUTCFullYear())+"-"+io(t.getUTCMonth()+1,2)+"-"+io(t.getUTCDate(),2)+(i?"T"+io(n,2)+":"+io(e,2)+":"+io(r,2)+"."+io(i,3)+"Z":r?"T"+io(n,2)+":"+io(e,2)+":"+io(r,2)+"Z":e||n?"T"+io(n,2)+":"+io(e,2)+"Z":"")}(t):n.test(t+="")?'"'+t.replace(/"/g,'""')+'"':t}return{parse:function(t,n){var e,i,o=r(t,(function(t,r){if(e)return e(t,r-1);i=t,e=n?function(t,n){var e=eo(t);return function(r,i){return n(e(r),i,t)}}(t,n):eo(t)}));return o.columns=i||[],o},parseRows:r,format:function(n,e){return null==e&&(e=ro(n)),[e.map(a).join(t)].concat(i(n,e)).join("\n")},formatBody:function(t,n){return null==n&&(n=ro(t)),i(t,n).join("\n")},formatRows:function(t){return t.map(o).join("\n")},formatRow:o,formatValue:a}}var ao=oo(","),uo=ao.parse,co=ao.parseRows,fo=ao.format,so=ao.formatBody,lo=ao.formatRows,ho=ao.formatRow,po=ao.formatValue,vo=oo("\t"),go=vo.parse,yo=vo.parseRows,_o=vo.format,bo=vo.formatBody,mo=vo.formatRows,xo=vo.formatRow,wo=vo.formatValue,Mo=new Date("2019-01-01T00:00").getHours()||new Date("2019-07-01T00:00").getHours();function No(t){if(!t.ok)throw new Error(t.status+" "+t.statusText);return t.blob()}function To(t){if(!t.ok)throw new Error(t.status+" "+t.statusText);return t.arrayBuffer()}function Ao(t){if(!t.ok)throw new Error(t.status+" "+t.statusText);return t.text()}function So(t,n){return fetch(t,n).then(Ao)}function ko(t){return function(n,e,r){return 2===arguments.length&&"function"==typeof e&&(r=e,e=void 0),So(n,e).then((function(n){return t(n,r)}))}}var Eo=ko(uo),Co=ko(go);function Po(t){if(!t.ok)throw new Error(t.status+" "+t.statusText);return t.json()}function zo(t){return function(n,e){return So(n,e).then((function(n){return(new DOMParser).parseFromString(n,t)}))}}var Ro=zo("application/xml"),Do=zo("text/html"),qo=zo("image/svg+xml");function Lo(t){return function(){return t}}function Uo(){return 1e-6*(Math.random()-.5)}function Oo(t,n,e,r){if(isNaN(n)||isNaN(e))return t;var i,o,a,u,c,f,s,l,h,d=t._root,p={data:r},v=t._x0,g=t._y0,y=t._x1,_=t._y1;if(!d)return t._root=p,t;for(;d.length;)if((f=n>=(o=(v+y)/2))?v=o:y=o,(s=e>=(a=(g+_)/2))?g=a:_=a,i=d,!(d=d[l=s<<1|f]))return i[l]=p,t;if(u=+t._x.call(null,d.data),c=+t._y.call(null,d.data),n===u&&e===c)return p.next=d,i?i[l]=p:t._root=p,t;do{i=i?i[l]=new Array(4):t._root=new Array(4),(f=n>=(o=(v+y)/2))?v=o:y=o,(s=e>=(a=(g+_)/2))?g=a:_=a}while((l=s<<1|f)==(h=(c>=a)<<1|u>=o));return i[h]=d,i[l]=p,t}function Bo(t,n,e,r,i){this.node=t,this.x0=n,this.y0=e,this.x1=r,this.y1=i}function Fo(t){return t[0]}function Yo(t){return t[1]}function Io(t,n,e){var r=new Ho(null==n?Fo:n,null==e?Yo:e,NaN,NaN,NaN,NaN);return null==t?r:r.addAll(t)}function Ho(t,n,e,r,i,o){this._x=t,this._y=n,this._x0=e,this._y0=r,this._x1=i,this._y1=o,this._root=void 0}function jo(t){for(var n={data:t.data},e=n;t=t.next;)e=e.next={data:t.data};return n}var Xo=Io.prototype=Ho.prototype;function Vo(t){return t.x+t.vx}function Go(t){return t.y+t.vy}function $o(t){return t.index}function Wo(t,n){var e=t.get(n);if(!e)throw new Error("missing: "+n);return e}function Zo(t){return t.x}function Qo(t){return t.y}Xo.copy=function(){var t,n,e=new Ho(this._x,this._y,this._x0,this._y0,this._x1,this._y1),r=this._root;if(!r)return e;if(!r.length)return e._root=jo(r),e;for(t=[{source:r,target:e._root=new Array(4)}];r=t.pop();)for(var i=0;i<4;++i)(n=r.source[i])&&(n.length?t.push({source:n,target:r.target[i]=new Array(4)}):r.target[i]=jo(n));return e},Xo.add=function(t){var n=+this._x.call(null,t),e=+this._y.call(null,t);return Oo(this.cover(n,e),n,e,t)},Xo.addAll=function(t){var n,e,r,i,o=t.length,a=new Array(o),u=new Array(o),c=1/0,f=1/0,s=-1/0,l=-1/0;for(e=0;e<o;++e)isNaN(r=+this._x.call(null,n=t[e]))||isNaN(i=+this._y.call(null,n))||(a[e]=r,u[e]=i,r<c&&(c=r),r>s&&(s=r),i<f&&(f=i),i>l&&(l=i));if(c>s||f>l)return this;for(this.cover(c,f).cover(s,l),e=0;e<o;++e)Oo(this,a[e],u[e],t[e]);return this},Xo.cover=function(t,n){if(isNaN(t=+t)||isNaN(n=+n))return this;var e=this._x0,r=this._y0,i=this._x1,o=this._y1;if(isNaN(e))i=(e=Math.floor(t))+1,o=(r=Math.floor(n))+1;else{for(var a,u,c=i-e,f=this._root;e>t||t>=i||r>n||n>=o;)switch(u=(n<r)<<1|t<e,(a=new Array(4))[u]=f,f=a,c*=2,u){case 0:i=e+c,o=r+c;break;case 1:e=i-c,o=r+c;break;case 2:i=e+c,r=o-c;break;case 3:e=i-c,r=o-c}this._root&&this._root.length&&(this._root=f)}return this._x0=e,this._y0=r,this._x1=i,this._y1=o,this},Xo.data=function(){var t=[];return this.visit((function(n){if(!n.length)do{t.push(n.data)}while(n=n.next)})),t},Xo.extent=function(t){return arguments.length?this.cover(+t[0][0],+t[0][1]).cover(+t[1][0],+t[1][1]):isNaN(this._x0)?void 0:[[this._x0,this._y0],[this._x1,this._y1]]},Xo.find=function(t,n,e){var r,i,o,a,u,c,f,s=this._x0,l=this._y0,h=this._x1,d=this._y1,p=[],v=this._root;for(v&&p.push(new Bo(v,s,l,h,d)),null==e?e=1/0:(s=t-e,l=n-e,h=t+e,d=n+e,e*=e);c=p.pop();)if(!(!(v=c.node)||(i=c.x0)>h||(o=c.y0)>d||(a=c.x1)<s||(u=c.y1)<l))if(v.length){var g=(i+a)/2,y=(o+u)/2;p.push(new Bo(v[3],g,y,a,u),new Bo(v[2],i,y,g,u),new Bo(v[1],g,o,a,y),new Bo(v[0],i,o,g,y)),(f=(n>=y)<<1|t>=g)&&(c=p[p.length-1],p[p.length-1]=p[p.length-1-f],p[p.length-1-f]=c)}else{var _=t-+this._x.call(null,v.data),b=n-+this._y.call(null,v.data),m=_*_+b*b;if(m<e){var x=Math.sqrt(e=m);s=t-x,l=n-x,h=t+x,d=n+x,r=v.data}}return r},Xo.remove=function(t){if(isNaN(o=+this._x.call(null,t))||isNaN(a=+this._y.call(null,t)))return this;var n,e,r,i,o,a,u,c,f,s,l,h,d=this._root,p=this._x0,v=this._y0,g=this._x1,y=this._y1;if(!d)return this;if(d.length)for(;;){if((f=o>=(u=(p+g)/2))?p=u:g=u,(s=a>=(c=(v+y)/2))?v=c:y=c,n=d,!(d=d[l=s<<1|f]))return this;if(!d.length)break;(n[l+1&3]||n[l+2&3]||n[l+3&3])&&(e=n,h=l)}for(;d.data!==t;)if(r=d,!(d=d.next))return this;return(i=d.next)&&delete d.next,r?(i?r.next=i:delete r.next,this):n?(i?n[l]=i:delete n[l],(d=n[0]||n[1]||n[2]||n[3])&&d===(n[3]||n[2]||n[1]||n[0])&&!d.length&&(e?e[h]=d:this._root=d),this):(this._root=i,this)},Xo.removeAll=function(t){for(var n=0,e=t.length;n<e;++n)this.remove(t[n]);return this},Xo.root=function(){return this._root},Xo.size=function(){var t=0;return this.visit((function(n){if(!n.length)do{++t}while(n=n.next)})),t},Xo.visit=function(t){var n,e,r,i,o,a,u=[],c=this._root;for(c&&u.push(new Bo(c,this._x0,this._y0,this._x1,this._y1));n=u.pop();)if(!t(c=n.node,r=n.x0,i=n.y0,o=n.x1,a=n.y1)&&c.length){var f=(r+o)/2,s=(i+a)/2;(e=c[3])&&u.push(new Bo(e,f,s,o,a)),(e=c[2])&&u.push(new Bo(e,r,s,f,a)),(e=c[1])&&u.push(new Bo(e,f,i,o,s)),(e=c[0])&&u.push(new Bo(e,r,i,f,s))}return this},Xo.visitAfter=function(t){var n,e=[],r=[];for(this._root&&e.push(new Bo(this._root,this._x0,this._y0,this._x1,this._y1));n=e.pop();){var i=n.node;if(i.length){var o,a=n.x0,u=n.y0,c=n.x1,f=n.y1,s=(a+c)/2,l=(u+f)/2;(o=i[0])&&e.push(new Bo(o,a,u,s,l)),(o=i[1])&&e.push(new Bo(o,s,u,c,l)),(o=i[2])&&e.push(new Bo(o,a,l,s,f)),(o=i[3])&&e.push(new Bo(o,s,l,c,f))}r.push(n)}for(;n=r.pop();)t(n.node,n.x0,n.y0,n.x1,n.y1);return this},Xo.x=function(t){return arguments.length?(this._x=t,this):this._x},Xo.y=function(t){return arguments.length?(this._y=t,this):this._y};var Ko=Math.PI*(3-Math.sqrt(5));function Jo(t,n){if((e=(t=n?t.toExponential(n-1):t.toExponential()).indexOf("e"))<0)return null;var e,r=t.slice(0,e);return[r.length>1?r[0]+r.slice(2):r,+t.slice(e+1)]}function ta(t){return(t=Jo(Math.abs(t)))?t[1]:NaN}var na,ea=/^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;function ra(t){if(!(n=ea.exec(t)))throw new Error("invalid format: "+t);var n;return new ia({fill:n[1],align:n[2],sign:n[3],symbol:n[4],zero:n[5],width:n[6],comma:n[7],precision:n[8]&&n[8].slice(1),trim:n[9],type:n[10]})}function ia(t){this.fill=void 0===t.fill?" ":t.fill+"",this.align=void 0===t.align?">":t.align+"",this.sign=void 0===t.sign?"-":t.sign+"",this.symbol=void 0===t.symbol?"":t.symbol+"",this.zero=!!t.zero,this.width=void 0===t.width?void 0:+t.width,this.comma=!!t.comma,this.precision=void 0===t.precision?void 0:+t.precision,this.trim=!!t.trim,this.type=void 0===t.type?"":t.type+""}function oa(t,n){var e=Jo(t,n);if(!e)return t+"";var r=e[0],i=e[1];return i<0?"0."+new Array(-i).join("0")+r:r.length>i+1?r.slice(0,i+1)+"."+r.slice(i+1):r+new Array(i-r.length+2).join("0")}ra.prototype=ia.prototype,ia.prototype.toString=function(){return this.fill+this.align+this.sign+this.symbol+(this.zero?"0":"")+(void 0===this.width?"":Math.max(1,0|this.width))+(this.comma?",":"")+(void 0===this.precision?"":"."+Math.max(0,0|this.precision))+(this.trim?"~":"")+this.type};var aa={"%":function(t,n){return(100*t).toFixed(n)},b:function(t){return Math.round(t).toString(2)},c:function(t){return t+""},d:function(t){return Math.round(t).toString(10)},e:function(t,n){return t.toExponential(n)},f:function(t,n){return t.toFixed(n)},g:function(t,n){return t.toPrecision(n)},o:function(t){return Math.round(t).toString(8)},p:function(t,n){return oa(100*t,n)},r:oa,s:function(t,n){var e=Jo(t,n);if(!e)return t+"";var r=e[0],i=e[1],o=i-(na=3*Math.max(-8,Math.min(8,Math.floor(i/3))))+1,a=r.length;return o===a?r:o>a?r+new Array(o-a+1).join("0"):o>0?r.slice(0,o)+"."+r.slice(o):"0."+new Array(1-o).join("0")+Jo(t,Math.max(0,n+o-1))[0]},X:function(t){return Math.round(t).toString(16).toUpperCase()},x:function(t){return Math.round(t).toString(16)}};function ua(t){return t}var ca,fa=Array.prototype.map,sa=["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"];function la(t){var n,e,r=void 0===t.grouping||void 0===t.thousands?ua:(n=fa.call(t.grouping,Number),e=t.thousands+"",function(t,r){for(var i=t.length,o=[],a=0,u=n[0],c=0;i>0&&u>0&&(c+u+1>r&&(u=Math.max(1,r-c)),o.push(t.substring(i-=u,i+u)),!((c+=u+1)>r));)u=n[a=(a+1)%n.length];return o.reverse().join(e)}),i=void 0===t.currency?"":t.currency[0]+"",o=void 0===t.currency?"":t.currency[1]+"",a=void 0===t.decimal?".":t.decimal+"",u=void 0===t.numerals?ua:function(t){return function(n){return n.replace(/[0-9]/g,(function(n){return t[+n]}))}}(fa.call(t.numerals,String)),c=void 0===t.percent?"%":t.percent+"",f=void 0===t.minus?"-":t.minus+"",s=void 0===t.nan?"NaN":t.nan+"";function l(t){var n=(t=ra(t)).fill,e=t.align,l=t.sign,h=t.symbol,d=t.zero,p=t.width,v=t.comma,g=t.precision,y=t.trim,_=t.type;"n"===_?(v=!0,_="g"):aa[_]||(void 0===g&&(g=12),y=!0,_="g"),(d||"0"===n&&"="===e)&&(d=!0,n="0",e="=");var b="$"===h?i:"#"===h&&/[boxX]/.test(_)?"0"+_.toLowerCase():"",m="$"===h?o:/[%p]/.test(_)?c:"",x=aa[_],w=/[defgprs%]/.test(_);function M(t){var i,o,c,h=b,M=m;if("c"===_)M=x(t)+M,t="";else{var N=(t=+t)<0||1/t<0;if(t=isNaN(t)?s:x(Math.abs(t),g),y&&(t=function(t){t:for(var n,e=t.length,r=1,i=-1;r<e;++r)switch(t[r]){case".":i=n=r;break;case"0":0===i&&(i=r),n=r;break;default:if(!+t[r])break t;i>0&&(i=0)}return i>0?t.slice(0,i)+t.slice(n+1):t}(t)),N&&0==+t&&"+"!==l&&(N=!1),h=(N?"("===l?l:f:"-"===l||"("===l?"":l)+h,M=("s"===_?sa[8+na/3]:"")+M+(N&&"("===l?")":""),w)for(i=-1,o=t.length;++i<o;)if(48>(c=t.charCodeAt(i))||c>57){M=(46===c?a+t.slice(i+1):t.slice(i))+M,t=t.slice(0,i);break}}v&&!d&&(t=r(t,1/0));var T=h.length+t.length+M.length,A=T<p?new Array(p-T+1).join(n):"";switch(v&&d&&(t=r(A+t,A.length?p-M.length:1/0),A=""),e){case"<":t=h+t+M+A;break;case"=":t=h+A+t+M;break;case"^":t=A.slice(0,T=A.length>>1)+h+t+M+A.slice(T);break;default:t=A+h+t+M}return u(t)}return g=void 0===g?6:/[gprs]/.test(_)?Math.max(1,Math.min(21,g)):Math.max(0,Math.min(20,g)),M.toString=function(){return t+""},M}return{format:l,formatPrefix:function(t,n){var e=l(((t=ra(t)).type="f",t)),r=3*Math.max(-8,Math.min(8,Math.floor(ta(n)/3))),i=Math.pow(10,-r),o=sa[8+r/3];return function(t){return e(i*t)+o}}}}function ha(n){return ca=la(n),t.format=ca.format,t.formatPrefix=ca.formatPrefix,ca}function da(t){return Math.max(0,-ta(Math.abs(t)))}function pa(t,n){return Math.max(0,3*Math.max(-8,Math.min(8,Math.floor(ta(n)/3)))-ta(Math.abs(t)))}function va(t,n){return t=Math.abs(t),n=Math.abs(n)-t,Math.max(0,ta(n)-ta(t))+1}function ga(){return new ya}function ya(){this.reset()}ha({decimal:".",thousands:",",grouping:[3],currency:["$",""],minus:"-"}),ya.prototype={constructor:ya,reset:function(){this.s=this.t=0},add:function(t){ba(_a,t,this.t),ba(this,_a.s,this.s),this.s?this.t+=_a.t:this.s=_a.t},valueOf:function(){return this.s}};var _a=new ya;function ba(t,n,e){var r=t.s=n+e,i=r-n,o=r-i;t.t=n-o+(e-i)}var ma=1e-6,xa=1e-12,wa=Math.PI,Ma=wa/2,Na=wa/4,Ta=2*wa,Aa=180/wa,Sa=wa/180,ka=Math.abs,Ea=Math.atan,Ca=Math.atan2,Pa=Math.cos,za=Math.ceil,Ra=Math.exp,Da=Math.log,qa=Math.pow,La=Math.sin,Ua=Math.sign||function(t){return t>0?1:t<0?-1:0},Oa=Math.sqrt,Ba=Math.tan;function Fa(t){return t>1?0:t<-1?wa:Math.acos(t)}function Ya(t){return t>1?Ma:t<-1?-Ma:Math.asin(t)}function Ia(t){return(t=La(t/2))*t}function Ha(){}function ja(t,n){t&&Va.hasOwnProperty(t.type)&&Va[t.type](t,n)}var Xa={Feature:function(t,n){ja(t.geometry,n)},FeatureCollection:function(t,n){for(var e=t.features,r=-1,i=e.length;++r<i;)ja(e[r].geometry,n)}},Va={Sphere:function(t,n){n.sphere()},Point:function(t,n){t=t.coordinates,n.point(t[0],t[1],t[2])},MultiPoint:function(t,n){for(var e=t.coordinates,r=-1,i=e.length;++r<i;)t=e[r],n.point(t[0],t[1],t[2])},LineString:function(t,n){Ga(t.coordinates,n,0)},MultiLineString:function(t,n){for(var e=t.coordinates,r=-1,i=e.length;++r<i;)Ga(e[r],n,0)},Polygon:function(t,n){$a(t.coordinates,n)},MultiPolygon:function(t,n){for(var e=t.coordinates,r=-1,i=e.length;++r<i;)$a(e[r],n)},GeometryCollection:function(t,n){for(var e=t.geometries,r=-1,i=e.length;++r<i;)ja(e[r],n)}};function Ga(t,n,e){var r,i=-1,o=t.length-e;for(n.lineStart();++i<o;)r=t[i],n.point(r[0],r[1],r[2]);n.lineEnd()}function $a(t,n){var e=-1,r=t.length;for(n.polygonStart();++e<r;)Ga(t[e],n,1);n.polygonEnd()}function Wa(t,n){t&&Xa.hasOwnProperty(t.type)?Xa[t.type](t,n):ja(t,n)}var Za,Qa,Ka,Ja,tu,nu=ga(),eu=ga(),ru={point:Ha,lineStart:Ha,lineEnd:Ha,polygonStart:function(){nu.reset(),ru.lineStart=iu,ru.lineEnd=ou},polygonEnd:function(){var t=+nu;eu.add(t<0?Ta+t:t),this.lineStart=this.lineEnd=this.point=Ha},sphere:function(){eu.add(Ta)}};function iu(){ru.point=au}function ou(){uu(Za,Qa)}function au(t,n){ru.point=uu,Za=t,Qa=n,Ka=t*=Sa,Ja=Pa(n=(n*=Sa)/2+Na),tu=La(n)}function uu(t,n){var e=(t*=Sa)-Ka,r=e>=0?1:-1,i=r*e,o=Pa(n=(n*=Sa)/2+Na),a=La(n),u=tu*a,c=Ja*o+u*Pa(i),f=u*r*La(i);nu.add(Ca(f,c)),Ka=t,Ja=o,tu=a}function cu(t){return[Ca(t[1],t[0]),Ya(t[2])]}function fu(t){var n=t[0],e=t[1],r=Pa(e);return[r*Pa(n),r*La(n),La(e)]}function su(t,n){return t[0]*n[0]+t[1]*n[1]+t[2]*n[2]}function lu(t,n){return[t[1]*n[2]-t[2]*n[1],t[2]*n[0]-t[0]*n[2],t[0]*n[1]-t[1]*n[0]]}function hu(t,n){t[0]+=n[0],t[1]+=n[1],t[2]+=n[2]}function du(t,n){return[t[0]*n,t[1]*n,t[2]*n]}function pu(t){var n=Oa(t[0]*t[0]+t[1]*t[1]+t[2]*t[2]);t[0]/=n,t[1]/=n,t[2]/=n}var vu,gu,yu,_u,bu,mu,xu,wu,Mu,Nu,Tu,Au,Su,ku,Eu,Cu,Pu,zu,Ru,Du,qu,Lu,Uu,Ou,Bu,Fu,Yu=ga(),Iu={point:Hu,lineStart:Xu,lineEnd:Vu,polygonStart:function(){Iu.point=Gu,Iu.lineStart=$u,Iu.lineEnd=Wu,Yu.reset(),ru.polygonStart()},polygonEnd:function(){ru.polygonEnd(),Iu.point=Hu,Iu.lineStart=Xu,Iu.lineEnd=Vu,nu<0?(vu=-(yu=180),gu=-(_u=90)):Yu>ma?_u=90:Yu<-ma&&(gu=-90),Nu[0]=vu,Nu[1]=yu},sphere:function(){vu=-(yu=180),gu=-(_u=90)}};function Hu(t,n){Mu.push(Nu=[vu=t,yu=t]),n<gu&&(gu=n),n>_u&&(_u=n)}function ju(t,n){var e=fu([t*Sa,n*Sa]);if(wu){var r=lu(wu,e),i=lu([r[1],-r[0],0],r);pu(i),i=cu(i);var o,a=t-bu,u=a>0?1:-1,c=i[0]*Aa*u,f=ka(a)>180;f^(u*bu<c&&c<u*t)?(o=i[1]*Aa)>_u&&(_u=o):f^(u*bu<(c=(c+360)%360-180)&&c<u*t)?(o=-i[1]*Aa)<gu&&(gu=o):(n<gu&&(gu=n),n>_u&&(_u=n)),f?t<bu?Zu(vu,t)>Zu(vu,yu)&&(yu=t):Zu(t,yu)>Zu(vu,yu)&&(vu=t):yu>=vu?(t<vu&&(vu=t),t>yu&&(yu=t)):t>bu?Zu(vu,t)>Zu(vu,yu)&&(yu=t):Zu(t,yu)>Zu(vu,yu)&&(vu=t)}else Mu.push(Nu=[vu=t,yu=t]);n<gu&&(gu=n),n>_u&&(_u=n),wu=e,bu=t}function Xu(){Iu.point=ju}function Vu(){Nu[0]=vu,Nu[1]=yu,Iu.point=Hu,wu=null}function Gu(t,n){if(wu){var e=t-bu;Yu.add(ka(e)>180?e+(e>0?360:-360):e)}else mu=t,xu=n;ru.point(t,n),ju(t,n)}function $u(){ru.lineStart()}function Wu(){Gu(mu,xu),ru.lineEnd(),ka(Yu)>ma&&(vu=-(yu=180)),Nu[0]=vu,Nu[1]=yu,wu=null}function Zu(t,n){return(n-=t)<0?n+360:n}function Qu(t,n){return t[0]-n[0]}function Ku(t,n){return t[0]<=t[1]?t[0]<=n&&n<=t[1]:n<t[0]||t[1]<n}var Ju={sphere:Ha,point:tc,lineStart:ec,lineEnd:oc,polygonStart:function(){Ju.lineStart=ac,Ju.lineEnd=uc},polygonEnd:function(){Ju.lineStart=ec,Ju.lineEnd=oc}};function tc(t,n){t*=Sa;var e=Pa(n*=Sa);nc(e*Pa(t),e*La(t),La(n))}function nc(t,n,e){Su+=(t-Su)/++Tu,ku+=(n-ku)/Tu,Eu+=(e-Eu)/Tu}function ec(){Ju.point=rc}function rc(t,n){t*=Sa;var e=Pa(n*=Sa);Ou=e*Pa(t),Bu=e*La(t),Fu=La(n),Ju.point=ic,nc(Ou,Bu,Fu)}function ic(t,n){t*=Sa;var e=Pa(n*=Sa),r=e*Pa(t),i=e*La(t),o=La(n),a=Ca(Oa((a=Bu*o-Fu*i)*a+(a=Fu*r-Ou*o)*a+(a=Ou*i-Bu*r)*a),Ou*r+Bu*i+Fu*o);Au+=a,Cu+=a*(Ou+(Ou=r)),Pu+=a*(Bu+(Bu=i)),zu+=a*(Fu+(Fu=o)),nc(Ou,Bu,Fu)}function oc(){Ju.point=tc}function ac(){Ju.point=cc}function uc(){fc(Lu,Uu),Ju.point=tc}function cc(t,n){Lu=t,Uu=n,t*=Sa,n*=Sa,Ju.point=fc;var e=Pa(n);Ou=e*Pa(t),Bu=e*La(t),Fu=La(n),nc(Ou,Bu,Fu)}function fc(t,n){t*=Sa;var e=Pa(n*=Sa),r=e*Pa(t),i=e*La(t),o=La(n),a=Bu*o-Fu*i,u=Fu*r-Ou*o,c=Ou*i-Bu*r,f=Oa(a*a+u*u+c*c),s=Ya(f),l=f&&-s/f;Ru+=l*a,Du+=l*u,qu+=l*c,Au+=s,Cu+=s*(Ou+(Ou=r)),Pu+=s*(Bu+(Bu=i)),zu+=s*(Fu+(Fu=o)),nc(Ou,Bu,Fu)}function sc(t){return function(){return t}}function lc(t,n){function e(e,r){return e=t(e,r),n(e[0],e[1])}return t.invert&&n.invert&&(e.invert=function(e,r){return(e=n.invert(e,r))&&t.invert(e[0],e[1])}),e}function hc(t,n){return[ka(t)>wa?t+Math.round(-t/Ta)*Ta:t,n]}function dc(t,n,e){return(t%=Ta)?n||e?lc(vc(t),gc(n,e)):vc(t):n||e?gc(n,e):hc}function pc(t){return function(n,e){return[(n+=t)>wa?n-Ta:n<-wa?n+Ta:n,e]}}function vc(t){var n=pc(t);return n.invert=pc(-t),n}function gc(t,n){var e=Pa(t),r=La(t),i=Pa(n),o=La(n);function a(t,n){var a=Pa(n),u=Pa(t)*a,c=La(t)*a,f=La(n),s=f*e+u*r;return[Ca(c*i-s*o,u*e-f*r),Ya(s*i+c*o)]}return a.invert=function(t,n){var a=Pa(n),u=Pa(t)*a,c=La(t)*a,f=La(n),s=f*i-c*o;return[Ca(c*i+f*o,u*e+s*r),Ya(s*e-u*r)]},a}function yc(t){function n(n){return(n=t(n[0]*Sa,n[1]*Sa))[0]*=Aa,n[1]*=Aa,n}return t=dc(t[0]*Sa,t[1]*Sa,t.length>2?t[2]*Sa:0),n.invert=function(n){return(n=t.invert(n[0]*Sa,n[1]*Sa))[0]*=Aa,n[1]*=Aa,n},n}function _c(t,n,e,r,i,o){if(e){var a=Pa(n),u=La(n),c=r*e;null==i?(i=n+r*Ta,o=n-c/2):(i=bc(a,i),o=bc(a,o),(r>0?i<o:i>o)&&(i+=r*Ta));for(var f,s=i;r>0?s>o:s<o;s-=c)f=cu([a,-u*Pa(s),-u*La(s)]),t.point(f[0],f[1])}}function bc(t,n){(n=fu(n))[0]-=t,pu(n);var e=Fa(-n[1]);return((-n[2]<0?-e:e)+Ta-ma)%Ta}function mc(){var t,n=[];return{point:function(n,e){t.push([n,e])},lineStart:function(){n.push(t=[])},lineEnd:Ha,rejoin:function(){n.length>1&&n.push(n.pop().concat(n.shift()))},result:function(){var e=n;return n=[],t=null,e}}}function xc(t,n){return ka(t[0]-n[0])<ma&&ka(t[1]-n[1])<ma}function wc(t,n,e,r){this.x=t,this.z=n,this.o=e,this.e=r,this.v=!1,this.n=this.p=null}function Mc(t,n,e,r,i){var o,a,u=[],c=[];if(t.forEach((function(t){if(!((n=t.length-1)<=0)){var n,e,r=t[0],a=t[n];if(xc(r,a)){for(i.lineStart(),o=0;o<n;++o)i.point((r=t[o])[0],r[1]);i.lineEnd()}else u.push(e=new wc(r,t,null,!0)),c.push(e.o=new wc(r,null,e,!1)),u.push(e=new wc(a,t,null,!1)),c.push(e.o=new wc(a,null,e,!0))}})),u.length){for(c.sort(n),Nc(u),Nc(c),o=0,a=c.length;o<a;++o)c[o].e=e=!e;for(var f,s,l=u[0];;){for(var h=l,d=!0;h.v;)if((h=h.n)===l)return;f=h.z,i.lineStart();do{if(h.v=h.o.v=!0,h.e){if(d)for(o=0,a=f.length;o<a;++o)i.point((s=f[o])[0],s[1]);else r(h.x,h.n.x,1,i);h=h.n}else{if(d)for(f=h.p.z,o=f.length-1;o>=0;--o)i.point((s=f[o])[0],s[1]);else r(h.x,h.p.x,-1,i);h=h.p}f=(h=h.o).z,d=!d}while(!h.v);i.lineEnd()}}}function Nc(t){if(n=t.length){for(var n,e,r=0,i=t[0];++r<n;)i.n=e=t[r],e.p=i,i=e;i.n=e=t[0],e.p=i}}hc.invert=hc;var Tc=ga();function Ac(t){return ka(t[0])<=wa?t[0]:Ua(t[0])*((ka(t[0])+wa)%Ta-wa)}function Sc(t,n){var e=Ac(n),r=n[1],i=La(r),o=[La(e),-Pa(e),0],a=0,u=0;Tc.reset(),1===i?r=Ma+ma:-1===i&&(r=-Ma-ma);for(var c=0,f=t.length;c<f;++c)if(l=(s=t[c]).length)for(var s,l,h=s[l-1],d=Ac(h),p=h[1]/2+Na,v=La(p),g=Pa(p),y=0;y<l;++y,d=b,v=x,g=w,h=_){var _=s[y],b=Ac(_),m=_[1]/2+Na,x=La(m),w=Pa(m),M=b-d,N=M>=0?1:-1,T=N*M,A=T>wa,S=v*x;if(Tc.add(Ca(S*N*La(T),g*w+S*Pa(T))),a+=A?M+N*Ta:M,A^d>=e^b>=e){var k=lu(fu(h),fu(_));pu(k);var E=lu(o,k);pu(E);var C=(A^M>=0?-1:1)*Ya(E[2]);(r>C||r===C&&(k[0]||k[1]))&&(u+=A^M>=0?1:-1)}}return(a<-ma||a<ma&&Tc<-ma)^1&u}function kc(t,n,e,r){return function(i){var o,a,u,c=n(i),f=mc(),s=n(f),l=!1,h={point:d,lineStart:v,lineEnd:g,polygonStart:function(){h.point=y,h.lineStart=_,h.lineEnd=b,a=[],o=[]},polygonEnd:function(){h.point=d,h.lineStart=v,h.lineEnd=g,a=A(a);var t=Sc(o,r);a.length?(l||(i.polygonStart(),l=!0),Mc(a,Cc,t,e,i)):t&&(l||(i.polygonStart(),l=!0),i.lineStart(),e(null,null,1,i),i.lineEnd()),l&&(i.polygonEnd(),l=!1),a=o=null},sphere:function(){i.polygonStart(),i.lineStart(),e(null,null,1,i),i.lineEnd(),i.polygonEnd()}};function d(n,e){t(n,e)&&i.point(n,e)}function p(t,n){c.point(t,n)}function v(){h.point=p,c.lineStart()}function g(){h.point=d,c.lineEnd()}function y(t,n){u.push([t,n]),s.point(t,n)}function _(){s.lineStart(),u=[]}function b(){y(u[0][0],u[0][1]),s.lineEnd();var t,n,e,r,c=s.clean(),h=f.result(),d=h.length;if(u.pop(),o.push(u),u=null,d)if(1&c){if((n=(e=h[0]).length-1)>0){for(l||(i.polygonStart(),l=!0),i.lineStart(),t=0;t<n;++t)i.point((r=e[t])[0],r[1]);i.lineEnd()}}else d>1&&2&c&&h.push(h.pop().concat(h.shift())),a.push(h.filter(Ec))}return h}}function Ec(t){return t.length>1}function Cc(t,n){return((t=t.x)[0]<0?t[1]-Ma-ma:Ma-t[1])-((n=n.x)[0]<0?n[1]-Ma-ma:Ma-n[1])}var Pc=kc((function(){return!0}),(function(t){var n,e=NaN,r=NaN,i=NaN;return{lineStart:function(){t.lineStart(),n=1},point:function(o,a){var u=o>0?wa:-wa,c=ka(o-e);ka(c-wa)<ma?(t.point(e,r=(r+a)/2>0?Ma:-Ma),t.point(i,r),t.lineEnd(),t.lineStart(),t.point(u,r),t.point(o,r),n=0):i!==u&&c>=wa&&(ka(e-i)<ma&&(e-=i*ma),ka(o-u)<ma&&(o-=u*ma),r=function(t,n,e,r){var i,o,a=La(t-e);return ka(a)>ma?Ea((La(n)*(o=Pa(r))*La(e)-La(r)*(i=Pa(n))*La(t))/(i*o*a)):(n+r)/2}(e,r,o,a),t.point(i,r),t.lineEnd(),t.lineStart(),t.point(u,r),n=0),t.point(e=o,r=a),i=u},lineEnd:function(){t.lineEnd(),e=r=NaN},clean:function(){return 2-n}}}),(function(t,n,e,r){var i;if(null==t)i=e*Ma,r.point(-wa,i),r.point(0,i),r.point(wa,i),r.point(wa,0),r.point(wa,-i),r.point(0,-i),r.point(-wa,-i),r.point(-wa,0),r.point(-wa,i);else if(ka(t[0]-n[0])>ma){var o=t[0]<n[0]?wa:-wa;i=e*o/2,r.point(-o,i),r.point(0,i),r.point(o,i)}else r.point(n[0],n[1])}),[-wa,-Ma]);function zc(t){var n=Pa(t),e=6*Sa,r=n>0,i=ka(n)>ma;function o(t,e){return Pa(t)*Pa(e)>n}function a(t,e,r){var i=[1,0,0],o=lu(fu(t),fu(e)),a=su(o,o),u=o[0],c=a-u*u;if(!c)return!r&&t;var f=n*a/c,s=-n*u/c,l=lu(i,o),h=du(i,f);hu(h,du(o,s));var d=l,p=su(h,d),v=su(d,d),g=p*p-v*(su(h,h)-1);if(!(g<0)){var y=Oa(g),_=du(d,(-p-y)/v);if(hu(_,h),_=cu(_),!r)return _;var b,m=t[0],x=e[0],w=t[1],M=e[1];x<m&&(b=m,m=x,x=b);var N=x-m,T=ka(N-wa)<ma;if(!T&&M<w&&(b=w,w=M,M=b),T||N<ma?T?w+M>0^_[1]<(ka(_[0]-m)<ma?w:M):w<=_[1]&&_[1]<=M:N>wa^(m<=_[0]&&_[0]<=x)){var A=du(d,(-p+y)/v);return hu(A,h),[_,cu(A)]}}}function u(n,e){var i=r?t:wa-t,o=0;return n<-i?o|=1:n>i&&(o|=2),e<-i?o|=4:e>i&&(o|=8),o}return kc(o,(function(t){var n,e,c,f,s;return{lineStart:function(){f=c=!1,s=1},point:function(l,h){var d,p=[l,h],v=o(l,h),g=r?v?0:u(l,h):v?u(l+(l<0?wa:-wa),h):0;if(!n&&(f=c=v)&&t.lineStart(),v!==c&&(!(d=a(n,p))||xc(n,d)||xc(p,d))&&(p[0]+=ma,p[1]+=ma,v=o(p[0],p[1])),v!==c)s=0,v?(t.lineStart(),d=a(p,n),t.point(d[0],d[1])):(d=a(n,p),t.point(d[0],d[1]),t.lineEnd()),n=d;else if(i&&n&&r^v){var y;g&e||!(y=a(p,n,!0))||(s=0,r?(t.lineStart(),t.point(y[0][0],y[0][1]),t.point(y[1][0],y[1][1]),t.lineEnd()):(t.point(y[1][0],y[1][1]),t.lineEnd(),t.lineStart(),t.point(y[0][0],y[0][1])))}!v||n&&xc(n,p)||t.point(p[0],p[1]),n=p,c=v,e=g},lineEnd:function(){c&&t.lineEnd(),n=null},clean:function(){return s|(f&&c)<<1}}}),(function(n,r,i,o){_c(o,t,e,i,n,r)}),r?[0,-t]:[-wa,t-wa])}var Rc=1e9,Dc=-Rc;function qc(t,n,e,r){function i(i,o){return t<=i&&i<=e&&n<=o&&o<=r}function o(i,o,u,f){var s=0,l=0;if(null==i||(s=a(i,u))!==(l=a(o,u))||c(i,o)<0^u>0)do{f.point(0===s||3===s?t:e,s>1?r:n)}while((s=(s+u+4)%4)!==l);else f.point(o[0],o[1])}function a(r,i){return ka(r[0]-t)<ma?i>0?0:3:ka(r[0]-e)<ma?i>0?2:1:ka(r[1]-n)<ma?i>0?1:0:i>0?3:2}function u(t,n){return c(t.x,n.x)}function c(t,n){var e=a(t,1),r=a(n,1);return e!==r?e-r:0===e?n[1]-t[1]:1===e?t[0]-n[0]:2===e?t[1]-n[1]:n[0]-t[0]}return function(a){var c,f,s,l,h,d,p,v,g,y,_,b=a,m=mc(),x={point:w,lineStart:function(){x.point=M,f&&f.push(s=[]),y=!0,g=!1,p=v=NaN},lineEnd:function(){c&&(M(l,h),d&&g&&m.rejoin(),c.push(m.result())),x.point=w,g&&b.lineEnd()},polygonStart:function(){b=m,c=[],f=[],_=!0},polygonEnd:function(){var n=function(){for(var n=0,e=0,i=f.length;e<i;++e)for(var o,a,u=f[e],c=1,s=u.length,l=u[0],h=l[0],d=l[1];c<s;++c)o=h,a=d,h=(l=u[c])[0],d=l[1],a<=r?d>r&&(h-o)*(r-a)>(d-a)*(t-o)&&++n:d<=r&&(h-o)*(r-a)<(d-a)*(t-o)&&--n;return n}(),e=_&&n,i=(c=A(c)).length;(e||i)&&(a.polygonStart(),e&&(a.lineStart(),o(null,null,1,a),a.lineEnd()),i&&Mc(c,u,n,o,a),a.polygonEnd()),b=a,c=f=s=null}};function w(t,n){i(t,n)&&b.point(t,n)}function M(o,a){var u=i(o,a);if(f&&s.push([o,a]),y)l=o,h=a,d=u,y=!1,u&&(b.lineStart(),b.point(o,a));else if(u&&g)b.point(o,a);else{var c=[p=Math.max(Dc,Math.min(Rc,p)),v=Math.max(Dc,Math.min(Rc,v))],m=[o=Math.max(Dc,Math.min(Rc,o)),a=Math.max(Dc,Math.min(Rc,a))];!function(t,n,e,r,i,o){var a,u=t[0],c=t[1],f=0,s=1,l=n[0]-u,h=n[1]-c;if(a=e-u,l||!(a>0)){if(a/=l,l<0){if(a<f)return;a<s&&(s=a)}else if(l>0){if(a>s)return;a>f&&(f=a)}if(a=i-u,l||!(a<0)){if(a/=l,l<0){if(a>s)return;a>f&&(f=a)}else if(l>0){if(a<f)return;a<s&&(s=a)}if(a=r-c,h||!(a>0)){if(a/=h,h<0){if(a<f)return;a<s&&(s=a)}else if(h>0){if(a>s)return;a>f&&(f=a)}if(a=o-c,h||!(a<0)){if(a/=h,h<0){if(a>s)return;a>f&&(f=a)}else if(h>0){if(a<f)return;a<s&&(s=a)}return f>0&&(t[0]=u+f*l,t[1]=c+f*h),s<1&&(n[0]=u+s*l,n[1]=c+s*h),!0}}}}}(c,m,t,n,e,r)?u&&(b.lineStart(),b.point(o,a),_=!1):(g||(b.lineStart(),b.point(c[0],c[1])),b.point(m[0],m[1]),u||b.lineEnd(),_=!1)}p=o,v=a,g=u}return x}}var Lc,Uc,Oc,Bc=ga(),Fc={sphere:Ha,point:Ha,lineStart:function(){Fc.point=Ic,Fc.lineEnd=Yc},lineEnd:Ha,polygonStart:Ha,polygonEnd:Ha};function Yc(){Fc.point=Fc.lineEnd=Ha}function Ic(t,n){Lc=t*=Sa,Uc=La(n*=Sa),Oc=Pa(n),Fc.point=Hc}function Hc(t,n){t*=Sa;var e=La(n*=Sa),r=Pa(n),i=ka(t-Lc),o=Pa(i),a=r*La(i),u=Oc*e-Uc*r*o,c=Uc*e+Oc*r*o;Bc.add(Ca(Oa(a*a+u*u),c)),Lc=t,Uc=e,Oc=r}function jc(t){return Bc.reset(),Wa(t,Fc),+Bc}var Xc=[null,null],Vc={type:"LineString",coordinates:Xc};function Gc(t,n){return Xc[0]=t,Xc[1]=n,jc(Vc)}var $c={Feature:function(t,n){return Zc(t.geometry,n)},FeatureCollection:function(t,n){for(var e=t.features,r=-1,i=e.length;++r<i;)if(Zc(e[r].geometry,n))return!0;return!1}},Wc={Sphere:function(){return!0},Point:function(t,n){return Qc(t.coordinates,n)},MultiPoint:function(t,n){for(var e=t.coordinates,r=-1,i=e.length;++r<i;)if(Qc(e[r],n))return!0;return!1},LineString:function(t,n){return Kc(t.coordinates,n)},MultiLineString:function(t,n){for(var e=t.coordinates,r=-1,i=e.length;++r<i;)if(Kc(e[r],n))return!0;return!1},Polygon:function(t,n){return Jc(t.coordinates,n)},MultiPolygon:function(t,n){for(var e=t.coordinates,r=-1,i=e.length;++r<i;)if(Jc(e[r],n))return!0;return!1},GeometryCollection:function(t,n){for(var e=t.geometries,r=-1,i=e.length;++r<i;)if(Zc(e[r],n))return!0;return!1}};function Zc(t,n){return!(!t||!Wc.hasOwnProperty(t.type))&&Wc[t.type](t,n)}function Qc(t,n){return 0===Gc(t,n)}function Kc(t,n){for(var e,r,i,o=0,a=t.length;o<a;o++){if(0===(r=Gc(t[o],n)))return!0;if(o>0&&(i=Gc(t[o],t[o-1]))>0&&e<=i&&r<=i&&(e+r-i)*(1-Math.pow((e-r)/i,2))<xa*i)return!0;e=r}return!1}function Jc(t,n){return!!Sc(t.map(tf),nf(n))}function tf(t){return(t=t.map(nf)).pop(),t}function nf(t){return[t[0]*Sa,t[1]*Sa]}function ef(t,n,e){var r=g(t,n-ma,e).concat(n);return function(t){return r.map((function(n){return[t,n]}))}}function rf(t,n,e){var r=g(t,n-ma,e).concat(n);return function(t){return r.map((function(n){return[n,t]}))}}function of(){var t,n,e,r,i,o,a,u,c,f,s,l,h=10,d=h,p=90,v=360,y=2.5;function _(){return{type:"MultiLineString",coordinates:b()}}function b(){return g(za(r/p)*p,e,p).map(s).concat(g(za(u/v)*v,a,v).map(l)).concat(g(za(n/h)*h,t,h).filter((function(t){return ka(t%p)>ma})).map(c)).concat(g(za(o/d)*d,i,d).filter((function(t){return ka(t%v)>ma})).map(f))}return _.lines=function(){return b().map((function(t){return{type:"LineString",coordinates:t}}))},_.outline=function(){return{type:"Polygon",coordinates:[s(r).concat(l(a).slice(1),s(e).reverse().slice(1),l(u).reverse().slice(1))]}},_.extent=function(t){return arguments.length?_.extentMajor(t).extentMinor(t):_.extentMinor()},_.extentMajor=function(t){return arguments.length?(r=+t[0][0],e=+t[1][0],u=+t[0][1],a=+t[1][1],r>e&&(t=r,r=e,e=t),u>a&&(t=u,u=a,a=t),_.precision(y)):[[r,u],[e,a]]},_.extentMinor=function(e){return arguments.length?(n=+e[0][0],t=+e[1][0],o=+e[0][1],i=+e[1][1],n>t&&(e=n,n=t,t=e),o>i&&(e=o,o=i,i=e),_.precision(y)):[[n,o],[t,i]]},_.step=function(t){return arguments.length?_.stepMajor(t).stepMinor(t):_.stepMinor()},_.stepMajor=function(t){return arguments.length?(p=+t[0],v=+t[1],_):[p,v]},_.stepMinor=function(t){return arguments.length?(h=+t[0],d=+t[1],_):[h,d]},_.precision=function(h){return arguments.length?(y=+h,c=ef(o,i,90),f=rf(n,t,y),s=ef(u,a,90),l=rf(r,e,y),_):y},_.extentMajor([[-180,-90+ma],[180,90-ma]]).extentMinor([[-180,-80-ma],[180,80+ma]])}function af(t){return t}var uf,cf,ff,sf,lf=ga(),hf=ga(),df={point:Ha,lineStart:Ha,lineEnd:Ha,polygonStart:function(){df.lineStart=pf,df.lineEnd=yf},polygonEnd:function(){df.lineStart=df.lineEnd=df.point=Ha,lf.add(ka(hf)),hf.reset()},result:function(){var t=lf/2;return lf.reset(),t}};function pf(){df.point=vf}function vf(t,n){df.point=gf,uf=ff=t,cf=sf=n}function gf(t,n){hf.add(sf*t-ff*n),ff=t,sf=n}function yf(){gf(uf,cf)}var _f,bf,mf,xf,wf=1/0,Mf=wf,Nf=-wf,Tf=Nf,Af={point:function(t,n){t<wf&&(wf=t),t>Nf&&(Nf=t),n<Mf&&(Mf=n),n>Tf&&(Tf=n)},lineStart:Ha,lineEnd:Ha,polygonStart:Ha,polygonEnd:Ha,result:function(){var t=[[wf,Mf],[Nf,Tf]];return Nf=Tf=-(Mf=wf=1/0),t}},Sf=0,kf=0,Ef=0,Cf=0,Pf=0,zf=0,Rf=0,Df=0,qf=0,Lf={point:Uf,lineStart:Of,lineEnd:Yf,polygonStart:function(){Lf.lineStart=If,Lf.lineEnd=Hf},polygonEnd:function(){Lf.point=Uf,Lf.lineStart=Of,Lf.lineEnd=Yf},result:function(){var t=qf?[Rf/qf,Df/qf]:zf?[Cf/zf,Pf/zf]:Ef?[Sf/Ef,kf/Ef]:[NaN,NaN];return Sf=kf=Ef=Cf=Pf=zf=Rf=Df=qf=0,t}};function Uf(t,n){Sf+=t,kf+=n,++Ef}function Of(){Lf.point=Bf}function Bf(t,n){Lf.point=Ff,Uf(mf=t,xf=n)}function Ff(t,n){var e=t-mf,r=n-xf,i=Oa(e*e+r*r);Cf+=i*(mf+t)/2,Pf+=i*(xf+n)/2,zf+=i,Uf(mf=t,xf=n)}function Yf(){Lf.point=Uf}function If(){Lf.point=jf}function Hf(){Xf(_f,bf)}function jf(t,n){Lf.point=Xf,Uf(_f=mf=t,bf=xf=n)}function Xf(t,n){var e=t-mf,r=n-xf,i=Oa(e*e+r*r);Cf+=i*(mf+t)/2,Pf+=i*(xf+n)/2,zf+=i,Rf+=(i=xf*t-mf*n)*(mf+t),Df+=i*(xf+n),qf+=3*i,Uf(mf=t,xf=n)}function Vf(t){this._context=t}Vf.prototype={_radius:4.5,pointRadius:function(t){return this._radius=t,this},polygonStart:function(){this._line=0},polygonEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){0===this._line&&this._context.closePath(),this._point=NaN},point:function(t,n){switch(this._point){case 0:this._context.moveTo(t,n),this._point=1;break;case 1:this._context.lineTo(t,n);break;default:this._context.moveTo(t+this._radius,n),this._context.arc(t,n,this._radius,0,Ta)}},result:Ha};var Gf,$f,Wf,Zf,Qf,Kf=ga(),Jf={point:Ha,lineStart:function(){Jf.point=ts},lineEnd:function(){Gf&&ns($f,Wf),Jf.point=Ha},polygonStart:function(){Gf=!0},polygonEnd:function(){Gf=null},result:function(){var t=+Kf;return Kf.reset(),t}};function ts(t,n){Jf.point=ns,$f=Zf=t,Wf=Qf=n}function ns(t,n){Zf-=t,Qf-=n,Kf.add(Oa(Zf*Zf+Qf*Qf)),Zf=t,Qf=n}function es(){this._string=[]}function rs(t){return"m0,"+t+"a"+t+","+t+" 0 1,1 0,"+-2*t+"a"+t+","+t+" 0 1,1 0,"+2*t+"z"}function is(t){return function(n){var e=new os;for(var r in t)e[r]=t[r];return e.stream=n,e}}function os(){}function as(t,n,e){var r=t.clipExtent&&t.clipExtent();return t.scale(150).translate([0,0]),null!=r&&t.clipExtent(null),Wa(e,t.stream(Af)),n(Af.result()),null!=r&&t.clipExtent(r),t}function us(t,n,e){return as(t,(function(e){var r=n[1][0]-n[0][0],i=n[1][1]-n[0][1],o=Math.min(r/(e[1][0]-e[0][0]),i/(e[1][1]-e[0][1])),a=+n[0][0]+(r-o*(e[1][0]+e[0][0]))/2,u=+n[0][1]+(i-o*(e[1][1]+e[0][1]))/2;t.scale(150*o).translate([a,u])}),e)}function cs(t,n,e){return us(t,[[0,0],n],e)}function fs(t,n,e){return as(t,(function(e){var r=+n,i=r/(e[1][0]-e[0][0]),o=(r-i*(e[1][0]+e[0][0]))/2,a=-i*e[0][1];t.scale(150*i).translate([o,a])}),e)}function ss(t,n,e){return as(t,(function(e){var r=+n,i=r/(e[1][1]-e[0][1]),o=-i*e[0][0],a=(r-i*(e[1][1]+e[0][1]))/2;t.scale(150*i).translate([o,a])}),e)}es.prototype={_radius:4.5,_circle:rs(4.5),pointRadius:function(t){return(t=+t)!==this._radius&&(this._radius=t,this._circle=null),this},polygonStart:function(){this._line=0},polygonEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){0===this._line&&this._string.push("Z"),this._point=NaN},point:function(t,n){switch(this._point){case 0:this._string.push("M",t,",",n),this._point=1;break;case 1:this._string.push("L",t,",",n);break;default:null==this._circle&&(this._circle=rs(this._radius)),this._string.push("M",t,",",n,this._circle)}},result:function(){if(this._string.length){var t=this._string.join("");return this._string=[],t}return null}},os.prototype={constructor:os,point:function(t,n){this.stream.point(t,n)},sphere:function(){this.stream.sphere()},lineStart:function(){this.stream.lineStart()},lineEnd:function(){this.stream.lineEnd()},polygonStart:function(){this.stream.polygonStart()},polygonEnd:function(){this.stream.polygonEnd()}};var ls=Pa(30*Sa);function hs(t,n){return+n?function(t,n){function e(r,i,o,a,u,c,f,s,l,h,d,p,v,g){var y=f-r,_=s-i,b=y*y+_*_;if(b>4*n&&v--){var m=a+h,x=u+d,w=c+p,M=Oa(m*m+x*x+w*w),N=Ya(w/=M),T=ka(ka(w)-1)<ma||ka(o-l)<ma?(o+l)/2:Ca(x,m),A=t(T,N),S=A[0],k=A[1],E=S-r,C=k-i,P=_*E-y*C;(P*P/b>n||ka((y*E+_*C)/b-.5)>.3||a*h+u*d+c*p<ls)&&(e(r,i,o,a,u,c,S,k,T,m/=M,x/=M,w,v,g),g.point(S,k),e(S,k,T,m,x,w,f,s,l,h,d,p,v,g))}}return function(n){var r,i,o,a,u,c,f,s,l,h,d,p,v={point:g,lineStart:y,lineEnd:b,polygonStart:function(){n.polygonStart(),v.lineStart=m},polygonEnd:function(){n.polygonEnd(),v.lineStart=y}};function g(e,r){e=t(e,r),n.point(e[0],e[1])}function y(){s=NaN,v.point=_,n.lineStart()}function _(r,i){var o=fu([r,i]),a=t(r,i);e(s,l,f,h,d,p,s=a[0],l=a[1],f=r,h=o[0],d=o[1],p=o[2],16,n),n.point(s,l)}function b(){v.point=g,n.lineEnd()}function m(){y(),v.point=x,v.lineEnd=w}function x(t,n){_(r=t,n),i=s,o=l,a=h,u=d,c=p,v.point=_}function w(){e(s,l,f,h,d,p,i,o,r,a,u,c,16,n),v.lineEnd=b,b()}return v}}(t,n):function(t){return is({point:function(n,e){n=t(n,e),this.stream.point(n[0],n[1])}})}(t)}var ds=is({point:function(t,n){this.stream.point(t*Sa,n*Sa)}});function ps(t,n,e,r,i,o){var a=Pa(o),u=La(o),c=a*t,f=u*t,s=a/t,l=u/t,h=(u*e-a*n)/t,d=(u*n+a*e)/t;function p(t,o){return[c*(t*=r)-f*(o*=i)+n,e-f*t-c*o]}return p.invert=function(t,n){return[r*(s*t-l*n+h),i*(d-l*t-s*n)]},p}function vs(t){return gs((function(){return t}))()}function gs(t){var n,e,r,i,o,a,u,c,f,s,l=150,h=480,d=250,p=0,v=0,g=0,y=0,_=0,b=0,m=1,x=1,w=null,M=Pc,N=null,T=af,A=.5;function S(t){return c(t[0]*Sa,t[1]*Sa)}function k(t){return(t=c.invert(t[0],t[1]))&&[t[0]*Aa,t[1]*Aa]}function E(){var t=ps(l,0,0,m,x,b).apply(null,n(p,v)),r=(b?ps:function(t,n,e,r,i){function o(o,a){return[n+t*(o*=r),e-t*(a*=i)]}return o.invert=function(o,a){return[(o-n)/t*r,(e-a)/t*i]},o})(l,h-t[0],d-t[1],m,x,b);return e=dc(g,y,_),u=lc(n,r),c=lc(e,u),a=hs(u,A),C()}function C(){return f=s=null,S}return S.stream=function(t){return f&&s===t?f:f=ds(function(t){return is({point:function(n,e){var r=t(n,e);return this.stream.point(r[0],r[1])}})}(e)(M(a(T(s=t)))))},S.preclip=function(t){return arguments.length?(M=t,w=void 0,C()):M},S.postclip=function(t){return arguments.length?(T=t,N=r=i=o=null,C()):T},S.clipAngle=function(t){return arguments.length?(M=+t?zc(w=t*Sa):(w=null,Pc),C()):w*Aa},S.clipExtent=function(t){return arguments.length?(T=null==t?(N=r=i=o=null,af):qc(N=+t[0][0],r=+t[0][1],i=+t[1][0],o=+t[1][1]),C()):null==N?null:[[N,r],[i,o]]},S.scale=function(t){return arguments.length?(l=+t,E()):l},S.translate=function(t){return arguments.length?(h=+t[0],d=+t[1],E()):[h,d]},S.center=function(t){return arguments.length?(p=t[0]%360*Sa,v=t[1]%360*Sa,E()):[p*Aa,v*Aa]},S.rotate=function(t){return arguments.length?(g=t[0]%360*Sa,y=t[1]%360*Sa,_=t.length>2?t[2]%360*Sa:0,E()):[g*Aa,y*Aa,_*Aa]},S.angle=function(t){return arguments.length?(b=t%360*Sa,E()):b*Aa},S.reflectX=function(t){return arguments.length?(m=t?-1:1,E()):m<0},S.reflectY=function(t){return arguments.length?(x=t?-1:1,E()):x<0},S.precision=function(t){return arguments.length?(a=hs(u,A=t*t),C()):Oa(A)},S.fitExtent=function(t,n){return us(S,t,n)},S.fitSize=function(t,n){return cs(S,t,n)},S.fitWidth=function(t,n){return fs(S,t,n)},S.fitHeight=function(t,n){return ss(S,t,n)},function(){return n=t.apply(this,arguments),S.invert=n.invert&&k,E()}}function ys(t){var n=0,e=wa/3,r=gs(t),i=r(n,e);return i.parallels=function(t){return arguments.length?r(n=t[0]*Sa,e=t[1]*Sa):[n*Aa,e*Aa]},i}function _s(t,n){var e=La(t),r=(e+La(n))/2;if(ka(r)<ma)return function(t){var n=Pa(t);function e(t,e){return[t*n,La(e)/n]}return e.invert=function(t,e){return[t/n,Ya(e*n)]},e}(t);var i=1+e*(2*r-e),o=Oa(i)/r;function a(t,n){var e=Oa(i-2*r*La(n))/r;return[e*La(t*=r),o-e*Pa(t)]}return a.invert=function(t,n){var e=o-n,a=Ca(t,ka(e))*Ua(e);return e*r<0&&(a-=wa*Ua(t)*Ua(e)),[a/r,Ya((i-(t*t+e*e)*r*r)/(2*r))]},a}function bs(){return ys(_s).scale(155.424).center([0,33.6442])}function ms(){return bs().parallels([29.5,45.5]).scale(1070).translate([480,250]).rotate([96,0]).center([-.6,38.7])}function xs(t){return function(n,e){var r=Pa(n),i=Pa(e),o=t(r*i);return[o*i*La(n),o*La(e)]}}function ws(t){return function(n,e){var r=Oa(n*n+e*e),i=t(r),o=La(i),a=Pa(i);return[Ca(n*o,r*a),Ya(r&&e*o/r)]}}var Ms=xs((function(t){return Oa(2/(1+t))}));Ms.invert=ws((function(t){return 2*Ya(t/2)}));var Ns=xs((function(t){return(t=Fa(t))&&t/La(t)}));function Ts(t,n){return[t,Da(Ba((Ma+n)/2))]}function As(t){var n,e,r,i=vs(t),o=i.center,a=i.scale,u=i.translate,c=i.clipExtent,f=null;function s(){var o=wa*a(),u=i(yc(i.rotate()).invert([0,0]));return c(null==f?[[u[0]-o,u[1]-o],[u[0]+o,u[1]+o]]:t===Ts?[[Math.max(u[0]-o,f),n],[Math.min(u[0]+o,e),r]]:[[f,Math.max(u[1]-o,n)],[e,Math.min(u[1]+o,r)]])}return i.scale=function(t){return arguments.length?(a(t),s()):a()},i.translate=function(t){return arguments.length?(u(t),s()):u()},i.center=function(t){return arguments.length?(o(t),s()):o()},i.clipExtent=function(t){return arguments.length?(null==t?f=n=e=r=null:(f=+t[0][0],n=+t[0][1],e=+t[1][0],r=+t[1][1]),s()):null==f?null:[[f,n],[e,r]]},s()}function Ss(t){return Ba((Ma+t)/2)}function ks(t,n){var e=Pa(t),r=t===n?La(t):Da(e/Pa(n))/Da(Ss(n)/Ss(t)),i=e*qa(Ss(t),r)/r;if(!r)return Ts;function o(t,n){i>0?n<-Ma+ma&&(n=-Ma+ma):n>Ma-ma&&(n=Ma-ma);var e=i/qa(Ss(n),r);return[e*La(r*t),i-e*Pa(r*t)]}return o.invert=function(t,n){var e=i-n,o=Ua(r)*Oa(t*t+e*e),a=Ca(t,ka(e))*Ua(e);return e*r<0&&(a-=wa*Ua(t)*Ua(e)),[a/r,2*Ea(qa(i/o,1/r))-Ma]},o}function Es(t,n){return[t,n]}function Cs(t,n){var e=Pa(t),r=t===n?La(t):(e-Pa(n))/(n-t),i=e/r+t;if(ka(r)<ma)return Es;function o(t,n){var e=i-n,o=r*t;return[e*La(o),i-e*Pa(o)]}return o.invert=function(t,n){var e=i-n,o=Ca(t,ka(e))*Ua(e);return e*r<0&&(o-=wa*Ua(t)*Ua(e)),[o/r,i-Ua(r)*Oa(t*t+e*e)]},o}Ns.invert=ws((function(t){return t})),Ts.invert=function(t,n){return[t,2*Ea(Ra(n))-Ma]},Es.invert=Es;var Ps=1.340264,zs=-.081106,Rs=893e-6,Ds=.003796,qs=Oa(3)/2;function Ls(t,n){var e=Ya(qs*La(n)),r=e*e,i=r*r*r;return[t*Pa(e)/(qs*(Ps+3*zs*r+i*(7*Rs+9*Ds*r))),e*(Ps+zs*r+i*(Rs+Ds*r))]}function Us(t,n){var e=Pa(n),r=Pa(t)*e;return[e*La(t)/r,La(n)/r]}function Os(t,n){var e=n*n,r=e*e;return[t*(.8707-.131979*e+r*(r*(.003971*e-.001529*r)-.013791)),n*(1.007226+e*(.015085+r*(.028874*e-.044475-.005916*r)))]}function Bs(t,n){return[Pa(n)*La(t),La(n)]}function Fs(t,n){var e=Pa(n),r=1+Pa(t)*e;return[e*La(t)/r,La(n)/r]}function Ys(t,n){return[Da(Ba((Ma+n)/2)),-t]}function Is(t,n){return t.parent===n.parent?1:2}function Hs(t,n){return t+n.x}function js(t,n){return Math.max(t,n.y)}function Xs(t){var n=0,e=t.children,r=e&&e.length;if(r)for(;--r>=0;)n+=e[r].value;else n=1;t.value=n}function Vs(t,n){var e,r,i,o,a,u=new Zs(t),c=+t.value&&(u.value=t.value),f=[u];for(null==n&&(n=Gs);e=f.pop();)if(c&&(e.value=+e.data.value),(i=n(e.data))&&(a=i.length))for(e.children=new Array(a),o=a-1;o>=0;--o)f.push(r=e.children[o]=new Zs(i[o])),r.parent=e,r.depth=e.depth+1;return u.eachBefore(Ws)}function Gs(t){return t.children}function $s(t){t.data=t.data.data}function Ws(t){var n=0;do{t.height=n}while((t=t.parent)&&t.height<++n)}function Zs(t){this.data=t,this.depth=this.height=0,this.parent=null}Ls.invert=function(t,n){for(var e,r=n,i=r*r,o=i*i*i,a=0;a<12&&(o=(i=(r-=e=(r*(Ps+zs*i+o*(Rs+Ds*i))-n)/(Ps+3*zs*i+o*(7*Rs+9*Ds*i)))*r)*i*i,!(ka(e)<xa));++a);return[qs*t*(Ps+3*zs*i+o*(7*Rs+9*Ds*i))/Pa(r),Ya(La(r)/qs)]},Us.invert=ws(Ea),Os.invert=function(t,n){var e,r=n,i=25;do{var o=r*r,a=o*o;r-=e=(r*(1.007226+o*(.015085+a*(.028874*o-.044475-.005916*a)))-n)/(1.007226+o*(.045255+a*(.259866*o-.311325-.005916*11*a)))}while(ka(e)>ma&&--i>0);return[t/(.8707+(o=r*r)*(o*(o*o*o*(.003971-.001529*o)-.013791)-.131979)),r]},Bs.invert=ws(Ya),Fs.invert=ws((function(t){return 2*Ea(t)})),Ys.invert=function(t,n){return[-n,2*Ea(Ra(t))-Ma]},Zs.prototype=Vs.prototype={constructor:Zs,count:function(){return this.eachAfter(Xs)},each:function(t){var n,e,r,i,o=this,a=[o];do{for(n=a.reverse(),a=[];o=n.pop();)if(t(o),e=o.children)for(r=0,i=e.length;r<i;++r)a.push(e[r])}while(a.length);return this},eachAfter:function(t){for(var n,e,r,i=this,o=[i],a=[];i=o.pop();)if(a.push(i),n=i.children)for(e=0,r=n.length;e<r;++e)o.push(n[e]);for(;i=a.pop();)t(i);return this},eachBefore:function(t){for(var n,e,r=this,i=[r];r=i.pop();)if(t(r),n=r.children)for(e=n.length-1;e>=0;--e)i.push(n[e]);return this},sum:function(t){return this.eachAfter((function(n){for(var e=+t(n.data)||0,r=n.children,i=r&&r.length;--i>=0;)e+=r[i].value;n.value=e}))},sort:function(t){return this.eachBefore((function(n){n.children&&n.children.sort(t)}))},path:function(t){for(var n=this,e=function(t,n){if(t===n)return t;var e=t.ancestors(),r=n.ancestors(),i=null;for(t=e.pop(),n=r.pop();t===n;)i=t,t=e.pop(),n=r.pop();return i}(n,t),r=[n];n!==e;)n=n.parent,r.push(n);for(var i=r.length;t!==e;)r.splice(i,0,t),t=t.parent;return r},ancestors:function(){for(var t=this,n=[t];t=t.parent;)n.push(t);return n},descendants:function(){var t=[];return this.each((function(n){t.push(n)})),t},leaves:function(){var t=[];return this.eachBefore((function(n){n.children||t.push(n)})),t},links:function(){var t=this,n=[];return t.each((function(e){e!==t&&n.push({source:e.parent,target:e})})),n},copy:function(){return Vs(this).eachBefore($s)}};var Qs=Array.prototype.slice;function Ks(t){for(var n,e,r=0,i=(t=function(t){for(var n,e,r=t.length;r;)e=Math.random()*r--|0,n=t[r],t[r]=t[e],t[e]=n;return t}(Qs.call(t))).length,o=[];r<i;)n=t[r],e&&nl(e,n)?++r:(e=rl(o=Js(o,n)),r=0);return e}function Js(t,n){var e,r;if(el(n,t))return[n];for(e=0;e<t.length;++e)if(tl(n,t[e])&&el(il(t[e],n),t))return[t[e],n];for(e=0;e<t.length-1;++e)for(r=e+1;r<t.length;++r)if(tl(il(t[e],t[r]),n)&&tl(il(t[e],n),t[r])&&tl(il(t[r],n),t[e])&&el(ol(t[e],t[r],n),t))return[t[e],t[r],n];throw new Error}function tl(t,n){var e=t.r-n.r,r=n.x-t.x,i=n.y-t.y;return e<0||e*e<r*r+i*i}function nl(t,n){var e=t.r-n.r+1e-6,r=n.x-t.x,i=n.y-t.y;return e>0&&e*e>r*r+i*i}function el(t,n){for(var e=0;e<n.length;++e)if(!nl(t,n[e]))return!1;return!0}function rl(t){switch(t.length){case 1:return function(t){return{x:t.x,y:t.y,r:t.r}}(t[0]);case 2:return il(t[0],t[1]);case 3:return ol(t[0],t[1],t[2])}}function il(t,n){var e=t.x,r=t.y,i=t.r,o=n.x,a=n.y,u=n.r,c=o-e,f=a-r,s=u-i,l=Math.sqrt(c*c+f*f);return{x:(e+o+c/l*s)/2,y:(r+a+f/l*s)/2,r:(l+i+u)/2}}function ol(t,n,e){var r=t.x,i=t.y,o=t.r,a=n.x,u=n.y,c=n.r,f=e.x,s=e.y,l=e.r,h=r-a,d=r-f,p=i-u,v=i-s,g=c-o,y=l-o,_=r*r+i*i-o*o,b=_-a*a-u*u+c*c,m=_-f*f-s*s+l*l,x=d*p-h*v,w=(p*m-v*b)/(2*x)-r,M=(v*g-p*y)/x,N=(d*b-h*m)/(2*x)-i,T=(h*y-d*g)/x,A=M*M+T*T-1,S=2*(o+w*M+N*T),k=w*w+N*N-o*o,E=-(A?(S+Math.sqrt(S*S-4*A*k))/(2*A):k/S);return{x:r+w+M*E,y:i+N+T*E,r:E}}function al(t,n,e){var r,i,o,a,u=t.x-n.x,c=t.y-n.y,f=u*u+c*c;f?(i=n.r+e.r,i*=i,a=t.r+e.r,i>(a*=a)?(r=(f+a-i)/(2*f),o=Math.sqrt(Math.max(0,a/f-r*r)),e.x=t.x-r*u-o*c,e.y=t.y-r*c+o*u):(r=(f+i-a)/(2*f),o=Math.sqrt(Math.max(0,i/f-r*r)),e.x=n.x+r*u-o*c,e.y=n.y+r*c+o*u)):(e.x=n.x+e.r,e.y=n.y)}function ul(t,n){var e=t.r+n.r-1e-6,r=n.x-t.x,i=n.y-t.y;return e>0&&e*e>r*r+i*i}function cl(t){var n=t._,e=t.next._,r=n.r+e.r,i=(n.x*e.r+e.x*n.r)/r,o=(n.y*e.r+e.y*n.r)/r;return i*i+o*o}function fl(t){this._=t,this.next=null,this.previous=null}function sl(t){if(!(i=t.length))return 0;var n,e,r,i,o,a,u,c,f,s,l;if((n=t[0]).x=0,n.y=0,!(i>1))return n.r;if(e=t[1],n.x=-e.r,e.x=n.r,e.y=0,!(i>2))return n.r+e.r;al(e,n,r=t[2]),n=new fl(n),e=new fl(e),r=new fl(r),n.next=r.previous=e,e.next=n.previous=r,r.next=e.previous=n;t:for(u=3;u<i;++u){al(n._,e._,r=t[u]),r=new fl(r),c=e.next,f=n.previous,s=e._.r,l=n._.r;do{if(s<=l){if(ul(c._,r._)){e=c,n.next=e,e.previous=n,--u;continue t}s+=c._.r,c=c.next}else{if(ul(f._,r._)){(n=f).next=e,e.previous=n,--u;continue t}l+=f._.r,f=f.previous}}while(c!==f.next);for(r.previous=n,r.next=e,n.next=e.previous=e=r,o=cl(n);(r=r.next)!==e;)(a=cl(r))<o&&(n=r,o=a);e=n.next}for(n=[e._],r=e;(r=r.next)!==e;)n.push(r._);for(r=Ks(n),u=0;u<i;++u)(n=t[u]).x-=r.x,n.y-=r.y;return r.r}function ll(t){return null==t?null:hl(t)}function hl(t){if("function"!=typeof t)throw new Error;return t}function dl(){return 0}function pl(t){return function(){return t}}function vl(t){return Math.sqrt(t.value)}function gl(t){return function(n){n.children||(n.r=Math.max(0,+t(n)||0))}}function yl(t,n){return function(e){if(r=e.children){var r,i,o,a=r.length,u=t(e)*n||0;if(u)for(i=0;i<a;++i)r[i].r+=u;if(o=sl(r),u)for(i=0;i<a;++i)r[i].r-=u;e.r=o+u}}}function _l(t){return function(n){var e=n.parent;n.r*=t,e&&(n.x=e.x+t*n.x,n.y=e.y+t*n.y)}}function bl(t){t.x0=Math.round(t.x0),t.y0=Math.round(t.y0),t.x1=Math.round(t.x1),t.y1=Math.round(t.y1)}function ml(t,n,e,r,i){for(var o,a=t.children,u=-1,c=a.length,f=t.value&&(r-n)/t.value;++u<c;)(o=a[u]).y0=e,o.y1=i,o.x0=n,o.x1=n+=o.value*f}var xl={depth:-1},wl={};function Ml(t){return t.id}function Nl(t){return t.parentId}function Tl(t,n){return t.parent===n.parent?1:2}function Al(t){var n=t.children;return n?n[0]:t.t}function Sl(t){var n=t.children;return n?n[n.length-1]:t.t}function kl(t,n,e){var r=e/(n.i-t.i);n.c-=r,n.s+=e,t.c+=r,n.z+=e,n.m+=e}function El(t,n,e){return t.a.parent===n.parent?t.a:e}function Cl(t,n){this._=t,this.parent=null,this.children=null,this.A=null,this.a=this,this.z=0,this.m=0,this.c=0,this.s=0,this.t=null,this.i=n}function Pl(t,n,e,r,i){for(var o,a=t.children,u=-1,c=a.length,f=t.value&&(i-e)/t.value;++u<c;)(o=a[u]).x0=n,o.x1=r,o.y0=e,o.y1=e+=o.value*f}Cl.prototype=Object.create(Zs.prototype);var zl=(1+Math.sqrt(5))/2;function Rl(t,n,e,r,i,o){for(var a,u,c,f,s,l,h,d,p,v,g,y=[],_=n.children,b=0,m=0,x=_.length,w=n.value;b<x;){c=i-e,f=o-r;do{s=_[m++].value}while(!s&&m<x);for(l=h=s,g=s*s*(v=Math.max(f/c,c/f)/(w*t)),p=Math.max(h/g,g/l);m<x;++m){if(s+=u=_[m].value,u<l&&(l=u),u>h&&(h=u),g=s*s*v,(d=Math.max(h/g,g/l))>p){s-=u;break}p=d}y.push(a={value:s,dice:c<f,children:_.slice(b,m)}),a.dice?ml(a,e,r,i,w?r+=f*s/w:o):Pl(a,e,r,w?e+=c*s/w:i,o),w-=s,b=m}return y}var Dl=function t(n){function e(t,e,r,i,o){Rl(n,t,e,r,i,o)}return e.ratio=function(n){return t((n=+n)>1?n:1)},e}(zl),ql=function t(n){function e(t,e,r,i,o){if((a=t._squarify)&&a.ratio===n)for(var a,u,c,f,s,l=-1,h=a.length,d=t.value;++l<h;){for(c=(u=a[l]).children,f=u.value=0,s=c.length;f<s;++f)u.value+=c[f].value;u.dice?ml(u,e,r,i,r+=(o-r)*u.value/d):Pl(u,e,r,e+=(i-e)*u.value/d,o),d-=u.value}else t._squarify=a=Rl(n,t,e,r,i,o),a.ratio=n}return e.ratio=function(n){return t((n=+n)>1?n:1)},e}(zl);function Ll(t,n,e){return(n[0]-t[0])*(e[1]-t[1])-(n[1]-t[1])*(e[0]-t[0])}function Ul(t,n){return t[0]-n[0]||t[1]-n[1]}function Ol(t){for(var n=t.length,e=[0,1],r=2,i=2;i<n;++i){for(;r>1&&Ll(t[e[r-2]],t[e[r-1]],t[i])<=0;)--r;e[r++]=i}return e.slice(0,r)}function Bl(){return Math.random()}var Fl=function t(n){function e(t,e){return t=null==t?0:+t,e=null==e?1:+e,1===arguments.length?(e=t,t=0):e-=t,function(){return n()*e+t}}return e.source=t,e}(Bl),Yl=function t(n){function e(t,e){var r,i;return t=null==t?0:+t,e=null==e?1:+e,function(){var o;if(null!=r)o=r,r=null;else do{r=2*n()-1,o=2*n()-1,i=r*r+o*o}while(!i||i>1);return t+e*o*Math.sqrt(-2*Math.log(i)/i)}}return e.source=t,e}(Bl),Il=function t(n){function e(){var t=Yl.source(n).apply(this,arguments);return function(){return Math.exp(t())}}return e.source=t,e}(Bl),Hl=function t(n){function e(t){return function(){for(var e=0,r=0;r<t;++r)e+=n();return e}}return e.source=t,e}(Bl),jl=function t(n){function e(t){var e=Hl.source(n)(t);return function(){return e()/t}}return e.source=t,e}(Bl),Xl=function t(n){function e(t){return function(){return-Math.log(1-n())/t}}return e.source=t,e}(Bl);function Vl(t,n){switch(arguments.length){case 0:break;case 1:this.range(t);break;default:this.range(n).domain(t)}return this}function Gl(t,n){switch(arguments.length){case 0:break;case 1:this.interpolator(t);break;default:this.interpolator(n).domain(t)}return this}var $l=Array.prototype,Wl=$l.map,Zl=$l.slice,Ql={name:"implicit"};function Kl(){var t=zi(),n=[],e=[],r=Ql;function i(i){var o=i+"",a=t.get(o);if(!a){if(r!==Ql)return r;t.set(o,a=n.push(i))}return e[(a-1)%e.length]}return i.domain=function(e){if(!arguments.length)return n.slice();n=[],t=zi();for(var r,o,a=-1,u=e.length;++a<u;)t.has(o=(r=e[a])+"")||t.set(o,n.push(r));return i},i.range=function(t){return arguments.length?(e=Zl.call(t),i):e.slice()},i.unknown=function(t){return arguments.length?(r=t,i):r},i.copy=function(){return Kl(n,e).unknown(r)},Vl.apply(i,arguments),i}function Jl(){var t,n,e=Kl().unknown(void 0),r=e.domain,i=e.range,o=[0,1],a=!1,u=0,c=0,f=.5;function s(){var e=r().length,s=o[1]<o[0],l=o[s-0],h=o[1-s];t=(h-l)/Math.max(1,e-u+2*c),a&&(t=Math.floor(t)),l+=(h-l-t*(e-u))*f,n=t*(1-u),a&&(l=Math.round(l),n=Math.round(n));var d=g(e).map((function(n){return l+t*n}));return i(s?d.reverse():d)}return delete e.unknown,e.domain=function(t){return arguments.length?(r(t),s()):r()},e.range=function(t){return arguments.length?(o=[+t[0],+t[1]],s()):o.slice()},e.rangeRound=function(t){return o=[+t[0],+t[1]],a=!0,s()},e.bandwidth=function(){return n},e.step=function(){return t},e.round=function(t){return arguments.length?(a=!!t,s()):a},e.padding=function(t){return arguments.length?(u=Math.min(1,c=+t),s()):u},e.paddingInner=function(t){return arguments.length?(u=Math.min(1,t),s()):u},e.paddingOuter=function(t){return arguments.length?(c=+t,s()):c},e.align=function(t){return arguments.length?(f=Math.max(0,Math.min(1,t)),s()):f},e.copy=function(){return Jl(r(),o).round(a).paddingInner(u).paddingOuter(c).align(f)},Vl.apply(s(),arguments)}function th(t){return+t}var nh=[0,1];function eh(t){return t}function rh(t,n){return(n-=t=+t)?function(e){return(e-t)/n}:function(t){return function(){return t}}(isNaN(n)?NaN:.5)}function ih(t){var n,e=t[0],r=t[t.length-1];return e>r&&(n=e,e=r,r=n),function(t){return Math.max(e,Math.min(r,t))}}function oh(t,n,e){var r=t[0],i=t[1],o=n[0],a=n[1];return i<r?(r=rh(i,r),o=e(a,o)):(r=rh(r,i),o=e(o,a)),function(t){return o(r(t))}}function ah(t,n,e){var r=Math.min(t.length,n.length)-1,o=new Array(r),a=new Array(r),u=-1;for(t[r]<t[0]&&(t=t.slice().reverse(),n=n.slice().reverse());++u<r;)o[u]=rh(t[u],t[u+1]),a[u]=e(n[u],n[u+1]);return function(n){var e=i(t,n,1,r)-1;return a[e](o[e](n))}}function uh(t,n){return n.domain(t.domain()).range(t.range()).interpolate(t.interpolate()).clamp(t.clamp()).unknown(t.unknown())}function ch(){var t,n,e,r,i,o,a=nh,u=nh,c=pe,f=eh;function s(){return r=Math.min(a.length,u.length)>2?ah:oh,i=o=null,l}function l(n){return isNaN(n=+n)?e:(i||(i=r(a.map(t),u,c)))(t(f(n)))}return l.invert=function(e){return f(n((o||(o=r(u,a.map(t),fe)))(e)))},l.domain=function(t){return arguments.length?(a=Wl.call(t,th),f===eh||(f=ih(a)),s()):a.slice()},l.range=function(t){return arguments.length?(u=Zl.call(t),s()):u.slice()},l.rangeRound=function(t){return u=Zl.call(t),c=ve,s()},l.clamp=function(t){return arguments.length?(f=t?ih(a):eh,l):f!==eh},l.interpolate=function(t){return arguments.length?(c=t,s()):c},l.unknown=function(t){return arguments.length?(e=t,l):e},function(e,r){return t=e,n=r,s()}}function fh(t,n){return ch()(t,n)}function sh(n,e,r,i){var o,a=w(n,e,r);switch((i=ra(null==i?",f":i)).type){case"s":var u=Math.max(Math.abs(n),Math.abs(e));return null!=i.precision||isNaN(o=pa(a,u))||(i.precision=o),t.formatPrefix(i,u);case"":case"e":case"g":case"p":case"r":null!=i.precision||isNaN(o=va(a,Math.max(Math.abs(n),Math.abs(e))))||(i.precision=o-("e"===i.type));break;case"f":case"%":null!=i.precision||isNaN(o=da(a))||(i.precision=o-2*("%"===i.type))}return t.format(i)}function lh(t){var n=t.domain;return t.ticks=function(t){var e=n();return m(e[0],e[e.length-1],null==t?10:t)},t.tickFormat=function(t,e){var r=n();return sh(r[0],r[r.length-1],null==t?10:t,e)},t.nice=function(e){null==e&&(e=10);var r,i=n(),o=0,a=i.length-1,u=i[o],c=i[a];return c<u&&(r=u,u=c,c=r,r=o,o=a,a=r),(r=x(u,c,e))>0?r=x(u=Math.floor(u/r)*r,c=Math.ceil(c/r)*r,e):r<0&&(r=x(u=Math.ceil(u*r)/r,c=Math.floor(c*r)/r,e)),r>0?(i[o]=Math.floor(u/r)*r,i[a]=Math.ceil(c/r)*r,n(i)):r<0&&(i[o]=Math.ceil(u*r)/r,i[a]=Math.floor(c*r)/r,n(i)),t},t}function hh(t,n){var e,r=0,i=(t=t.slice()).length-1,o=t[r],a=t[i];return a<o&&(e=r,r=i,i=e,e=o,o=a,a=e),t[r]=n.floor(o),t[i]=n.ceil(a),t}function dh(t){return Math.log(t)}function ph(t){return Math.exp(t)}function vh(t){return-Math.log(-t)}function gh(t){return-Math.exp(-t)}function yh(t){return isFinite(t)?+("1e"+t):t<0?0:t}function _h(t){return function(n){return-t(-n)}}function bh(n){var e,r,i=n(dh,ph),o=i.domain,a=10;function u(){return e=function(t){return t===Math.E?Math.log:10===t&&Math.log10||2===t&&Math.log2||(t=Math.log(t),function(n){return Math.log(n)/t})}(a),r=function(t){return 10===t?yh:t===Math.E?Math.exp:function(n){return Math.pow(t,n)}}(a),o()[0]<0?(e=_h(e),r=_h(r),n(vh,gh)):n(dh,ph),i}return i.base=function(t){return arguments.length?(a=+t,u()):a},i.domain=function(t){return arguments.length?(o(t),u()):o()},i.ticks=function(t){var n,i=o(),u=i[0],c=i[i.length-1];(n=c<u)&&(h=u,u=c,c=h);var f,s,l,h=e(u),d=e(c),p=null==t?10:+t,v=[];if(!(a%1)&&d-h<p){if(h=Math.round(h)-1,d=Math.round(d)+1,u>0){for(;h<d;++h)for(s=1,f=r(h);s<a;++s)if(!((l=f*s)<u)){if(l>c)break;v.push(l)}}else for(;h<d;++h)for(s=a-1,f=r(h);s>=1;--s)if(!((l=f*s)<u)){if(l>c)break;v.push(l)}}else v=m(h,d,Math.min(d-h,p)).map(r);return n?v.reverse():v},i.tickFormat=function(n,o){if(null==o&&(o=10===a?".0e":","),"function"!=typeof o&&(o=t.format(o)),n===1/0)return o;null==n&&(n=10);var u=Math.max(1,a*n/i.ticks().length);return function(t){var n=t/r(Math.round(e(t)));return n*a<a-.5&&(n*=a),n<=u?o(t):""}},i.nice=function(){return o(hh(o(),{floor:function(t){return r(Math.floor(e(t)))},ceil:function(t){return r(Math.ceil(e(t)))}}))},i}function mh(t){return function(n){return Math.sign(n)*Math.log1p(Math.abs(n/t))}}function xh(t){return function(n){return Math.sign(n)*Math.expm1(Math.abs(n))*t}}function wh(t){var n=1,e=t(mh(n),xh(n));return e.constant=function(e){return arguments.length?t(mh(n=+e),xh(n)):n},lh(e)}function Mh(t){return function(n){return n<0?-Math.pow(-n,t):Math.pow(n,t)}}function Nh(t){return t<0?-Math.sqrt(-t):Math.sqrt(t)}function Th(t){return t<0?-t*t:t*t}function Ah(t){var n=t(eh,eh),e=1;function r(){return 1===e?t(eh,eh):.5===e?t(Nh,Th):t(Mh(e),Mh(1/e))}return n.exponent=function(t){return arguments.length?(e=+t,r()):e},lh(n)}function Sh(){var t=Ah(ch());return t.copy=function(){return uh(t,Sh()).exponent(t.exponent())},Vl.apply(t,arguments),t}var kh=new Date,Eh=new Date;function Ch(t,n,e,r){function i(n){return t(n=0===arguments.length?new Date:new Date(+n)),n}return i.floor=function(n){return t(n=new Date(+n)),n},i.ceil=function(e){return t(e=new Date(e-1)),n(e,1),t(e),e},i.round=function(t){var n=i(t),e=i.ceil(t);return t-n<e-t?n:e},i.offset=function(t,e){return n(t=new Date(+t),null==e?1:Math.floor(e)),t},i.range=function(e,r,o){var a,u=[];if(e=i.ceil(e),o=null==o?1:Math.floor(o),!(e<r&&o>0))return u;do{u.push(a=new Date(+e)),n(e,o),t(e)}while(a<e&&e<r);return u},i.filter=function(e){return Ch((function(n){if(n>=n)for(;t(n),!e(n);)n.setTime(n-1)}),(function(t,r){if(t>=t)if(r<0)for(;++r<=0;)for(;n(t,-1),!e(t););else for(;--r>=0;)for(;n(t,1),!e(t););}))},e&&(i.count=function(n,r){return kh.setTime(+n),Eh.setTime(+r),t(kh),t(Eh),Math.floor(e(kh,Eh))},i.every=function(t){return t=Math.floor(t),isFinite(t)&&t>0?t>1?i.filter(r?function(n){return r(n)%t==0}:function(n){return i.count(0,n)%t==0}):i:null}),i}var Ph=Ch((function(){}),(function(t,n){t.setTime(+t+n)}),(function(t,n){return n-t}));Ph.every=function(t){return t=Math.floor(t),isFinite(t)&&t>0?t>1?Ch((function(n){n.setTime(Math.floor(n/t)*t)}),(function(n,e){n.setTime(+n+e*t)}),(function(n,e){return(e-n)/t})):Ph:null};var zh=Ph.range,Rh=6e4,Dh=6048e5,qh=Ch((function(t){t.setTime(t-t.getMilliseconds())}),(function(t,n){t.setTime(+t+1e3*n)}),(function(t,n){return(n-t)/1e3}),(function(t){return t.getUTCSeconds()})),Lh=qh.range,Uh=Ch((function(t){t.setTime(t-t.getMilliseconds()-1e3*t.getSeconds())}),(function(t,n){t.setTime(+t+n*Rh)}),(function(t,n){return(n-t)/Rh}),(function(t){return t.getMinutes()})),Oh=Uh.range,Bh=Ch((function(t){t.setTime(t-t.getMilliseconds()-1e3*t.getSeconds()-t.getMinutes()*Rh)}),(function(t,n){t.setTime(+t+36e5*n)}),(function(t,n){return(n-t)/36e5}),(function(t){return t.getHours()})),Fh=Bh.range,Yh=Ch((function(t){t.setHours(0,0,0,0)}),(function(t,n){t.setDate(t.getDate()+n)}),(function(t,n){return(n-t-(n.getTimezoneOffset()-t.getTimezoneOffset())*Rh)/864e5}),(function(t){return t.getDate()-1})),Ih=Yh.range;function Hh(t){return Ch((function(n){n.setDate(n.getDate()-(n.getDay()+7-t)%7),n.setHours(0,0,0,0)}),(function(t,n){t.setDate(t.getDate()+7*n)}),(function(t,n){return(n-t-(n.getTimezoneOffset()-t.getTimezoneOffset())*Rh)/Dh}))}var jh=Hh(0),Xh=Hh(1),Vh=Hh(2),Gh=Hh(3),$h=Hh(4),Wh=Hh(5),Zh=Hh(6),Qh=jh.range,Kh=Xh.range,Jh=Vh.range,td=Gh.range,nd=$h.range,ed=Wh.range,rd=Zh.range,id=Ch((function(t){t.setDate(1),t.setHours(0,0,0,0)}),(function(t,n){t.setMonth(t.getMonth()+n)}),(function(t,n){return n.getMonth()-t.getMonth()+12*(n.getFullYear()-t.getFullYear())}),(function(t){return t.getMonth()})),od=id.range,ad=Ch((function(t){t.setMonth(0,1),t.setHours(0,0,0,0)}),(function(t,n){t.setFullYear(t.getFullYear()+n)}),(function(t,n){return n.getFullYear()-t.getFullYear()}),(function(t){return t.getFullYear()}));ad.every=function(t){return isFinite(t=Math.floor(t))&&t>0?Ch((function(n){n.setFullYear(Math.floor(n.getFullYear()/t)*t),n.setMonth(0,1),n.setHours(0,0,0,0)}),(function(n,e){n.setFullYear(n.getFullYear()+e*t)})):null};var ud=ad.range,cd=Ch((function(t){t.setUTCSeconds(0,0)}),(function(t,n){t.setTime(+t+n*Rh)}),(function(t,n){return(n-t)/Rh}),(function(t){return t.getUTCMinutes()})),fd=cd.range,sd=Ch((function(t){t.setUTCMinutes(0,0,0)}),(function(t,n){t.setTime(+t+36e5*n)}),(function(t,n){return(n-t)/36e5}),(function(t){return t.getUTCHours()})),ld=sd.range,hd=Ch((function(t){t.setUTCHours(0,0,0,0)}),(function(t,n){t.setUTCDate(t.getUTCDate()+n)}),(function(t,n){return(n-t)/864e5}),(function(t){return t.getUTCDate()-1})),dd=hd.range;function pd(t){return Ch((function(n){n.setUTCDate(n.getUTCDate()-(n.getUTCDay()+7-t)%7),n.setUTCHours(0,0,0,0)}),(function(t,n){t.setUTCDate(t.getUTCDate()+7*n)}),(function(t,n){return(n-t)/Dh}))}var vd=pd(0),gd=pd(1),yd=pd(2),_d=pd(3),bd=pd(4),md=pd(5),xd=pd(6),wd=vd.range,Md=gd.range,Nd=yd.range,Td=_d.range,Ad=bd.range,Sd=md.range,kd=xd.range,Ed=Ch((function(t){t.setUTCDate(1),t.setUTCHours(0,0,0,0)}),(function(t,n){t.setUTCMonth(t.getUTCMonth()+n)}),(function(t,n){return n.getUTCMonth()-t.getUTCMonth()+12*(n.getUTCFullYear()-t.getUTCFullYear())}),(function(t){return t.getUTCMonth()})),Cd=Ed.range,Pd=Ch((function(t){t.setUTCMonth(0,1),t.setUTCHours(0,0,0,0)}),(function(t,n){t.setUTCFullYear(t.getUTCFullYear()+n)}),(function(t,n){return n.getUTCFullYear()-t.getUTCFullYear()}),(function(t){return t.getUTCFullYear()}));Pd.every=function(t){return isFinite(t=Math.floor(t))&&t>0?Ch((function(n){n.setUTCFullYear(Math.floor(n.getUTCFullYear()/t)*t),n.setUTCMonth(0,1),n.setUTCHours(0,0,0,0)}),(function(n,e){n.setUTCFullYear(n.getUTCFullYear()+e*t)})):null};var zd=Pd.range;function Rd(t){if(0<=t.y&&t.y<100){var n=new Date(-1,t.m,t.d,t.H,t.M,t.S,t.L);return n.setFullYear(t.y),n}return new Date(t.y,t.m,t.d,t.H,t.M,t.S,t.L)}function Dd(t){if(0<=t.y&&t.y<100){var n=new Date(Date.UTC(-1,t.m,t.d,t.H,t.M,t.S,t.L));return n.setUTCFullYear(t.y),n}return new Date(Date.UTC(t.y,t.m,t.d,t.H,t.M,t.S,t.L))}function qd(t,n,e){return{y:t,m:n,d:e,H:0,M:0,S:0,L:0}}function Ld(t){var n=t.dateTime,e=t.date,r=t.time,i=t.periods,o=t.days,a=t.shortDays,u=t.months,c=t.shortMonths,f=jd(i),s=Xd(i),l=jd(o),h=Xd(o),d=jd(a),p=Xd(a),v=jd(u),g=Xd(u),y=jd(c),_=Xd(c),b={a:function(t){return a[t.getDay()]},A:function(t){return o[t.getDay()]},b:function(t){return c[t.getMonth()]},B:function(t){return u[t.getMonth()]},c:null,d:hp,e:hp,f:yp,H:dp,I:pp,j:vp,L:gp,m:_p,M:bp,p:function(t){return i[+(t.getHours()>=12)]},q:function(t){return 1+~~(t.getMonth()/3)},Q:Gp,s:$p,S:mp,u:xp,U:wp,V:Mp,w:Np,W:Tp,x:null,X:null,y:Ap,Y:Sp,Z:kp,"%":Vp},m={a:function(t){return a[t.getUTCDay()]},A:function(t){return o[t.getUTCDay()]},b:function(t){return c[t.getUTCMonth()]},B:function(t){return u[t.getUTCMonth()]},c:null,d:Ep,e:Ep,f:Dp,H:Cp,I:Pp,j:zp,L:Rp,m:qp,M:Lp,p:function(t){return i[+(t.getUTCHours()>=12)]},q:function(t){return 1+~~(t.getUTCMonth()/3)},Q:Gp,s:$p,S:Up,u:Op,U:Bp,V:Fp,w:Yp,W:Ip,x:null,X:null,y:Hp,Y:jp,Z:Xp,"%":Vp},x={a:function(t,n,e){var r=d.exec(n.slice(e));return r?(t.w=p[r[0].toLowerCase()],e+r[0].length):-1},A:function(t,n,e){var r=l.exec(n.slice(e));return r?(t.w=h[r[0].toLowerCase()],e+r[0].length):-1},b:function(t,n,e){var r=y.exec(n.slice(e));return r?(t.m=_[r[0].toLowerCase()],e+r[0].length):-1},B:function(t,n,e){var r=v.exec(n.slice(e));return r?(t.m=g[r[0].toLowerCase()],e+r[0].length):-1},c:function(t,e,r){return N(t,n,e,r)},d:ep,e:ep,f:cp,H:ip,I:ip,j:rp,L:up,m:np,M:op,p:function(t,n,e){var r=f.exec(n.slice(e));return r?(t.p=s[r[0].toLowerCase()],e+r[0].length):-1},q:tp,Q:sp,s:lp,S:ap,u:Gd,U:$d,V:Wd,w:Vd,W:Zd,x:function(t,n,r){return N(t,e,n,r)},X:function(t,n,e){return N(t,r,n,e)},y:Kd,Y:Qd,Z:Jd,"%":fp};function w(t,n){return function(e){var r,i,o,a=[],u=-1,c=0,f=t.length;for(e instanceof Date||(e=new Date(+e));++u<f;)37===t.charCodeAt(u)&&(a.push(t.slice(c,u)),null!=(i=Od[r=t.charAt(++u)])?r=t.charAt(++u):i="e"===r?" ":"0",(o=n[r])&&(r=o(e,i)),a.push(r),c=u+1);return a.push(t.slice(c,u)),a.join("")}}function M(t,n){return function(e){var r,i,o=qd(1900,void 0,1);if(N(o,t,e+="",0)!=e.length)return null;if("Q"in o)return new Date(o.Q);if("s"in o)return new Date(1e3*o.s+("L"in o?o.L:0));if(!n||"Z"in o||(o.Z=0),"p"in o&&(o.H=o.H%12+12*o.p),void 0===o.m&&(o.m="q"in o?o.q:0),"V"in o){if(o.V<1||o.V>53)return null;"w"in o||(o.w=1),"Z"in o?(i=(r=Dd(qd(o.y,0,1))).getUTCDay(),r=i>4||0===i?gd.ceil(r):gd(r),r=hd.offset(r,7*(o.V-1)),o.y=r.getUTCFullYear(),o.m=r.getUTCMonth(),o.d=r.getUTCDate()+(o.w+6)%7):(i=(r=Rd(qd(o.y,0,1))).getDay(),r=i>4||0===i?Xh.ceil(r):Xh(r),r=Yh.offset(r,7*(o.V-1)),o.y=r.getFullYear(),o.m=r.getMonth(),o.d=r.getDate()+(o.w+6)%7)}else("W"in o||"U"in o)&&("w"in o||(o.w="u"in o?o.u%7:"W"in o?1:0),i="Z"in o?Dd(qd(o.y,0,1)).getUTCDay():Rd(qd(o.y,0,1)).getDay(),o.m=0,o.d="W"in o?(o.w+6)%7+7*o.W-(i+5)%7:o.w+7*o.U-(i+6)%7);return"Z"in o?(o.H+=o.Z/100|0,o.M+=o.Z%100,Dd(o)):Rd(o)}}function N(t,n,e,r){for(var i,o,a=0,u=n.length,c=e.length;a<u;){if(r>=c)return-1;if(37===(i=n.charCodeAt(a++))){if(i=n.charAt(a++),!(o=x[i in Od?n.charAt(a++):i])||(r=o(t,e,r))<0)return-1}else if(i!=e.charCodeAt(r++))return-1}return r}return b.x=w(e,b),b.X=w(r,b),b.c=w(n,b),m.x=w(e,m),m.X=w(r,m),m.c=w(n,m),{format:function(t){var n=w(t+="",b);return n.toString=function(){return t},n},parse:function(t){var n=M(t+="",!1);return n.toString=function(){return t},n},utcFormat:function(t){var n=w(t+="",m);return n.toString=function(){return t},n},utcParse:function(t){var n=M(t+="",!0);return n.toString=function(){return t},n}}}var Ud,Od={"-":"",_:" ",0:"0"},Bd=/^\s*\d+/,Fd=/^%/,Yd=/[\\^$*+?|[\]().{}]/g;function Id(t,n,e){var r=t<0?"-":"",i=(r?-t:t)+"",o=i.length;return r+(o<e?new Array(e-o+1).join(n)+i:i)}function Hd(t){return t.replace(Yd,"\\$&")}function jd(t){return new RegExp("^(?:"+t.map(Hd).join("|")+")","i")}function Xd(t){for(var n={},e=-1,r=t.length;++e<r;)n[t[e].toLowerCase()]=e;return n}function Vd(t,n,e){var r=Bd.exec(n.slice(e,e+1));return r?(t.w=+r[0],e+r[0].length):-1}function Gd(t,n,e){var r=Bd.exec(n.slice(e,e+1));return r?(t.u=+r[0],e+r[0].length):-1}function $d(t,n,e){var r=Bd.exec(n.slice(e,e+2));return r?(t.U=+r[0],e+r[0].length):-1}function Wd(t,n,e){var r=Bd.exec(n.slice(e,e+2));return r?(t.V=+r[0],e+r[0].length):-1}function Zd(t,n,e){var r=Bd.exec(n.slice(e,e+2));return r?(t.W=+r[0],e+r[0].length):-1}function Qd(t,n,e){var r=Bd.exec(n.slice(e,e+4));return r?(t.y=+r[0],e+r[0].length):-1}function Kd(t,n,e){var r=Bd.exec(n.slice(e,e+2));return r?(t.y=+r[0]+(+r[0]>68?1900:2e3),e+r[0].length):-1}function Jd(t,n,e){var r=/^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(n.slice(e,e+6));return r?(t.Z=r[1]?0:-(r[2]+(r[3]||"00")),e+r[0].length):-1}function tp(t,n,e){var r=Bd.exec(n.slice(e,e+1));return r?(t.q=3*r[0]-3,e+r[0].length):-1}function np(t,n,e){var r=Bd.exec(n.slice(e,e+2));return r?(t.m=r[0]-1,e+r[0].length):-1}function ep(t,n,e){var r=Bd.exec(n.slice(e,e+2));return r?(t.d=+r[0],e+r[0].length):-1}function rp(t,n,e){var r=Bd.exec(n.slice(e,e+3));return r?(t.m=0,t.d=+r[0],e+r[0].length):-1}function ip(t,n,e){var r=Bd.exec(n.slice(e,e+2));return r?(t.H=+r[0],e+r[0].length):-1}function op(t,n,e){var r=Bd.exec(n.slice(e,e+2));return r?(t.M=+r[0],e+r[0].length):-1}function ap(t,n,e){var r=Bd.exec(n.slice(e,e+2));return r?(t.S=+r[0],e+r[0].length):-1}function up(t,n,e){var r=Bd.exec(n.slice(e,e+3));return r?(t.L=+r[0],e+r[0].length):-1}function cp(t,n,e){var r=Bd.exec(n.slice(e,e+6));return r?(t.L=Math.floor(r[0]/1e3),e+r[0].length):-1}function fp(t,n,e){var r=Fd.exec(n.slice(e,e+1));return r?e+r[0].length:-1}function sp(t,n,e){var r=Bd.exec(n.slice(e));return r?(t.Q=+r[0],e+r[0].length):-1}function lp(t,n,e){var r=Bd.exec(n.slice(e));return r?(t.s=+r[0],e+r[0].length):-1}function hp(t,n){return Id(t.getDate(),n,2)}function dp(t,n){return Id(t.getHours(),n,2)}function pp(t,n){return Id(t.getHours()%12||12,n,2)}function vp(t,n){return Id(1+Yh.count(ad(t),t),n,3)}function gp(t,n){return Id(t.getMilliseconds(),n,3)}function yp(t,n){return gp(t,n)+"000"}function _p(t,n){return Id(t.getMonth()+1,n,2)}function bp(t,n){return Id(t.getMinutes(),n,2)}function mp(t,n){return Id(t.getSeconds(),n,2)}function xp(t){var n=t.getDay();return 0===n?7:n}function wp(t,n){return Id(jh.count(ad(t)-1,t),n,2)}function Mp(t,n){var e=t.getDay();return t=e>=4||0===e?$h(t):$h.ceil(t),Id($h.count(ad(t),t)+(4===ad(t).getDay()),n,2)}function Np(t){return t.getDay()}function Tp(t,n){return Id(Xh.count(ad(t)-1,t),n,2)}function Ap(t,n){return Id(t.getFullYear()%100,n,2)}function Sp(t,n){return Id(t.getFullYear()%1e4,n,4)}function kp(t){var n=t.getTimezoneOffset();return(n>0?"-":(n*=-1,"+"))+Id(n/60|0,"0",2)+Id(n%60,"0",2)}function Ep(t,n){return Id(t.getUTCDate(),n,2)}function Cp(t,n){return Id(t.getUTCHours(),n,2)}function Pp(t,n){return Id(t.getUTCHours()%12||12,n,2)}function zp(t,n){return Id(1+hd.count(Pd(t),t),n,3)}function Rp(t,n){return Id(t.getUTCMilliseconds(),n,3)}function Dp(t,n){return Rp(t,n)+"000"}function qp(t,n){return Id(t.getUTCMonth()+1,n,2)}function Lp(t,n){return Id(t.getUTCMinutes(),n,2)}function Up(t,n){return Id(t.getUTCSeconds(),n,2)}function Op(t){var n=t.getUTCDay();return 0===n?7:n}function Bp(t,n){return Id(vd.count(Pd(t)-1,t),n,2)}function Fp(t,n){var e=t.getUTCDay();return t=e>=4||0===e?bd(t):bd.ceil(t),Id(bd.count(Pd(t),t)+(4===Pd(t).getUTCDay()),n,2)}function Yp(t){return t.getUTCDay()}function Ip(t,n){return Id(gd.count(Pd(t)-1,t),n,2)}function Hp(t,n){return Id(t.getUTCFullYear()%100,n,2)}function jp(t,n){return Id(t.getUTCFullYear()%1e4,n,4)}function Xp(){return"+0000"}function Vp(){return"%"}function Gp(t){return+t}function $p(t){return Math.floor(+t/1e3)}function Wp(n){return Ud=Ld(n),t.timeFormat=Ud.format,t.timeParse=Ud.parse,t.utcFormat=Ud.utcFormat,t.utcParse=Ud.utcParse,Ud}Wp({dateTime:"%x, %X",date:"%-m/%-d/%Y",time:"%-I:%M:%S %p",periods:["AM","PM"],days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],shortDays:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],shortMonths:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]});var Zp=Date.prototype.toISOString?function(t){return t.toISOString()}:t.utcFormat("%Y-%m-%dT%H:%M:%S.%LZ"),Qp=+new Date("2000-01-01T00:00:00.000Z")?function(t){var n=new Date(t);return isNaN(n)?null:n}:t.utcParse("%Y-%m-%dT%H:%M:%S.%LZ"),Kp=1e3,Jp=6e4,tv=60*Jp,nv=24*tv,ev=30*nv,rv=365*nv;function iv(t){return new Date(t)}function ov(t){return t instanceof Date?+t:+new Date(+t)}function av(t,n,r,i,o,a,u,c,f){var s=fh(eh,eh),l=s.invert,h=s.domain,d=f(".%L"),p=f(":%S"),v=f("%I:%M"),g=f("%I %p"),y=f("%a %d"),_=f("%b %d"),b=f("%B"),m=f("%Y"),x=[[u,1,Kp],[u,5,5e3],[u,15,15e3],[u,30,3e4],[a,1,Jp],[a,5,5*Jp],[a,15,15*Jp],[a,30,30*Jp],[o,1,tv],[o,3,3*tv],[o,6,6*tv],[o,12,12*tv],[i,1,nv],[i,2,2*nv],[r,1,6048e5],[n,1,ev],[n,3,3*ev],[t,1,rv]];function M(e){return(u(e)<e?d:a(e)<e?p:o(e)<e?v:i(e)<e?g:n(e)<e?r(e)<e?y:_:t(e)<e?b:m)(e)}function N(n,r,i,o){if(null==n&&(n=10),"number"==typeof n){var a=Math.abs(i-r)/n,u=e((function(t){return t[2]})).right(x,a);u===x.length?(o=w(r/rv,i/rv,n),n=t):u?(o=(u=x[a/x[u-1][2]<x[u][2]/a?u-1:u])[1],n=u[0]):(o=Math.max(w(r,i,n),1),n=c)}return null==o?n:n.every(o)}return s.invert=function(t){return new Date(l(t))},s.domain=function(t){return arguments.length?h(Wl.call(t,ov)):h().map(iv)},s.ticks=function(t,n){var e,r=h(),i=r[0],o=r[r.length-1],a=o<i;return a&&(e=i,i=o,o=e),e=(e=N(t,i,o,n))?e.range(i,o+1):[],a?e.reverse():e},s.tickFormat=function(t,n){return null==n?M:f(n)},s.nice=function(t,n){var e=h();return(t=N(t,e[0],e[e.length-1],n))?h(hh(e,t)):s},s.copy=function(){return uh(s,av(t,n,r,i,o,a,u,c,f))},s}function uv(){var t,n,e,r,i,o=0,a=1,u=eh,c=!1;function f(n){return isNaN(n=+n)?i:u(0===e?.5:(n=(r(n)-t)*e,c?Math.max(0,Math.min(1,n)):n))}return f.domain=function(i){return arguments.length?(t=r(o=+i[0]),n=r(a=+i[1]),e=t===n?0:1/(n-t),f):[o,a]},f.clamp=function(t){return arguments.length?(c=!!t,f):c},f.interpolator=function(t){return arguments.length?(u=t,f):u},f.unknown=function(t){return arguments.length?(i=t,f):i},function(i){return r=i,t=i(o),n=i(a),e=t===n?0:1/(n-t),f}}function cv(t,n){return n.domain(t.domain()).interpolator(t.interpolator()).clamp(t.clamp()).unknown(t.unknown())}function fv(){var t=Ah(uv());return t.copy=function(){return cv(t,fv()).exponent(t.exponent())},Gl.apply(t,arguments)}function sv(){var t,n,e,r,i,o,a,u=0,c=.5,f=1,s=eh,l=!1;function h(t){return isNaN(t=+t)?a:(t=.5+((t=+o(t))-n)*(t<n?r:i),s(l?Math.max(0,Math.min(1,t)):t))}return h.domain=function(a){return arguments.length?(t=o(u=+a[0]),n=o(c=+a[1]),e=o(f=+a[2]),r=t===n?0:.5/(n-t),i=n===e?0:.5/(e-n),h):[u,c,f]},h.clamp=function(t){return arguments.length?(l=!!t,h):l},h.interpolator=function(t){return arguments.length?(s=t,h):s},h.unknown=function(t){return arguments.length?(a=t,h):a},function(a){return o=a,t=a(u),n=a(c),e=a(f),r=t===n?0:.5/(n-t),i=n===e?0:.5/(e-n),h}}function lv(){var t=Ah(sv());return t.copy=function(){return cv(t,lv()).exponent(t.exponent())},Gl.apply(t,arguments)}function hv(t){for(var n=t.length/6|0,e=new Array(n),r=0;r<n;)e[r]="#"+t.slice(6*r,6*++r);return e}var dv=hv("1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf"),pv=hv("7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666"),vv=hv("1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666"),gv=hv("a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928"),yv=hv("fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2"),_v=hv("b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc"),bv=hv("e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999"),mv=hv("66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3"),xv=hv("8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f"),wv=hv("4e79a7f28e2ce1575976b7b259a14fedc949af7aa1ff9da79c755fbab0ab");function Mv(t){return re(t[t.length-1])}var Nv=new Array(3).concat("d8b365f5f5f55ab4ac","a6611adfc27d80cdc1018571","a6611adfc27df5f5f580cdc1018571","8c510ad8b365f6e8c3c7eae55ab4ac01665e","8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e","8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e","8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e","5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30","5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30").map(hv),Tv=Mv(Nv),Av=new Array(3).concat("af8dc3f7f7f77fbf7b","7b3294c2a5cfa6dba0008837","7b3294c2a5cff7f7f7a6dba0008837","762a83af8dc3e7d4e8d9f0d37fbf7b1b7837","762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837","762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837","762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837","40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b","40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b").map(hv),Sv=Mv(Av),kv=new Array(3).concat("e9a3c9f7f7f7a1d76a","d01c8bf1b6dab8e1864dac26","d01c8bf1b6daf7f7f7b8e1864dac26","c51b7de9a3c9fde0efe6f5d0a1d76a4d9221","c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221","c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221","c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221","8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419","8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419").map(hv),Ev=Mv(kv),Cv=new Array(3).concat("998ec3f7f7f7f1a340","5e3c99b2abd2fdb863e66101","5e3c99b2abd2f7f7f7fdb863e66101","542788998ec3d8daebfee0b6f1a340b35806","542788998ec3d8daebf7f7f7fee0b6f1a340b35806","5427888073acb2abd2d8daebfee0b6fdb863e08214b35806","5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806","2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08","2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08").map(hv),Pv=Mv(Cv),zv=new Array(3).concat("ef8a62f7f7f767a9cf","ca0020f4a58292c5de0571b0","ca0020f4a582f7f7f792c5de0571b0","b2182bef8a62fddbc7d1e5f067a9cf2166ac","b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac","b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac","b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac","67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061","67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061").map(hv),Rv=Mv(zv),Dv=new Array(3).concat("ef8a62ffffff999999","ca0020f4a582bababa404040","ca0020f4a582ffffffbababa404040","b2182bef8a62fddbc7e0e0e09999994d4d4d","b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d","b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d","b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d","67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a","67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a").map(hv),qv=Mv(Dv),Lv=new Array(3).concat("fc8d59ffffbf91bfdb","d7191cfdae61abd9e92c7bb6","d7191cfdae61ffffbfabd9e92c7bb6","d73027fc8d59fee090e0f3f891bfdb4575b4","d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4","d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4","d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4","a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695","a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695").map(hv),Uv=Mv(Lv),Ov=new Array(3).concat("fc8d59ffffbf91cf60","d7191cfdae61a6d96a1a9641","d7191cfdae61ffffbfa6d96a1a9641","d73027fc8d59fee08bd9ef8b91cf601a9850","d73027fc8d59fee08bffffbfd9ef8b91cf601a9850","d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850","d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850","a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837","a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837").map(hv),Bv=Mv(Ov),Fv=new Array(3).concat("fc8d59ffffbf99d594","d7191cfdae61abdda42b83ba","d7191cfdae61ffffbfabdda42b83ba","d53e4ffc8d59fee08be6f59899d5943288bd","d53e4ffc8d59fee08bffffbfe6f59899d5943288bd","d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd","d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd","9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2","9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2").map(hv),Yv=Mv(Fv),Iv=new Array(3).concat("e5f5f999d8c92ca25f","edf8fbb2e2e266c2a4238b45","edf8fbb2e2e266c2a42ca25f006d2c","edf8fbccece699d8c966c2a42ca25f006d2c","edf8fbccece699d8c966c2a441ae76238b45005824","f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824","f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b").map(hv),Hv=Mv(Iv),jv=new Array(3).concat("e0ecf49ebcda8856a7","edf8fbb3cde38c96c688419d","edf8fbb3cde38c96c68856a7810f7c","edf8fbbfd3e69ebcda8c96c68856a7810f7c","edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b","f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b","f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b").map(hv),Xv=Mv(jv),Vv=new Array(3).concat("e0f3dba8ddb543a2ca","f0f9e8bae4bc7bccc42b8cbe","f0f9e8bae4bc7bccc443a2ca0868ac","f0f9e8ccebc5a8ddb57bccc443a2ca0868ac","f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e","f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e","f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081").map(hv),Gv=Mv(Vv),$v=new Array(3).concat("fee8c8fdbb84e34a33","fef0d9fdcc8afc8d59d7301f","fef0d9fdcc8afc8d59e34a33b30000","fef0d9fdd49efdbb84fc8d59e34a33b30000","fef0d9fdd49efdbb84fc8d59ef6548d7301f990000","fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000","fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000").map(hv),Wv=Mv($v),Zv=new Array(3).concat("ece2f0a6bddb1c9099","f6eff7bdc9e167a9cf02818a","f6eff7bdc9e167a9cf1c9099016c59","f6eff7d0d1e6a6bddb67a9cf1c9099016c59","f6eff7d0d1e6a6bddb67a9cf3690c002818a016450","fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450","fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636").map(hv),Qv=Mv(Zv),Kv=new Array(3).concat("ece7f2a6bddb2b8cbe","f1eef6bdc9e174a9cf0570b0","f1eef6bdc9e174a9cf2b8cbe045a8d","f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d","f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b","fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b","fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858").map(hv),Jv=Mv(Kv),tg=new Array(3).concat("e7e1efc994c7dd1c77","f1eef6d7b5d8df65b0ce1256","f1eef6d7b5d8df65b0dd1c77980043","f1eef6d4b9dac994c7df65b0dd1c77980043","f1eef6d4b9dac994c7df65b0e7298ace125691003f","f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f","f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f").map(hv),ng=Mv(tg),eg=new Array(3).concat("fde0ddfa9fb5c51b8a","feebe2fbb4b9f768a1ae017e","feebe2fbb4b9f768a1c51b8a7a0177","feebe2fcc5c0fa9fb5f768a1c51b8a7a0177","feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177","fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177","fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a").map(hv),rg=Mv(eg),ig=new Array(3).concat("edf8b17fcdbb2c7fb8","ffffcca1dab441b6c4225ea8","ffffcca1dab441b6c42c7fb8253494","ffffccc7e9b47fcdbb41b6c42c7fb8253494","ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84","ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84","ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58").map(hv),og=Mv(ig),ag=new Array(3).concat("f7fcb9addd8e31a354","ffffccc2e69978c679238443","ffffccc2e69978c67931a354006837","ffffccd9f0a3addd8e78c67931a354006837","ffffccd9f0a3addd8e78c67941ab5d238443005a32","ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32","ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529").map(hv),ug=Mv(ag),cg=new Array(3).concat("fff7bcfec44fd95f0e","ffffd4fed98efe9929cc4c02","ffffd4fed98efe9929d95f0e993404","ffffd4fee391fec44ffe9929d95f0e993404","ffffd4fee391fec44ffe9929ec7014cc4c028c2d04","ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04","ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506").map(hv),fg=Mv(cg),sg=new Array(3).concat("ffeda0feb24cf03b20","ffffb2fecc5cfd8d3ce31a1c","ffffb2fecc5cfd8d3cf03b20bd0026","ffffb2fed976feb24cfd8d3cf03b20bd0026","ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026","ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026","ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026").map(hv),lg=Mv(sg),hg=new Array(3).concat("deebf79ecae13182bd","eff3ffbdd7e76baed62171b5","eff3ffbdd7e76baed63182bd08519c","eff3ffc6dbef9ecae16baed63182bd08519c","eff3ffc6dbef9ecae16baed64292c62171b5084594","f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594","f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b").map(hv),dg=Mv(hg),pg=new Array(3).concat("e5f5e0a1d99b31a354","edf8e9bae4b374c476238b45","edf8e9bae4b374c47631a354006d2c","edf8e9c7e9c0a1d99b74c47631a354006d2c","edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32","f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32","f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b").map(hv),vg=Mv(pg),gg=new Array(3).concat("f0f0f0bdbdbd636363","f7f7f7cccccc969696525252","f7f7f7cccccc969696636363252525","f7f7f7d9d9d9bdbdbd969696636363252525","f7f7f7d9d9d9bdbdbd969696737373525252252525","fffffff0f0f0d9d9d9bdbdbd969696737373525252252525","fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000").map(hv),yg=Mv(gg),_g=new Array(3).concat("efedf5bcbddc756bb1","f2f0f7cbc9e29e9ac86a51a3","f2f0f7cbc9e29e9ac8756bb154278f","f2f0f7dadaebbcbddc9e9ac8756bb154278f","f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486","fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486","fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d").map(hv),bg=Mv(_g),mg=new Array(3).concat("fee0d2fc9272de2d26","fee5d9fcae91fb6a4acb181d","fee5d9fcae91fb6a4ade2d26a50f15","fee5d9fcbba1fc9272fb6a4ade2d26a50f15","fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d","fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d","fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d").map(hv),xg=Mv(mg),wg=new Array(3).concat("fee6cefdae6be6550d","feeddefdbe85fd8d3cd94701","feeddefdbe85fd8d3ce6550da63603","feeddefdd0a2fdae6bfd8d3ce6550da63603","feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04","fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04","fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704").map(hv),Mg=Mv(wg),Ng=Be(Vn(300,.5,0),Vn(-240,.5,1)),Tg=Be(Vn(-100,.75,.35),Vn(80,1.5,.8)),Ag=Be(Vn(260,.75,.35),Vn(80,1.5,.8)),Sg=Vn(),kg=dn(),Eg=Math.PI/3,Cg=2*Math.PI/3;function Pg(t){var n=t.length;return function(e){return t[Math.max(0,Math.min(n-1,Math.floor(e*n)))]}}var zg=Pg(hv("44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725")),Rg=Pg(hv("00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf")),Dg=Pg(hv("00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4")),qg=Pg(hv("0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921"));function Lg(t){return function(){return t}}var Ug=Math.abs,Og=Math.atan2,Bg=Math.cos,Fg=Math.max,Yg=Math.min,Ig=Math.sin,Hg=Math.sqrt,jg=1e-12,Xg=Math.PI,Vg=Xg/2,Gg=2*Xg;function $g(t){return t>=1?Vg:t<=-1?-Vg:Math.asin(t)}function Wg(t){return t.innerRadius}function Zg(t){return t.outerRadius}function Qg(t){return t.startAngle}function Kg(t){return t.endAngle}function Jg(t){return t&&t.padAngle}function ty(t,n,e,r,i,o,a){var u=t-e,c=n-r,f=(a?o:-o)/Hg(u*u+c*c),s=f*c,l=-f*u,h=t+s,d=n+l,p=e+s,v=r+l,g=(h+p)/2,y=(d+v)/2,_=p-h,b=v-d,m=_*_+b*b,x=i-o,w=h*v-p*d,M=(b<0?-1:1)*Hg(Fg(0,x*x*m-w*w)),N=(w*b-_*M)/m,T=(-w*_-b*M)/m,A=(w*b+_*M)/m,S=(-w*_+b*M)/m,k=N-g,E=T-y,C=A-g,P=S-y;return k*k+E*E>C*C+P*P&&(N=A,T=S),{cx:N,cy:T,x01:-s,y01:-l,x11:N*(i/x-1),y11:T*(i/x-1)}}function ny(t){this._context=t}function ey(t){return new ny(t)}function ry(t){return t[0]}function iy(t){return t[1]}function oy(){var t=ry,n=iy,e=Lg(!0),r=null,i=ey,o=null;function a(a){var u,c,f,s=a.length,l=!1;for(null==r&&(o=i(f=Ti())),u=0;u<=s;++u)!(u<s&&e(c=a[u],u,a))===l&&((l=!l)?o.lineStart():o.lineEnd()),l&&o.point(+t(c,u,a),+n(c,u,a));if(f)return o=null,f+""||null}return a.x=function(n){return arguments.length?(t="function"==typeof n?n:Lg(+n),a):t},a.y=function(t){return arguments.length?(n="function"==typeof t?t:Lg(+t),a):n},a.defined=function(t){return arguments.length?(e="function"==typeof t?t:Lg(!!t),a):e},a.curve=function(t){return arguments.length?(i=t,null!=r&&(o=i(r)),a):i},a.context=function(t){return arguments.length?(null==t?r=o=null:o=i(r=t),a):r},a}function ay(){var t=ry,n=null,e=Lg(0),r=iy,i=Lg(!0),o=null,a=ey,u=null;function c(c){var f,s,l,h,d,p=c.length,v=!1,g=new Array(p),y=new Array(p);for(null==o&&(u=a(d=Ti())),f=0;f<=p;++f){if(!(f<p&&i(h=c[f],f,c))===v)if(v=!v)s=f,u.areaStart(),u.lineStart();else{for(u.lineEnd(),u.lineStart(),l=f-1;l>=s;--l)u.point(g[l],y[l]);u.lineEnd(),u.areaEnd()}v&&(g[f]=+t(h,f,c),y[f]=+e(h,f,c),u.point(n?+n(h,f,c):g[f],r?+r(h,f,c):y[f]))}if(d)return u=null,d+""||null}function f(){return oy().defined(i).curve(a).context(o)}return c.x=function(e){return arguments.length?(t="function"==typeof e?e:Lg(+e),n=null,c):t},c.x0=function(n){return arguments.length?(t="function"==typeof n?n:Lg(+n),c):t},c.x1=function(t){return arguments.length?(n=null==t?null:"function"==typeof t?t:Lg(+t),c):n},c.y=function(t){return arguments.length?(e="function"==typeof t?t:Lg(+t),r=null,c):e},c.y0=function(t){return arguments.length?(e="function"==typeof t?t:Lg(+t),c):e},c.y1=function(t){return arguments.length?(r=null==t?null:"function"==typeof t?t:Lg(+t),c):r},c.lineX0=c.lineY0=function(){return f().x(t).y(e)},c.lineY1=function(){return f().x(t).y(r)},c.lineX1=function(){return f().x(n).y(e)},c.defined=function(t){return arguments.length?(i="function"==typeof t?t:Lg(!!t),c):i},c.curve=function(t){return arguments.length?(a=t,null!=o&&(u=a(o)),c):a},c.context=function(t){return arguments.length?(null==t?o=u=null:u=a(o=t),c):o},c}function uy(t,n){return n<t?-1:n>t?1:n>=t?0:NaN}function cy(t){return t}ny.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;default:this._context.lineTo(t,n)}}};var fy=ly(ey);function sy(t){this._curve=t}function ly(t){function n(n){return new sy(t(n))}return n._curve=t,n}function hy(t){var n=t.curve;return t.angle=t.x,delete t.x,t.radius=t.y,delete t.y,t.curve=function(t){return arguments.length?n(ly(t)):n()._curve},t}function dy(){return hy(oy().curve(fy))}function py(){var t=ay().curve(fy),n=t.curve,e=t.lineX0,r=t.lineX1,i=t.lineY0,o=t.lineY1;return t.angle=t.x,delete t.x,t.startAngle=t.x0,delete t.x0,t.endAngle=t.x1,delete t.x1,t.radius=t.y,delete t.y,t.innerRadius=t.y0,delete t.y0,t.outerRadius=t.y1,delete t.y1,t.lineStartAngle=function(){return hy(e())},delete t.lineX0,t.lineEndAngle=function(){return hy(r())},delete t.lineX1,t.lineInnerRadius=function(){return hy(i())},delete t.lineY0,t.lineOuterRadius=function(){return hy(o())},delete t.lineY1,t.curve=function(t){return arguments.length?n(ly(t)):n()._curve},t}function vy(t,n){return[(n=+n)*Math.cos(t-=Math.PI/2),n*Math.sin(t)]}sy.prototype={areaStart:function(){this._curve.areaStart()},areaEnd:function(){this._curve.areaEnd()},lineStart:function(){this._curve.lineStart()},lineEnd:function(){this._curve.lineEnd()},point:function(t,n){this._curve.point(n*Math.sin(t),n*-Math.cos(t))}};var gy=Array.prototype.slice;function yy(t){return t.source}function _y(t){return t.target}function by(t){var n=yy,e=_y,r=ry,i=iy,o=null;function a(){var a,u=gy.call(arguments),c=n.apply(this,u),f=e.apply(this,u);if(o||(o=a=Ti()),t(o,+r.apply(this,(u[0]=c,u)),+i.apply(this,u),+r.apply(this,(u[0]=f,u)),+i.apply(this,u)),a)return o=null,a+""||null}return a.source=function(t){return arguments.length?(n=t,a):n},a.target=function(t){return arguments.length?(e=t,a):e},a.x=function(t){return arguments.length?(r="function"==typeof t?t:Lg(+t),a):r},a.y=function(t){return arguments.length?(i="function"==typeof t?t:Lg(+t),a):i},a.context=function(t){return arguments.length?(o=null==t?null:t,a):o},a}function my(t,n,e,r,i){t.moveTo(n,e),t.bezierCurveTo(n=(n+r)/2,e,n,i,r,i)}function xy(t,n,e,r,i){t.moveTo(n,e),t.bezierCurveTo(n,e=(e+i)/2,r,e,r,i)}function wy(t,n,e,r,i){var o=vy(n,e),a=vy(n,e=(e+i)/2),u=vy(r,e),c=vy(r,i);t.moveTo(o[0],o[1]),t.bezierCurveTo(a[0],a[1],u[0],u[1],c[0],c[1])}var My={draw:function(t,n){var e=Math.sqrt(n/Xg);t.moveTo(e,0),t.arc(0,0,e,0,Gg)}},Ny={draw:function(t,n){var e=Math.sqrt(n/5)/2;t.moveTo(-3*e,-e),t.lineTo(-e,-e),t.lineTo(-e,-3*e),t.lineTo(e,-3*e),t.lineTo(e,-e),t.lineTo(3*e,-e),t.lineTo(3*e,e),t.lineTo(e,e),t.lineTo(e,3*e),t.lineTo(-e,3*e),t.lineTo(-e,e),t.lineTo(-3*e,e),t.closePath()}},Ty=Math.sqrt(1/3),Ay=2*Ty,Sy={draw:function(t,n){var e=Math.sqrt(n/Ay),r=e*Ty;t.moveTo(0,-e),t.lineTo(r,0),t.lineTo(0,e),t.lineTo(-r,0),t.closePath()}},ky=Math.sin(Xg/10)/Math.sin(7*Xg/10),Ey=Math.sin(Gg/10)*ky,Cy=-Math.cos(Gg/10)*ky,Py={draw:function(t,n){var e=Math.sqrt(.8908130915292852*n),r=Ey*e,i=Cy*e;t.moveTo(0,-e),t.lineTo(r,i);for(var o=1;o<5;++o){var a=Gg*o/5,u=Math.cos(a),c=Math.sin(a);t.lineTo(c*e,-u*e),t.lineTo(u*r-c*i,c*r+u*i)}t.closePath()}},zy={draw:function(t,n){var e=Math.sqrt(n),r=-e/2;t.rect(r,r,e,e)}},Ry=Math.sqrt(3),Dy={draw:function(t,n){var e=-Math.sqrt(n/(3*Ry));t.moveTo(0,2*e),t.lineTo(-Ry*e,-e),t.lineTo(Ry*e,-e),t.closePath()}},qy=Math.sqrt(3)/2,Ly=1/Math.sqrt(12),Uy=3*(Ly/2+1),Oy={draw:function(t,n){var e=Math.sqrt(n/Uy),r=e/2,i=e*Ly,o=r,a=e*Ly+e,u=-o,c=a;t.moveTo(r,i),t.lineTo(o,a),t.lineTo(u,c),t.lineTo(-.5*r-qy*i,qy*r+-.5*i),t.lineTo(-.5*o-qy*a,qy*o+-.5*a),t.lineTo(-.5*u-qy*c,qy*u+-.5*c),t.lineTo(-.5*r+qy*i,-.5*i-qy*r),t.lineTo(-.5*o+qy*a,-.5*a-qy*o),t.lineTo(-.5*u+qy*c,-.5*c-qy*u),t.closePath()}},By=[My,Ny,Sy,zy,Py,Dy,Oy];function Fy(){}function Yy(t,n,e){t._context.bezierCurveTo((2*t._x0+t._x1)/3,(2*t._y0+t._y1)/3,(t._x0+2*t._x1)/3,(t._y0+2*t._y1)/3,(t._x0+4*t._x1+n)/6,(t._y0+4*t._y1+e)/6)}function Iy(t){this._context=t}function Hy(t){this._context=t}function jy(t){this._context=t}function Xy(t,n){this._basis=new Iy(t),this._beta=n}Iy.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=NaN,this._point=0},lineEnd:function(){switch(this._point){case 3:Yy(this,this._x1,this._y1);case 2:this._context.lineTo(this._x1,this._y1)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;break;case 2:this._point=3,this._context.lineTo((5*this._x0+this._x1)/6,(5*this._y0+this._y1)/6);default:Yy(this,t,n)}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=n}},Hy.prototype={areaStart:Fy,areaEnd:Fy,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._y0=this._y1=this._y2=this._y3=this._y4=NaN,this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x2,this._y2),this._context.closePath();break;case 2:this._context.moveTo((this._x2+2*this._x3)/3,(this._y2+2*this._y3)/3),this._context.lineTo((this._x3+2*this._x2)/3,(this._y3+2*this._y2)/3),this._context.closePath();break;case 3:this.point(this._x2,this._y2),this.point(this._x3,this._y3),this.point(this._x4,this._y4)}},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._x2=t,this._y2=n;break;case 1:this._point=2,this._x3=t,this._y3=n;break;case 2:this._point=3,this._x4=t,this._y4=n,this._context.moveTo((this._x0+4*this._x1+t)/6,(this._y0+4*this._y1+n)/6);break;default:Yy(this,t,n)}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=n}},jy.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=NaN,this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3;var e=(this._x0+4*this._x1+t)/6,r=(this._y0+4*this._y1+n)/6;this._line?this._context.lineTo(e,r):this._context.moveTo(e,r);break;case 3:this._point=4;default:Yy(this,t,n)}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=n}},Xy.prototype={lineStart:function(){this._x=[],this._y=[],this._basis.lineStart()},lineEnd:function(){var t=this._x,n=this._y,e=t.length-1;if(e>0)for(var r,i=t[0],o=n[0],a=t[e]-i,u=n[e]-o,c=-1;++c<=e;)r=c/e,this._basis.point(this._beta*t[c]+(1-this._beta)*(i+r*a),this._beta*n[c]+(1-this._beta)*(o+r*u));this._x=this._y=null,this._basis.lineEnd()},point:function(t,n){this._x.push(+t),this._y.push(+n)}};var Vy=function t(n){function e(t){return 1===n?new Iy(t):new Xy(t,n)}return e.beta=function(n){return t(+n)},e}(.85);function Gy(t,n,e){t._context.bezierCurveTo(t._x1+t._k*(t._x2-t._x0),t._y1+t._k*(t._y2-t._y0),t._x2+t._k*(t._x1-n),t._y2+t._k*(t._y1-e),t._x2,t._y2)}function $y(t,n){this._context=t,this._k=(1-n)/6}$y.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x2,this._y2);break;case 3:Gy(this,this._x1,this._y1)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2,this._x1=t,this._y1=n;break;case 2:this._point=3;default:Gy(this,t,n)}this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var Wy=function t(n){function e(t){return new $y(t,n)}return e.tension=function(n){return t(+n)},e}(0);function Zy(t,n){this._context=t,this._k=(1-n)/6}Zy.prototype={areaStart:Fy,areaEnd:Fy,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._x5=this._y0=this._y1=this._y2=this._y3=this._y4=this._y5=NaN,this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x3,this._y3),this._context.closePath();break;case 2:this._context.lineTo(this._x3,this._y3),this._context.closePath();break;case 3:this.point(this._x3,this._y3),this.point(this._x4,this._y4),this.point(this._x5,this._y5)}},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._x3=t,this._y3=n;break;case 1:this._point=2,this._context.moveTo(this._x4=t,this._y4=n);break;case 2:this._point=3,this._x5=t,this._y5=n;break;default:Gy(this,t,n)}this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var Qy=function t(n){function e(t){return new Zy(t,n)}return e.tension=function(n){return t(+n)},e}(0);function Ky(t,n){this._context=t,this._k=(1-n)/6}Ky.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3,this._line?this._context.lineTo(this._x2,this._y2):this._context.moveTo(this._x2,this._y2);break;case 3:this._point=4;default:Gy(this,t,n)}this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var Jy=function t(n){function e(t){return new Ky(t,n)}return e.tension=function(n){return t(+n)},e}(0);function t_(t,n,e){var r=t._x1,i=t._y1,o=t._x2,a=t._y2;if(t._l01_a>jg){var u=2*t._l01_2a+3*t._l01_a*t._l12_a+t._l12_2a,c=3*t._l01_a*(t._l01_a+t._l12_a);r=(r*u-t._x0*t._l12_2a+t._x2*t._l01_2a)/c,i=(i*u-t._y0*t._l12_2a+t._y2*t._l01_2a)/c}if(t._l23_a>jg){var f=2*t._l23_2a+3*t._l23_a*t._l12_a+t._l12_2a,s=3*t._l23_a*(t._l23_a+t._l12_a);o=(o*f+t._x1*t._l23_2a-n*t._l12_2a)/s,a=(a*f+t._y1*t._l23_2a-e*t._l12_2a)/s}t._context.bezierCurveTo(r,i,o,a,t._x2,t._y2)}function n_(t,n){this._context=t,this._alpha=n}n_.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x2,this._y2);break;case 3:this.point(this._x2,this._y2)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){if(t=+t,n=+n,this._point){var e=this._x2-t,r=this._y2-n;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(e*e+r*r,this._alpha))}switch(this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;break;case 2:this._point=3;default:t_(this,t,n)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var e_=function t(n){function e(t){return n?new n_(t,n):new $y(t,0)}return e.alpha=function(n){return t(+n)},e}(.5);function r_(t,n){this._context=t,this._alpha=n}r_.prototype={areaStart:Fy,areaEnd:Fy,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._x5=this._y0=this._y1=this._y2=this._y3=this._y4=this._y5=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x3,this._y3),this._context.closePath();break;case 2:this._context.lineTo(this._x3,this._y3),this._context.closePath();break;case 3:this.point(this._x3,this._y3),this.point(this._x4,this._y4),this.point(this._x5,this._y5)}},point:function(t,n){if(t=+t,n=+n,this._point){var e=this._x2-t,r=this._y2-n;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(e*e+r*r,this._alpha))}switch(this._point){case 0:this._point=1,this._x3=t,this._y3=n;break;case 1:this._point=2,this._context.moveTo(this._x4=t,this._y4=n);break;case 2:this._point=3,this._x5=t,this._y5=n;break;default:t_(this,t,n)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var i_=function t(n){function e(t){return n?new r_(t,n):new Zy(t,0)}return e.alpha=function(n){return t(+n)},e}(.5);function o_(t,n){this._context=t,this._alpha=n}o_.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){if(t=+t,n=+n,this._point){var e=this._x2-t,r=this._y2-n;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(e*e+r*r,this._alpha))}switch(this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3,this._line?this._context.lineTo(this._x2,this._y2):this._context.moveTo(this._x2,this._y2);break;case 3:this._point=4;default:t_(this,t,n)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var a_=function t(n){function e(t){return n?new o_(t,n):new Ky(t,0)}return e.alpha=function(n){return t(+n)},e}(.5);function u_(t){this._context=t}function c_(t){return t<0?-1:1}function f_(t,n,e){var r=t._x1-t._x0,i=n-t._x1,o=(t._y1-t._y0)/(r||i<0&&-0),a=(e-t._y1)/(i||r<0&&-0),u=(o*i+a*r)/(r+i);return(c_(o)+c_(a))*Math.min(Math.abs(o),Math.abs(a),.5*Math.abs(u))||0}function s_(t,n){var e=t._x1-t._x0;return e?(3*(t._y1-t._y0)/e-n)/2:n}function l_(t,n,e){var r=t._x0,i=t._y0,o=t._x1,a=t._y1,u=(o-r)/3;t._context.bezierCurveTo(r+u,i+u*n,o-u,a-u*e,o,a)}function h_(t){this._context=t}function d_(t){this._context=new p_(t)}function p_(t){this._context=t}function v_(t){this._context=t}function g_(t){var n,e,r=t.length-1,i=new Array(r),o=new Array(r),a=new Array(r);for(i[0]=0,o[0]=2,a[0]=t[0]+2*t[1],n=1;n<r-1;++n)i[n]=1,o[n]=4,a[n]=4*t[n]+2*t[n+1];for(i[r-1]=2,o[r-1]=7,a[r-1]=8*t[r-1]+t[r],n=1;n<r;++n)e=i[n]/o[n-1],o[n]-=e,a[n]-=e*a[n-1];for(i[r-1]=a[r-1]/o[r-1],n=r-2;n>=0;--n)i[n]=(a[n]-i[n+1])/o[n];for(o[r-1]=(t[r]+i[r-1])/2,n=0;n<r-1;++n)o[n]=2*t[n+1]-i[n+1];return[i,o]}function y_(t,n){this._context=t,this._t=n}function __(t,n){if((i=t.length)>1)for(var e,r,i,o=1,a=t[n[0]],u=a.length;o<i;++o)for(r=a,a=t[n[o]],e=0;e<u;++e)a[e][1]+=a[e][0]=isNaN(r[e][1])?r[e][0]:r[e][1]}function b_(t){for(var n=t.length,e=new Array(n);--n>=0;)e[n]=n;return e}function m_(t,n){return t[n]}function x_(t){var n=t.map(w_);return b_(t).sort((function(t,e){return n[t]-n[e]}))}function w_(t){for(var n,e=-1,r=0,i=t.length,o=-1/0;++e<i;)(n=+t[e][1])>o&&(o=n,r=e);return r}function M_(t){var n=t.map(N_);return b_(t).sort((function(t,e){return n[t]-n[e]}))}function N_(t){for(var n,e=0,r=-1,i=t.length;++r<i;)(n=+t[r][1])&&(e+=n);return e}function T_(t){return function(){return t}}function A_(t){return t[0]}function S_(t){return t[1]}function k_(){this._=null}function E_(t){t.U=t.C=t.L=t.R=t.P=t.N=null}function C_(t,n){var e=n,r=n.R,i=e.U;i?i.L===e?i.L=r:i.R=r:t._=r,r.U=i,e.U=r,e.R=r.L,e.R&&(e.R.U=e),r.L=e}function P_(t,n){var e=n,r=n.L,i=e.U;i?i.L===e?i.L=r:i.R=r:t._=r,r.U=i,e.U=r,e.L=r.R,e.L&&(e.L.U=e),r.R=e}function z_(t){for(;t.L;)t=t.L;return t}function R_(t,n,e,r){var i=[null,null],o=rb.push(i)-1;return i.left=t,i.right=n,e&&q_(i,t,n,e),r&&q_(i,n,t,r),nb[t.index].halfedges.push(o),nb[n.index].halfedges.push(o),i}function D_(t,n,e){var r=[n,e];return r.left=t,r}function q_(t,n,e,r){t[0]||t[1]?t.left===e?t[1]=r:t[0]=r:(t[0]=r,t.left=n,t.right=e)}function L_(t,n,e,r,i){var o,a=t[0],u=t[1],c=a[0],f=a[1],s=0,l=1,h=u[0]-c,d=u[1]-f;if(o=n-c,h||!(o>0)){if(o/=h,h<0){if(o<s)return;o<l&&(l=o)}else if(h>0){if(o>l)return;o>s&&(s=o)}if(o=r-c,h||!(o<0)){if(o/=h,h<0){if(o>l)return;o>s&&(s=o)}else if(h>0){if(o<s)return;o<l&&(l=o)}if(o=e-f,d||!(o>0)){if(o/=d,d<0){if(o<s)return;o<l&&(l=o)}else if(d>0){if(o>l)return;o>s&&(s=o)}if(o=i-f,d||!(o<0)){if(o/=d,d<0){if(o>l)return;o>s&&(s=o)}else if(d>0){if(o<s)return;o<l&&(l=o)}return!(s>0||l<1)||(s>0&&(t[0]=[c+s*h,f+s*d]),l<1&&(t[1]=[c+l*h,f+l*d]),!0)}}}}}function U_(t,n,e,r,i){var o=t[1];if(o)return!0;var a,u,c=t[0],f=t.left,s=t.right,l=f[0],h=f[1],d=s[0],p=s[1],v=(l+d)/2,g=(h+p)/2;if(p===h){if(v<n||v>=r)return;if(l>d){if(c){if(c[1]>=i)return}else c=[v,e];o=[v,i]}else{if(c){if(c[1]<e)return}else c=[v,i];o=[v,e]}}else if(u=g-(a=(l-d)/(p-h))*v,a<-1||a>1)if(l>d){if(c){if(c[1]>=i)return}else c=[(e-u)/a,e];o=[(i-u)/a,i]}else{if(c){if(c[1]<e)return}else c=[(i-u)/a,i];o=[(e-u)/a,e]}else if(h<p){if(c){if(c[0]>=r)return}else c=[n,a*n+u];o=[r,a*r+u]}else{if(c){if(c[0]<n)return}else c=[r,a*r+u];o=[n,a*n+u]}return t[0]=c,t[1]=o,!0}function O_(t,n){var e=t.site,r=n.left,i=n.right;return e===i&&(i=r,r=e),i?Math.atan2(i[1]-r[1],i[0]-r[0]):(e===r?(r=n[1],i=n[0]):(r=n[0],i=n[1]),Math.atan2(r[0]-i[0],i[1]-r[1]))}function B_(t,n){return n[+(n.left!==t.site)]}function F_(t,n){return n[+(n.left===t.site)]}u_.prototype={areaStart:Fy,areaEnd:Fy,lineStart:function(){this._point=0},lineEnd:function(){this._point&&this._context.closePath()},point:function(t,n){t=+t,n=+n,this._point?this._context.lineTo(t,n):(this._point=1,this._context.moveTo(t,n))}},h_.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=this._t0=NaN,this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x1,this._y1);break;case 3:l_(this,this._t0,s_(this,this._t0))}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){var e=NaN;if(n=+n,(t=+t)!==this._x1||n!==this._y1){switch(this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;break;case 2:this._point=3,l_(this,s_(this,e=f_(this,t,n)),e);break;default:l_(this,this._t0,e=f_(this,t,n))}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=n,this._t0=e}}},(d_.prototype=Object.create(h_.prototype)).point=function(t,n){h_.prototype.point.call(this,n,t)},p_.prototype={moveTo:function(t,n){this._context.moveTo(n,t)},closePath:function(){this._context.closePath()},lineTo:function(t,n){this._context.lineTo(n,t)},bezierCurveTo:function(t,n,e,r,i,o){this._context.bezierCurveTo(n,t,r,e,o,i)}},v_.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x=[],this._y=[]},lineEnd:function(){var t=this._x,n=this._y,e=t.length;if(e)if(this._line?this._context.lineTo(t[0],n[0]):this._context.moveTo(t[0],n[0]),2===e)this._context.lineTo(t[1],n[1]);else for(var r=g_(t),i=g_(n),o=0,a=1;a<e;++o,++a)this._context.bezierCurveTo(r[0][o],i[0][o],r[1][o],i[1][o],t[a],n[a]);(this._line||0!==this._line&&1===e)&&this._context.closePath(),this._line=1-this._line,this._x=this._y=null},point:function(t,n){this._x.push(+t),this._y.push(+n)}},y_.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x=this._y=NaN,this._point=0},lineEnd:function(){0<this._t&&this._t<1&&2===this._point&&this._context.lineTo(this._x,this._y),(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line>=0&&(this._t=1-this._t,this._line=1-this._line)},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;default:if(this._t<=0)this._context.lineTo(this._x,n),this._context.lineTo(t,n);else{var e=this._x*(1-this._t)+t*this._t;this._context.lineTo(e,this._y),this._context.lineTo(e,n)}}this._x=t,this._y=n}},k_.prototype={constructor:k_,insert:function(t,n){var e,r,i;if(t){if(n.P=t,n.N=t.N,t.N&&(t.N.P=n),t.N=n,t.R){for(t=t.R;t.L;)t=t.L;t.L=n}else t.R=n;e=t}else this._?(t=z_(this._),n.P=null,n.N=t,t.P=t.L=n,e=t):(n.P=n.N=null,this._=n,e=null);for(n.L=n.R=null,n.U=e,n.C=!0,t=n;e&&e.C;)e===(r=e.U).L?(i=r.R)&&i.C?(e.C=i.C=!1,r.C=!0,t=r):(t===e.R&&(C_(this,e),e=(t=e).U),e.C=!1,r.C=!0,P_(this,r)):(i=r.L)&&i.C?(e.C=i.C=!1,r.C=!0,t=r):(t===e.L&&(P_(this,e),e=(t=e).U),e.C=!1,r.C=!0,C_(this,r)),e=t.U;this._.C=!1},remove:function(t){t.N&&(t.N.P=t.P),t.P&&(t.P.N=t.N),t.N=t.P=null;var n,e,r,i=t.U,o=t.L,a=t.R;if(e=o?a?z_(a):o:a,i?i.L===t?i.L=e:i.R=e:this._=e,o&&a?(r=e.C,e.C=t.C,e.L=o,o.U=e,e!==a?(i=e.U,e.U=t.U,t=e.R,i.L=t,e.R=a,a.U=e):(e.U=i,i=e,t=e.R)):(r=t.C,t=e),t&&(t.U=i),!r)if(t&&t.C)t.C=!1;else{do{if(t===this._)break;if(t===i.L){if((n=i.R).C&&(n.C=!1,i.C=!0,C_(this,i),n=i.R),n.L&&n.L.C||n.R&&n.R.C){n.R&&n.R.C||(n.L.C=!1,n.C=!0,P_(this,n),n=i.R),n.C=i.C,i.C=n.R.C=!1,C_(this,i),t=this._;break}}else if((n=i.L).C&&(n.C=!1,i.C=!0,P_(this,i),n=i.L),n.L&&n.L.C||n.R&&n.R.C){n.L&&n.L.C||(n.R.C=!1,n.C=!0,C_(this,n),n=i.L),n.C=i.C,i.C=n.L.C=!1,P_(this,i),t=this._;break}n.C=!0,t=i,i=i.U}while(!t.C);t&&(t.C=!1)}}};var Y_,I_=[];function H_(){E_(this),this.x=this.y=this.arc=this.site=this.cy=null}function j_(t){var n=t.P,e=t.N;if(n&&e){var r=n.site,i=t.site,o=e.site;if(r!==o){var a=i[0],u=i[1],c=r[0]-a,f=r[1]-u,s=o[0]-a,l=o[1]-u,h=2*(c*l-f*s);if(!(h>=-ob)){var d=c*c+f*f,p=s*s+l*l,v=(l*d-f*p)/h,g=(c*p-s*d)/h,y=I_.pop()||new H_;y.arc=t,y.site=i,y.x=v+a,y.y=(y.cy=g+u)+Math.sqrt(v*v+g*g),t.circle=y;for(var _=null,b=eb._;b;)if(y.y<b.y||y.y===b.y&&y.x<=b.x){if(!b.L){_=b.P;break}b=b.L}else{if(!b.R){_=b;break}b=b.R}eb.insert(_,y),_||(Y_=y)}}}}function X_(t){var n=t.circle;n&&(n.P||(Y_=n.N),eb.remove(n),I_.push(n),E_(n),t.circle=null)}var V_=[];function G_(){E_(this),this.edge=this.site=this.circle=null}function $_(t){var n=V_.pop()||new G_;return n.site=t,n}function W_(t){X_(t),tb.remove(t),V_.push(t),E_(t)}function Z_(t){var n=t.circle,e=n.x,r=n.cy,i=[e,r],o=t.P,a=t.N,u=[t];W_(t);for(var c=o;c.circle&&Math.abs(e-c.circle.x)<ib&&Math.abs(r-c.circle.cy)<ib;)o=c.P,u.unshift(c),W_(c),c=o;u.unshift(c),X_(c);for(var f=a;f.circle&&Math.abs(e-f.circle.x)<ib&&Math.abs(r-f.circle.cy)<ib;)a=f.N,u.push(f),W_(f),f=a;u.push(f),X_(f);var s,l=u.length;for(s=1;s<l;++s)f=u[s],c=u[s-1],q_(f.edge,c.site,f.site,i);c=u[0],(f=u[l-1]).edge=R_(c.site,f.site,null,i),j_(c),j_(f)}function Q_(t){for(var n,e,r,i,o=t[0],a=t[1],u=tb._;u;)if((r=K_(u,a)-o)>ib)u=u.L;else{if(!((i=o-J_(u,a))>ib)){r>-ib?(n=u.P,e=u):i>-ib?(n=u,e=u.N):n=e=u;break}if(!u.R){n=u;break}u=u.R}!function(t){nb[t.index]={site:t,halfedges:[]}}(t);var c=$_(t);if(tb.insert(n,c),n||e){if(n===e)return X_(n),e=$_(n.site),tb.insert(c,e),c.edge=e.edge=R_(n.site,c.site),j_(n),void j_(e);if(e){X_(n),X_(e);var f=n.site,s=f[0],l=f[1],h=t[0]-s,d=t[1]-l,p=e.site,v=p[0]-s,g=p[1]-l,y=2*(h*g-d*v),_=h*h+d*d,b=v*v+g*g,m=[(g*_-d*b)/y+s,(h*b-v*_)/y+l];q_(e.edge,f,p,m),c.edge=R_(f,t,null,m),e.edge=R_(t,p,null,m),j_(n),j_(e)}else c.edge=R_(n.site,c.site)}}function K_(t,n){var e=t.site,r=e[0],i=e[1],o=i-n;if(!o)return r;var a=t.P;if(!a)return-1/0;var u=(e=a.site)[0],c=e[1],f=c-n;if(!f)return u;var s=u-r,l=1/o-1/f,h=s/f;return l?(-h+Math.sqrt(h*h-2*l*(s*s/(-2*f)-c+f/2+i-o/2)))/l+r:(r+u)/2}function J_(t,n){var e=t.N;if(e)return K_(e,n);var r=t.site;return r[1]===n?r[0]:1/0}var tb,nb,eb,rb,ib=1e-6,ob=1e-12;function ab(t,n,e){return(t[0]-e[0])*(n[1]-t[1])-(t[0]-n[0])*(e[1]-t[1])}function ub(t,n){return n[1]-t[1]||n[0]-t[0]}function cb(t,n){var e,r,i,o=t.sort(ub).pop();for(rb=[],nb=new Array(t.length),tb=new k_,eb=new k_;;)if(i=Y_,o&&(!i||o[1]<i.y||o[1]===i.y&&o[0]<i.x))o[0]===e&&o[1]===r||(Q_(o),e=o[0],r=o[1]),o=t.pop();else{if(!i)break;Z_(i.arc)}if(function(){for(var t,n,e,r,i=0,o=nb.length;i<o;++i)if((t=nb[i])&&(r=(n=t.halfedges).length)){var a=new Array(r),u=new Array(r);for(e=0;e<r;++e)a[e]=e,u[e]=O_(t,rb[n[e]]);for(a.sort((function(t,n){return u[n]-u[t]})),e=0;e<r;++e)u[e]=n[a[e]];for(e=0;e<r;++e)n[e]=u[e]}}(),n){var a=+n[0][0],u=+n[0][1],c=+n[1][0],f=+n[1][1];!function(t,n,e,r){for(var i,o=rb.length;o--;)U_(i=rb[o],t,n,e,r)&&L_(i,t,n,e,r)&&(Math.abs(i[0][0]-i[1][0])>ib||Math.abs(i[0][1]-i[1][1])>ib)||delete rb[o]}(a,u,c,f),function(t,n,e,r){var i,o,a,u,c,f,s,l,h,d,p,v,g=nb.length,y=!0;for(i=0;i<g;++i)if(o=nb[i]){for(a=o.site,u=(c=o.halfedges).length;u--;)rb[c[u]]||c.splice(u,1);for(u=0,f=c.length;u<f;)p=(d=F_(o,rb[c[u]]))[0],v=d[1],l=(s=B_(o,rb[c[++u%f]]))[0],h=s[1],(Math.abs(p-l)>ib||Math.abs(v-h)>ib)&&(c.splice(u,0,rb.push(D_(a,d,Math.abs(p-t)<ib&&r-v>ib?[t,Math.abs(l-t)<ib?h:r]:Math.abs(v-r)<ib&&e-p>ib?[Math.abs(h-r)<ib?l:e,r]:Math.abs(p-e)<ib&&v-n>ib?[e,Math.abs(l-e)<ib?h:n]:Math.abs(v-n)<ib&&p-t>ib?[Math.abs(h-n)<ib?l:t,n]:null))-1),++f);f&&(y=!1)}if(y){var _,b,m,x=1/0;for(i=0,y=null;i<g;++i)(o=nb[i])&&(m=(_=(a=o.site)[0]-t)*_+(b=a[1]-n)*b)<x&&(x=m,y=o);if(y){var w=[t,n],M=[t,r],N=[e,r],T=[e,n];y.halfedges.push(rb.push(D_(a=y.site,w,M))-1,rb.push(D_(a,M,N))-1,rb.push(D_(a,N,T))-1,rb.push(D_(a,T,w))-1)}}for(i=0;i<g;++i)(o=nb[i])&&(o.halfedges.length||delete nb[i])}(a,u,c,f)}this.edges=rb,this.cells=nb,tb=eb=rb=nb=null}function fb(t){return function(){return t}}function sb(t,n,e){this.target=t,this.type=n,this.transform=e}function lb(t,n,e){this.k=t,this.x=n,this.y=e}cb.prototype={constructor:cb,polygons:function(){var t=this.edges;return this.cells.map((function(n){var e=n.halfedges.map((function(e){return B_(n,t[e])}));return e.data=n.site.data,e}))},triangles:function(){var t=[],n=this.edges;return this.cells.forEach((function(e,r){if(o=(i=e.halfedges).length)for(var i,o,a,u=e.site,c=-1,f=n[i[o-1]],s=f.left===u?f.right:f.left;++c<o;)a=s,s=(f=n[i[c]]).left===u?f.right:f.left,a&&s&&r<a.index&&r<s.index&&ab(u,a,s)<0&&t.push([u.data,a.data,s.data])})),t},links:function(){return this.edges.filter((function(t){return t.right})).map((function(t){return{source:t.left.data,target:t.right.data}}))},find:function(t,n,e){for(var r,i,o=this,a=o._found||0,u=o.cells.length;!(i=o.cells[a]);)if(++a>=u)return null;var c=t-i.site[0],f=n-i.site[1],s=c*c+f*f;do{i=o.cells[r=a],a=null,i.halfedges.forEach((function(e){var r=o.edges[e],u=r.left;if(u!==i.site&&u||(u=r.right)){var c=t-u[0],f=n-u[1],l=c*c+f*f;l<s&&(s=l,a=u.index)}}))}while(null!==a);return o._found=r,null==e||s<=e*e?i.site:null}},lb.prototype={constructor:lb,scale:function(t){return 1===t?this:new lb(this.k*t,this.x,this.y)},translate:function(t,n){return 0===t&0===n?this:new lb(this.k,this.x+this.k*t,this.y+this.k*n)},apply:function(t){return[t[0]*this.k+this.x,t[1]*this.k+this.y]},applyX:function(t){return t*this.k+this.x},applyY:function(t){return t*this.k+this.y},invert:function(t){return[(t[0]-this.x)/this.k,(t[1]-this.y)/this.k]},invertX:function(t){return(t-this.x)/this.k},invertY:function(t){return(t-this.y)/this.k},rescaleX:function(t){return t.copy().domain(t.range().map(this.invertX,this).map(t.invert,t))},rescaleY:function(t){return t.copy().domain(t.range().map(this.invertY,this).map(t.invert,t))},toString:function(){return"translate("+this.x+","+this.y+") scale("+this.k+")"}};var hb=new lb(1,0,0);function db(t){for(;!t.__zoom;)if(!(t=t.parentNode))return hb;return t.__zoom}function pb(){t.event.stopImmediatePropagation()}function vb(){t.event.preventDefault(),t.event.stopImmediatePropagation()}function gb(){return!t.event.ctrlKey&&!t.event.button}function yb(){var t=this;return t instanceof SVGElement?(t=t.ownerSVGElement||t).hasAttribute("viewBox")?[[(t=t.viewBox.baseVal).x,t.y],[t.x+t.width,t.y+t.height]]:[[0,0],[t.width.baseVal.value,t.height.baseVal.value]]:[[0,0],[t.clientWidth,t.clientHeight]]}function _b(){return this.__zoom||hb}function bb(){return-t.event.deltaY*(1===t.event.deltaMode?.05:t.event.deltaMode?1:.002)}function mb(){return navigator.maxTouchPoints||"ontouchstart"in this}function xb(t,n,e){var r=t.invertX(n[0][0])-e[0][0],i=t.invertX(n[1][0])-e[1][0],o=t.invertY(n[0][1])-e[0][1],a=t.invertY(n[1][1])-e[1][1];return t.translate(i>r?(r+i)/2:Math.min(0,r)||Math.max(0,i),a>o?(o+a)/2:Math.min(0,o)||Math.max(0,a))}db.prototype=lb.prototype,t.FormatSpecifier=ia,t.active=function(t,n){var e,r,i=t.__transition;if(i)for(r in n=null==n?null:n+"",i)if((e=i[r]).state>1&&e.name===n)return new vr([[t]],Yr,n,+r);return null},t.arc=function(){var t=Wg,n=Zg,e=Lg(0),r=null,i=Qg,o=Kg,a=Jg,u=null;function c(){var c,f,s=+t.apply(this,arguments),l=+n.apply(this,arguments),h=i.apply(this,arguments)-Vg,d=o.apply(this,arguments)-Vg,p=Ug(d-h),v=d>h;if(u||(u=c=Ti()),l<s&&(f=l,l=s,s=f),l>jg)if(p>Gg-jg)u.moveTo(l*Bg(h),l*Ig(h)),u.arc(0,0,l,h,d,!v),s>jg&&(u.moveTo(s*Bg(d),s*Ig(d)),u.arc(0,0,s,d,h,v));else{var g,y,_=h,b=d,m=h,x=d,w=p,M=p,N=a.apply(this,arguments)/2,T=N>jg&&(r?+r.apply(this,arguments):Hg(s*s+l*l)),A=Yg(Ug(l-s)/2,+e.apply(this,arguments)),S=A,k=A;if(T>jg){var E=$g(T/s*Ig(N)),C=$g(T/l*Ig(N));(w-=2*E)>jg?(m+=E*=v?1:-1,x-=E):(w=0,m=x=(h+d)/2),(M-=2*C)>jg?(_+=C*=v?1:-1,b-=C):(M=0,_=b=(h+d)/2)}var P=l*Bg(_),z=l*Ig(_),R=s*Bg(x),D=s*Ig(x);if(A>jg){var q,L=l*Bg(b),U=l*Ig(b),O=s*Bg(m),B=s*Ig(m);if(p<Xg&&(q=function(t,n,e,r,i,o,a,u){var c=e-t,f=r-n,s=a-i,l=u-o,h=l*c-s*f;if(!(h*h<jg))return[t+(h=(s*(n-o)-l*(t-i))/h)*c,n+h*f]}(P,z,O,B,L,U,R,D))){var F=P-q[0],Y=z-q[1],I=L-q[0],H=U-q[1],j=1/Ig(function(t){return t>1?0:t<-1?Xg:Math.acos(t)}((F*I+Y*H)/(Hg(F*F+Y*Y)*Hg(I*I+H*H)))/2),X=Hg(q[0]*q[0]+q[1]*q[1]);S=Yg(A,(s-X)/(j-1)),k=Yg(A,(l-X)/(j+1))}}M>jg?k>jg?(g=ty(O,B,P,z,l,k,v),y=ty(L,U,R,D,l,k,v),u.moveTo(g.cx+g.x01,g.cy+g.y01),k<A?u.arc(g.cx,g.cy,k,Og(g.y01,g.x01),Og(y.y01,y.x01),!v):(u.arc(g.cx,g.cy,k,Og(g.y01,g.x01),Og(g.y11,g.x11),!v),u.arc(0,0,l,Og(g.cy+g.y11,g.cx+g.x11),Og(y.cy+y.y11,y.cx+y.x11),!v),u.arc(y.cx,y.cy,k,Og(y.y11,y.x11),Og(y.y01,y.x01),!v))):(u.moveTo(P,z),u.arc(0,0,l,_,b,!v)):u.moveTo(P,z),s>jg&&w>jg?S>jg?(g=ty(R,D,L,U,s,-S,v),y=ty(P,z,O,B,s,-S,v),u.lineTo(g.cx+g.x01,g.cy+g.y01),S<A?u.arc(g.cx,g.cy,S,Og(g.y01,g.x01),Og(y.y01,y.x01),!v):(u.arc(g.cx,g.cy,S,Og(g.y01,g.x01),Og(g.y11,g.x11),!v),u.arc(0,0,s,Og(g.cy+g.y11,g.cx+g.x11),Og(y.cy+y.y11,y.cx+y.x11),v),u.arc(y.cx,y.cy,S,Og(y.y11,y.x11),Og(y.y01,y.x01),!v))):u.arc(0,0,s,x,m,v):u.lineTo(R,D)}else u.moveTo(0,0);if(u.closePath(),c)return u=null,c+""||null}return c.centroid=function(){var e=(+t.apply(this,arguments)+ +n.apply(this,arguments))/2,r=(+i.apply(this,arguments)+ +o.apply(this,arguments))/2-Xg/2;return[Bg(r)*e,Ig(r)*e]},c.innerRadius=function(n){return arguments.length?(t="function"==typeof n?n:Lg(+n),c):t},c.outerRadius=function(t){return arguments.length?(n="function"==typeof t?t:Lg(+t),c):n},c.cornerRadius=function(t){return arguments.length?(e="function"==typeof t?t:Lg(+t),c):e},c.padRadius=function(t){return arguments.length?(r=null==t?null:"function"==typeof t?t:Lg(+t),c):r},c.startAngle=function(t){return arguments.length?(i="function"==typeof t?t:Lg(+t),c):i},c.endAngle=function(t){return arguments.length?(o="function"==typeof t?t:Lg(+t),c):o},c.padAngle=function(t){return arguments.length?(a="function"==typeof t?t:Lg(+t),c):a},c.context=function(t){return arguments.length?(u=null==t?null:t,c):u},c},t.area=ay,t.areaRadial=py,t.ascending=n,t.autoType=function(t){for(var n in t){var e,r,i=t[n].trim();if(i)if("true"===i)i=!0;else if("false"===i)i=!1;else if("NaN"===i)i=NaN;else if(isNaN(e=+i)){if(!(r=i.match(/^([-+]\d{2})?\d{4}(-\d{2}(-\d{2})?)?(T\d{2}:\d{2}(:\d{2}(\.\d{3})?)?(Z|[-+]\d{2}:\d{2})?)?$/)))continue;Mo&&r[4]&&!r[7]&&(i=i.replace(/-/g,"/").replace(/T/," ")),i=new Date(i)}else i=e;else i=null;t[n]=i}return t},t.axisBottom=function(t){return L(3,t)},t.axisLeft=function(t){return L(4,t)},t.axisRight=function(t){return L(2,t)},t.axisTop=function(t){return L(1,t)},t.bisect=i,t.bisectLeft=o,t.bisectRight=i,t.bisector=e,t.blob=function(t,n){return fetch(t,n).then(No)},t.brush=function(){return li(ti)},t.brushSelection=function(t){var n=t.__brush;return n?n.dim.output(n.selection):null},t.brushX=function(){return li(Kr)},t.brushY=function(){return li(Jr)},t.buffer=function(t,n){return fetch(t,n).then(To)},t.chord=function(){var t=0,n=null,e=null,r=null;function i(i){var o,a,u,c,f,s,l=i.length,h=[],d=g(l),p=[],v=[],y=v.groups=new Array(l),_=new Array(l*l);for(o=0,f=-1;++f<l;){for(a=0,s=-1;++s<l;)a+=i[f][s];h.push(a),p.push(g(l)),o+=a}for(n&&d.sort((function(t,e){return n(h[t],h[e])})),e&&p.forEach((function(t,n){t.sort((function(t,r){return e(i[n][t],i[n][r])}))})),c=(o=yi(0,gi-t*l)/o)?t:gi/l,a=0,f=-1;++f<l;){for(u=a,s=-1;++s<l;){var b=d[f],m=p[b][s],x=i[b][m],w=a,M=a+=x*o;_[m*l+b]={index:b,subindex:m,startAngle:w,endAngle:M,value:x}}y[b]={index:b,startAngle:u,endAngle:a,value:h[b]},a+=c}for(f=-1;++f<l;)for(s=f-1;++s<l;){var N=_[s*l+f],T=_[f*l+s];(N.value||T.value)&&v.push(N.value<T.value?{source:T,target:N}:{source:N,target:T})}return r?v.sort(r):v}return i.padAngle=function(n){return arguments.length?(t=yi(0,n),i):t},i.sortGroups=function(t){return arguments.length?(n=t,i):n},i.sortSubgroups=function(t){return arguments.length?(e=t,i):e},i.sortChords=function(t){return arguments.length?(null==t?r=null:(r=_i(t))._=t,i):r&&r._},i},t.clientPoint=Rt,t.cluster=function(){var t=Is,n=1,e=1,r=!1;function i(i){var o,a=0;i.eachAfter((function(n){var e=n.children;e?(n.x=function(t){return t.reduce(Hs,0)/t.length}(e),n.y=function(t){return 1+t.reduce(js,0)}(e)):(n.x=o?a+=t(n,o):0,n.y=0,o=n)}));var u=function(t){for(var n;n=t.children;)t=n[0];return t}(i),c=function(t){for(var n;n=t.children;)t=n[n.length-1];return t}(i),f=u.x-t(u,c)/2,s=c.x+t(c,u)/2;return i.eachAfter(r?function(t){t.x=(t.x-i.x)*n,t.y=(i.y-t.y)*e}:function(t){t.x=(t.x-f)/(s-f)*n,t.y=(1-(i.y?t.y/i.y:1))*e})}return i.separation=function(n){return arguments.length?(t=n,i):t},i.size=function(t){return arguments.length?(r=!1,n=+t[0],e=+t[1],i):r?null:[n,e]},i.nodeSize=function(t){return arguments.length?(r=!0,n=+t[0],e=+t[1],i):r?[n,e]:null},i},t.color=fn,t.contourDensity=function(){var t=Qi,n=Ki,e=Ji,r=960,i=500,o=20,a=2,u=3*o,c=r+2*u>>a,f=i+2*u>>a,s=Ii(20);function l(r){var i=new Float32Array(c*f),l=new Float32Array(c*f);r.forEach((function(r,o,s){var l=+t(r,o,s)+u>>a,h=+n(r,o,s)+u>>a,d=+e(r,o,s);l>=0&&l<c&&h>=0&&h<f&&(i[l+h*c]+=d)})),Wi({width:c,height:f,data:i},{width:c,height:f,data:l},o>>a),Zi({width:c,height:f,data:l},{width:c,height:f,data:i},o>>a),Wi({width:c,height:f,data:i},{width:c,height:f,data:l},o>>a),Zi({width:c,height:f,data:l},{width:c,height:f,data:i},o>>a),Wi({width:c,height:f,data:i},{width:c,height:f,data:l},o>>a),Zi({width:c,height:f,data:l},{width:c,height:f,data:i},o>>a);var d=s(i);if(!Array.isArray(d)){var p=T(i);d=w(0,p,d),(d=g(0,Math.floor(p/d)*d,d)).shift()}return $i().thresholds(d).size([c,f])(i).map(h)}function h(t){return t.value*=Math.pow(2,-2*a),t.coordinates.forEach(d),t}function d(t){t.forEach(p)}function p(t){t.forEach(v)}function v(t){t[0]=t[0]*Math.pow(2,a)-u,t[1]=t[1]*Math.pow(2,a)-u}function y(){return c=r+2*(u=3*o)>>a,f=i+2*u>>a,l}return l.x=function(n){return arguments.length?(t="function"==typeof n?n:Ii(+n),l):t},l.y=function(t){return arguments.length?(n="function"==typeof t?t:Ii(+t),l):n},l.weight=function(t){return arguments.length?(e="function"==typeof t?t:Ii(+t),l):e},l.size=function(t){if(!arguments.length)return[r,i];var n=Math.ceil(t[0]),e=Math.ceil(t[1]);if(!(n>=0||n>=0))throw new Error("invalid size");return r=n,i=e,y()},l.cellSize=function(t){if(!arguments.length)return 1<<a;if(!((t=+t)>=1))throw new Error("invalid cell size");return a=Math.floor(Math.log(t)/Math.LN2),y()},l.thresholds=function(t){return arguments.length?(s="function"==typeof t?t:Array.isArray(t)?Ii(Fi.call(t)):Ii(t),l):s},l.bandwidth=function(t){if(!arguments.length)return Math.sqrt(o*(o+1));if(!((t=+t)>=0))throw new Error("invalid bandwidth");return o=Math.round((Math.sqrt(4*t*t+1)-1)/2),y()},l},t.contours=$i,t.create=function(t){return kt(V(t).call(document.documentElement))},t.creator=V,t.cross=function(t,n,e){var r,i,o,u,c=t.length,f=n.length,s=new Array(c*f);for(null==e&&(e=a),r=o=0;r<c;++r)for(u=t[r],i=0;i<f;++i,++o)s[o]=e(u,n[i]);return s},t.csv=Eo,t.csvFormat=fo,t.csvFormatBody=so,t.csvFormatRow=ho,t.csvFormatRows=lo,t.csvFormatValue=po,t.csvParse=uo,t.csvParseRows=co,t.cubehelix=Vn,t.curveBasis=function(t){return new Iy(t)},t.curveBasisClosed=function(t){return new Hy(t)},t.curveBasisOpen=function(t){return new jy(t)},t.curveBundle=Vy,t.curveCardinal=Wy,t.curveCardinalClosed=Qy,t.curveCardinalOpen=Jy,t.curveCatmullRom=e_,t.curveCatmullRomClosed=i_,t.curveCatmullRomOpen=a_,t.curveLinear=ey,t.curveLinearClosed=function(t){return new u_(t)},t.curveMonotoneX=function(t){return new h_(t)},t.curveMonotoneY=function(t){return new d_(t)},t.curveNatural=function(t){return new v_(t)},t.curveStep=function(t){return new y_(t,.5)},t.curveStepAfter=function(t){return new y_(t,1)},t.curveStepBefore=function(t){return new y_(t,0)},t.customEvent=Mt,t.descending=function(t,n){return n<t?-1:n>t?1:n>=t?0:NaN},t.deviation=f,t.dispatch=O,t.drag=function(){var n,e,r,i,o=It,a=Ht,u=jt,c=Xt,f={},s=O("start","drag","end"),l=0,h=0;function d(t){t.on("mousedown.drag",p).filter(c).on("touchstart.drag",y).on("touchmove.drag",_).on("touchend.drag touchcancel.drag",b).style("touch-action","none").style("-webkit-tap-highlight-color","rgba(0,0,0,0)")}function p(){if(!i&&o.apply(this,arguments)){var u=m("mouse",a.apply(this,arguments),Dt,this,arguments);u&&(kt(t.event.view).on("mousemove.drag",v,!0).on("mouseup.drag",g,!0),Ot(t.event.view),Lt(),r=!1,n=t.event.clientX,e=t.event.clientY,u("start"))}}function v(){if(Ut(),!r){var i=t.event.clientX-n,o=t.event.clientY-e;r=i*i+o*o>h}f.mouse("drag")}function g(){kt(t.event.view).on("mousemove.drag mouseup.drag",null),Bt(t.event.view,r),Ut(),f.mouse("end")}function y(){if(o.apply(this,arguments)){var n,e,r=t.event.changedTouches,i=a.apply(this,arguments),u=r.length;for(n=0;n<u;++n)(e=m(r[n].identifier,i,qt,this,arguments))&&(Lt(),e("start"))}}function _(){var n,e,r=t.event.changedTouches,i=r.length;for(n=0;n<i;++n)(e=f[r[n].identifier])&&(Ut(),e("drag"))}function b(){var n,e,r=t.event.changedTouches,o=r.length;for(i&&clearTimeout(i),i=setTimeout((function(){i=null}),500),n=0;n<o;++n)(e=f[r[n].identifier])&&(Lt(),e("end"))}function m(n,e,r,i,o){var a,c,h,p=r(e,n),v=s.copy();if(Mt(new Yt(d,"beforestart",a,n,l,p[0],p[1],0,0,v),(function(){return null!=(t.event.subject=a=u.apply(i,o))&&(c=a.x-p[0]||0,h=a.y-p[1]||0,!0)})))return function t(u){var s,g=p;switch(u){case"start":f[n]=t,s=l++;break;case"end":delete f[n],--l;case"drag":p=r(e,n),s=l}Mt(new Yt(d,u,a,n,s,p[0]+c,p[1]+h,p[0]-g[0],p[1]-g[1],v),v.apply,v,[u,i,o])}}return d.filter=function(t){return arguments.length?(o="function"==typeof t?t:Ft(!!t),d):o},d.container=function(t){return arguments.length?(a="function"==typeof t?t:Ft(t),d):a},d.subject=function(t){return arguments.length?(u="function"==typeof t?t:Ft(t),d):u},d.touchable=function(t){return arguments.length?(c="function"==typeof t?t:Ft(!!t),d):c},d.on=function(){var t=s.on.apply(s,arguments);return t===s?d:t},d.clickDistance=function(t){return arguments.length?(h=(t=+t)*t,d):Math.sqrt(h)},d},t.dragDisable=Ot,t.dragEnable=Bt,t.dsv=function(t,n,e,r){3===arguments.length&&"function"==typeof e&&(r=e,e=void 0);var i=oo(t);return So(n,e).then((function(t){return i.parse(t,r)}))},t.dsvFormat=oo,t.easeBack=Dr,t.easeBackIn=zr,t.easeBackInOut=Dr,t.easeBackOut=Rr,t.easeBounce=Pr,t.easeBounceIn=function(t){return 1-Pr(1-t)},t.easeBounceInOut=function(t){return((t*=2)<=1?1-Pr(1-t):Pr(t-1)+1)/2},t.easeBounceOut=Pr,t.easeCircle=kr,t.easeCircleIn=function(t){return 1-Math.sqrt(1-t*t)},t.easeCircleInOut=kr,t.easeCircleOut=function(t){return Math.sqrt(1- --t*t)},t.easeCubic=mr,t.easeCubicIn=function(t){return t*t*t},t.easeCubicInOut=mr,t.easeCubicOut=function(t){return--t*t*t+1},t.easeElastic=Ur,t.easeElasticIn=Lr,t.easeElasticInOut=Or,t.easeElasticOut=Ur,t.easeExp=Sr,t.easeExpIn=function(t){return Math.pow(2,10*t-10)},t.easeExpInOut=Sr,t.easeExpOut=function(t){return 1-Math.pow(2,-10*t)},t.easeLinear=function(t){return+t},t.easePoly=Mr,t.easePolyIn=xr,t.easePolyInOut=Mr,t.easePolyOut=wr,t.easeQuad=br,t.easeQuadIn=function(t){return t*t},t.easeQuadInOut=br,t.easeQuadOut=function(t){return t*(2-t)},t.easeSin=Ar,t.easeSinIn=function(t){return 1-Math.cos(t*Tr)},t.easeSinInOut=Ar,t.easeSinOut=function(t){return Math.sin(t*Tr)},t.entries=function(t){var n=[];for(var e in t)n.push({key:e,value:t[e]});return n},t.extent=s,t.forceCenter=function(t,n){var e;function r(){var r,i,o=e.length,a=0,u=0;for(r=0;r<o;++r)a+=(i=e[r]).x,u+=i.y;for(a=a/o-t,u=u/o-n,r=0;r<o;++r)(i=e[r]).x-=a,i.y-=u}return null==t&&(t=0),null==n&&(n=0),r.initialize=function(t){e=t},r.x=function(n){return arguments.length?(t=+n,r):t},r.y=function(t){return arguments.length?(n=+t,r):n},r},t.forceCollide=function(t){var n,e,r=1,i=1;function o(){for(var t,o,u,c,f,s,l,h=n.length,d=0;d<i;++d)for(o=Io(n,Vo,Go).visitAfter(a),t=0;t<h;++t)u=n[t],s=e[u.index],l=s*s,c=u.x+u.vx,f=u.y+u.vy,o.visit(p);function p(t,n,e,i,o){var a=t.data,h=t.r,d=s+h;if(!a)return n>c+d||i<c-d||e>f+d||o<f-d;if(a.index>u.index){var p=c-a.x-a.vx,v=f-a.y-a.vy,g=p*p+v*v;g<d*d&&(0===p&&(g+=(p=Uo())*p),0===v&&(g+=(v=Uo())*v),g=(d-(g=Math.sqrt(g)))/g*r,u.vx+=(p*=g)*(d=(h*=h)/(l+h)),u.vy+=(v*=g)*d,a.vx-=p*(d=1-d),a.vy-=v*d)}}}function a(t){if(t.data)return t.r=e[t.data.index];for(var n=t.r=0;n<4;++n)t[n]&&t[n].r>t.r&&(t.r=t[n].r)}function u(){if(n){var r,i,o=n.length;for(e=new Array(o),r=0;r<o;++r)i=n[r],e[i.index]=+t(i,r,n)}}return"function"!=typeof t&&(t=Lo(null==t?1:+t)),o.initialize=function(t){n=t,u()},o.iterations=function(t){return arguments.length?(i=+t,o):i},o.strength=function(t){return arguments.length?(r=+t,o):r},o.radius=function(n){return arguments.length?(t="function"==typeof n?n:Lo(+n),u(),o):t},o},t.forceLink=function(t){var n,e,r,i,o,a=$o,u=function(t){return 1/Math.min(i[t.source.index],i[t.target.index])},c=Lo(30),f=1;function s(r){for(var i=0,a=t.length;i<f;++i)for(var u,c,s,l,h,d,p,v=0;v<a;++v)c=(u=t[v]).source,l=(s=u.target).x+s.vx-c.x-c.vx||Uo(),h=s.y+s.vy-c.y-c.vy||Uo(),l*=d=((d=Math.sqrt(l*l+h*h))-e[v])/d*r*n[v],h*=d,s.vx-=l*(p=o[v]),s.vy-=h*p,c.vx+=l*(p=1-p),c.vy+=h*p}function l(){if(r){var u,c,f=r.length,s=t.length,l=zi(r,a);for(u=0,i=new Array(f);u<s;++u)(c=t[u]).index=u,"object"!=typeof c.source&&(c.source=Wo(l,c.source)),"object"!=typeof c.target&&(c.target=Wo(l,c.target)),i[c.source.index]=(i[c.source.index]||0)+1,i[c.target.index]=(i[c.target.index]||0)+1;for(u=0,o=new Array(s);u<s;++u)c=t[u],o[u]=i[c.source.index]/(i[c.source.index]+i[c.target.index]);n=new Array(s),h(),e=new Array(s),d()}}function h(){if(r)for(var e=0,i=t.length;e<i;++e)n[e]=+u(t[e],e,t)}function d(){if(r)for(var n=0,i=t.length;n<i;++n)e[n]=+c(t[n],n,t)}return null==t&&(t=[]),s.initialize=function(t){r=t,l()},s.links=function(n){return arguments.length?(t=n,l(),s):t},s.id=function(t){return arguments.length?(a=t,s):a},s.iterations=function(t){return arguments.length?(f=+t,s):f},s.strength=function(t){return arguments.length?(u="function"==typeof t?t:Lo(+t),h(),s):u},s.distance=function(t){return arguments.length?(c="function"==typeof t?t:Lo(+t),d(),s):c},s},t.forceManyBody=function(){var t,n,e,r,i=Lo(-30),o=1,a=1/0,u=.81;function c(r){var i,o=t.length,a=Io(t,Zo,Qo).visitAfter(s);for(e=r,i=0;i<o;++i)n=t[i],a.visit(l)}function f(){if(t){var n,e,o=t.length;for(r=new Array(o),n=0;n<o;++n)e=t[n],r[e.index]=+i(e,n,t)}}function s(t){var n,e,i,o,a,u=0,c=0;if(t.length){for(i=o=a=0;a<4;++a)(n=t[a])&&(e=Math.abs(n.value))&&(u+=n.value,c+=e,i+=e*n.x,o+=e*n.y);t.x=i/c,t.y=o/c}else{(n=t).x=n.data.x,n.y=n.data.y;do{u+=r[n.data.index]}while(n=n.next)}t.value=u}function l(t,i,c,f){if(!t.value)return!0;var s=t.x-n.x,l=t.y-n.y,h=f-i,d=s*s+l*l;if(h*h/u<d)return d<a&&(0===s&&(d+=(s=Uo())*s),0===l&&(d+=(l=Uo())*l),d<o&&(d=Math.sqrt(o*d)),n.vx+=s*t.value*e/d,n.vy+=l*t.value*e/d),!0;if(!(t.length||d>=a)){(t.data!==n||t.next)&&(0===s&&(d+=(s=Uo())*s),0===l&&(d+=(l=Uo())*l),d<o&&(d=Math.sqrt(o*d)));do{t.data!==n&&(h=r[t.data.index]*e/d,n.vx+=s*h,n.vy+=l*h)}while(t=t.next)}}return c.initialize=function(n){t=n,f()},c.strength=function(t){return arguments.length?(i="function"==typeof t?t:Lo(+t),f(),c):i},c.distanceMin=function(t){return arguments.length?(o=t*t,c):Math.sqrt(o)},c.distanceMax=function(t){return arguments.length?(a=t*t,c):Math.sqrt(a)},c.theta=function(t){return arguments.length?(u=t*t,c):Math.sqrt(u)},c},t.forceRadial=function(t,n,e){var r,i,o,a=Lo(.1);function u(t){for(var a=0,u=r.length;a<u;++a){var c=r[a],f=c.x-n||1e-6,s=c.y-e||1e-6,l=Math.sqrt(f*f+s*s),h=(o[a]-l)*i[a]*t/l;c.vx+=f*h,c.vy+=s*h}}function c(){if(r){var n,e=r.length;for(i=new Array(e),o=new Array(e),n=0;n<e;++n)o[n]=+t(r[n],n,r),i[n]=isNaN(o[n])?0:+a(r[n],n,r)}}return"function"!=typeof t&&(t=Lo(+t)),null==n&&(n=0),null==e&&(e=0),u.initialize=function(t){r=t,c()},u.strength=function(t){return arguments.length?(a="function"==typeof t?t:Lo(+t),c(),u):a},u.radius=function(n){return arguments.length?(t="function"==typeof n?n:Lo(+n),c(),u):t},u.x=function(t){return arguments.length?(n=+t,u):n},u.y=function(t){return arguments.length?(e=+t,u):e},u},t.forceSimulation=function(t){var n,e=1,r=.001,i=1-Math.pow(r,1/300),o=0,a=.6,u=zi(),c=Qe(s),f=O("tick","end");function s(){l(),f.call("tick",n),e<r&&(c.stop(),f.call("end",n))}function l(r){var c,f,s=t.length;void 0===r&&(r=1);for(var l=0;l<r;++l)for(e+=(o-e)*i,u.each((function(t){t(e)})),c=0;c<s;++c)null==(f=t[c]).fx?f.x+=f.vx*=a:(f.x=f.fx,f.vx=0),null==f.fy?f.y+=f.vy*=a:(f.y=f.fy,f.vy=0);return n}function h(){for(var n,e=0,r=t.length;e<r;++e){if((n=t[e]).index=e,null!=n.fx&&(n.x=n.fx),null!=n.fy&&(n.y=n.fy),isNaN(n.x)||isNaN(n.y)){var i=10*Math.sqrt(e),o=e*Ko;n.x=i*Math.cos(o),n.y=i*Math.sin(o)}(isNaN(n.vx)||isNaN(n.vy))&&(n.vx=n.vy=0)}}function d(n){return n.initialize&&n.initialize(t),n}return null==t&&(t=[]),h(),n={tick:l,restart:function(){return c.restart(s),n},stop:function(){return c.stop(),n},nodes:function(e){return arguments.length?(t=e,h(),u.each(d),n):t},alpha:function(t){return arguments.length?(e=+t,n):e},alphaMin:function(t){return arguments.length?(r=+t,n):r},alphaDecay:function(t){return arguments.length?(i=+t,n):+i},alphaTarget:function(t){return arguments.length?(o=+t,n):o},velocityDecay:function(t){return arguments.length?(a=1-t,n):1-a},force:function(t,e){return arguments.length>1?(null==e?u.remove(t):u.set(t,d(e)),n):u.get(t)},find:function(n,e,r){var i,o,a,u,c,f=0,s=t.length;for(null==r?r=1/0:r*=r,f=0;f<s;++f)(a=(i=n-(u=t[f]).x)*i+(o=e-u.y)*o)<r&&(c=u,r=a);return c},on:function(t,e){return arguments.length>1?(f.on(t,e),n):f.on(t)}}},t.forceX=function(t){var n,e,r,i=Lo(.1);function o(t){for(var i,o=0,a=n.length;o<a;++o)(i=n[o]).vx+=(r[o]-i.x)*e[o]*t}function a(){if(n){var o,a=n.length;for(e=new Array(a),r=new Array(a),o=0;o<a;++o)e[o]=isNaN(r[o]=+t(n[o],o,n))?0:+i(n[o],o,n)}}return"function"!=typeof t&&(t=Lo(null==t?0:+t)),o.initialize=function(t){n=t,a()},o.strength=function(t){return arguments.length?(i="function"==typeof t?t:Lo(+t),a(),o):i},o.x=function(n){return arguments.length?(t="function"==typeof n?n:Lo(+n),a(),o):t},o},t.forceY=function(t){var n,e,r,i=Lo(.1);function o(t){for(var i,o=0,a=n.length;o<a;++o)(i=n[o]).vy+=(r[o]-i.y)*e[o]*t}function a(){if(n){var o,a=n.length;for(e=new Array(a),r=new Array(a),o=0;o<a;++o)e[o]=isNaN(r[o]=+t(n[o],o,n))?0:+i(n[o],o,n)}}return"function"!=typeof t&&(t=Lo(null==t?0:+t)),o.initialize=function(t){n=t,a()},o.strength=function(t){return arguments.length?(i="function"==typeof t?t:Lo(+t),a(),o):i},o.y=function(n){return arguments.length?(t="function"==typeof n?n:Lo(+n),a(),o):t},o},t.formatDefaultLocale=ha,t.formatLocale=la,t.formatSpecifier=ra,t.geoAlbers=ms,t.geoAlbersUsa=function(){var t,n,e,r,i,o,a=ms(),u=bs().rotate([154,0]).center([-2,58.5]).parallels([55,65]),c=bs().rotate([157,0]).center([-3,19.9]).parallels([8,18]),f={point:function(t,n){o=[t,n]}};function s(t){var n=t[0],a=t[1];return o=null,e.point(n,a),o||(r.point(n,a),o)||(i.point(n,a),o)}function l(){return t=n=null,s}return s.invert=function(t){var n=a.scale(),e=a.translate(),r=(t[0]-e[0])/n,i=(t[1]-e[1])/n;return(i>=.12&&i<.234&&r>=-.425&&r<-.214?u:i>=.166&&i<.234&&r>=-.214&&r<-.115?c:a).invert(t)},s.stream=function(e){return t&&n===e?t:(r=[a.stream(n=e),u.stream(e),c.stream(e)],i=r.length,t={point:function(t,n){for(var e=-1;++e<i;)r[e].point(t,n)},sphere:function(){for(var t=-1;++t<i;)r[t].sphere()},lineStart:function(){for(var t=-1;++t<i;)r[t].lineStart()},lineEnd:function(){for(var t=-1;++t<i;)r[t].lineEnd()},polygonStart:function(){for(var t=-1;++t<i;)r[t].polygonStart()},polygonEnd:function(){for(var t=-1;++t<i;)r[t].polygonEnd()}});var r,i},s.precision=function(t){return arguments.length?(a.precision(t),u.precision(t),c.precision(t),l()):a.precision()},s.scale=function(t){return arguments.length?(a.scale(t),u.scale(.35*t),c.scale(t),s.translate(a.translate())):a.scale()},s.translate=function(t){if(!arguments.length)return a.translate();var n=a.scale(),o=+t[0],s=+t[1];return e=a.translate(t).clipExtent([[o-.455*n,s-.238*n],[o+.455*n,s+.238*n]]).stream(f),r=u.translate([o-.307*n,s+.201*n]).clipExtent([[o-.425*n+ma,s+.12*n+ma],[o-.214*n-ma,s+.234*n-ma]]).stream(f),i=c.translate([o-.205*n,s+.212*n]).clipExtent([[o-.214*n+ma,s+.166*n+ma],[o-.115*n-ma,s+.234*n-ma]]).stream(f),l()},s.fitExtent=function(t,n){return us(s,t,n)},s.fitSize=function(t,n){return cs(s,t,n)},s.fitWidth=function(t,n){return fs(s,t,n)},s.fitHeight=function(t,n){return ss(s,t,n)},s.scale(1070)},t.geoArea=function(t){return eu.reset(),Wa(t,ru),2*eu},t.geoAzimuthalEqualArea=function(){return vs(Ms).scale(124.75).clipAngle(179.999)},t.geoAzimuthalEqualAreaRaw=Ms,t.geoAzimuthalEquidistant=function(){return vs(Ns).scale(79.4188).clipAngle(179.999)},t.geoAzimuthalEquidistantRaw=Ns,t.geoBounds=function(t){var n,e,r,i,o,a,u;if(_u=yu=-(vu=gu=1/0),Mu=[],Wa(t,Iu),e=Mu.length){for(Mu.sort(Qu),n=1,o=[r=Mu[0]];n<e;++n)Ku(r,(i=Mu[n])[0])||Ku(r,i[1])?(Zu(r[0],i[1])>Zu(r[0],r[1])&&(r[1]=i[1]),Zu(i[0],r[1])>Zu(r[0],r[1])&&(r[0]=i[0])):o.push(r=i);for(a=-1/0,n=0,r=o[e=o.length-1];n<=e;r=i,++n)i=o[n],(u=Zu(r[1],i[0]))>a&&(a=u,vu=i[0],yu=r[1])}return Mu=Nu=null,vu===1/0||gu===1/0?[[NaN,NaN],[NaN,NaN]]:[[vu,gu],[yu,_u]]},t.geoCentroid=function(t){Tu=Au=Su=ku=Eu=Cu=Pu=zu=Ru=Du=qu=0,Wa(t,Ju);var n=Ru,e=Du,r=qu,i=n*n+e*e+r*r;return i<xa&&(n=Cu,e=Pu,r=zu,Au<ma&&(n=Su,e=ku,r=Eu),(i=n*n+e*e+r*r)<xa)?[NaN,NaN]:[Ca(e,n)*Aa,Ya(r/Oa(i))*Aa]},t.geoCircle=function(){var t,n,e=sc([0,0]),r=sc(90),i=sc(6),o={point:function(e,r){t.push(e=n(e,r)),e[0]*=Aa,e[1]*=Aa}};function a(){var a=e.apply(this,arguments),u=r.apply(this,arguments)*Sa,c=i.apply(this,arguments)*Sa;return t=[],n=dc(-a[0]*Sa,-a[1]*Sa,0).invert,_c(o,u,c,1),a={type:"Polygon",coordinates:[t]},t=n=null,a}return a.center=function(t){return arguments.length?(e="function"==typeof t?t:sc([+t[0],+t[1]]),a):e},a.radius=function(t){return arguments.length?(r="function"==typeof t?t:sc(+t),a):r},a.precision=function(t){return arguments.length?(i="function"==typeof t?t:sc(+t),a):i},a},t.geoClipAntimeridian=Pc,t.geoClipCircle=zc,t.geoClipExtent=function(){var t,n,e,r=0,i=0,o=960,a=500;return e={stream:function(e){return t&&n===e?t:t=qc(r,i,o,a)(n=e)},extent:function(u){return arguments.length?(r=+u[0][0],i=+u[0][1],o=+u[1][0],a=+u[1][1],t=n=null,e):[[r,i],[o,a]]}}},t.geoClipRectangle=qc,t.geoConicConformal=function(){return ys(ks).scale(109.5).parallels([30,30])},t.geoConicConformalRaw=ks,t.geoConicEqualArea=bs,t.geoConicEqualAreaRaw=_s,t.geoConicEquidistant=function(){return ys(Cs).scale(131.154).center([0,13.9389])},t.geoConicEquidistantRaw=Cs,t.geoContains=function(t,n){return(t&&$c.hasOwnProperty(t.type)?$c[t.type]:Zc)(t,n)},t.geoDistance=Gc,t.geoEqualEarth=function(){return vs(Ls).scale(177.158)},t.geoEqualEarthRaw=Ls,t.geoEquirectangular=function(){return vs(Es).scale(152.63)},t.geoEquirectangularRaw=Es,t.geoGnomonic=function(){return vs(Us).scale(144.049).clipAngle(60)},t.geoGnomonicRaw=Us,t.geoGraticule=of,t.geoGraticule10=function(){return of()()},t.geoIdentity=function(){var t,n,e,r,i,o,a,u=1,c=0,f=0,s=1,l=1,h=0,d=null,p=1,v=1,g=is({point:function(t,n){var e=b([t,n]);this.stream.point(e[0],e[1])}}),y=af;function _(){return p=u*s,v=u*l,o=a=null,b}function b(e){var r=e[0]*p,i=e[1]*v;if(h){var o=i*t-r*n;r=r*t+i*n,i=o}return[r+c,i+f]}return b.invert=function(e){var r=e[0]-c,i=e[1]-f;if(h){var o=i*t+r*n;r=r*t-i*n,i=o}return[r/p,i/v]},b.stream=function(t){return o&&a===t?o:o=g(y(a=t))},b.postclip=function(t){return arguments.length?(y=t,d=e=r=i=null,_()):y},b.clipExtent=function(t){return arguments.length?(y=null==t?(d=e=r=i=null,af):qc(d=+t[0][0],e=+t[0][1],r=+t[1][0],i=+t[1][1]),_()):null==d?null:[[d,e],[r,i]]},b.scale=function(t){return arguments.length?(u=+t,_()):u},b.translate=function(t){return arguments.length?(c=+t[0],f=+t[1],_()):[c,f]},b.angle=function(e){return arguments.length?(n=La(h=e%360*Sa),t=Pa(h),_()):h*Aa},b.reflectX=function(t){return arguments.length?(s=t?-1:1,_()):s<0},b.reflectY=function(t){return arguments.length?(l=t?-1:1,_()):l<0},b.fitExtent=function(t,n){return us(b,t,n)},b.fitSize=function(t,n){return cs(b,t,n)},b.fitWidth=function(t,n){return fs(b,t,n)},b.fitHeight=function(t,n){return ss(b,t,n)},b},t.geoInterpolate=function(t,n){var e=t[0]*Sa,r=t[1]*Sa,i=n[0]*Sa,o=n[1]*Sa,a=Pa(r),u=La(r),c=Pa(o),f=La(o),s=a*Pa(e),l=a*La(e),h=c*Pa(i),d=c*La(i),p=2*Ya(Oa(Ia(o-r)+a*c*Ia(i-e))),v=La(p),g=p?function(t){var n=La(t*=p)/v,e=La(p-t)/v,r=e*s+n*h,i=e*l+n*d,o=e*u+n*f;return[Ca(i,r)*Aa,Ca(o,Oa(r*r+i*i))*Aa]}:function(){return[e*Aa,r*Aa]};return g.distance=p,g},t.geoLength=jc,t.geoMercator=function(){return As(Ts).scale(961/Ta)},t.geoMercatorRaw=Ts,t.geoNaturalEarth1=function(){return vs(Os).scale(175.295)},t.geoNaturalEarth1Raw=Os,t.geoOrthographic=function(){return vs(Bs).scale(249.5).clipAngle(90+ma)},t.geoOrthographicRaw=Bs,t.geoPath=function(t,n){var e,r,i=4.5;function o(t){return t&&("function"==typeof i&&r.pointRadius(+i.apply(this,arguments)),Wa(t,e(r))),r.result()}return o.area=function(t){return Wa(t,e(df)),df.result()},o.measure=function(t){return Wa(t,e(Jf)),Jf.result()},o.bounds=function(t){return Wa(t,e(Af)),Af.result()},o.centroid=function(t){return Wa(t,e(Lf)),Lf.result()},o.projection=function(n){return arguments.length?(e=null==n?(t=null,af):(t=n).stream,o):t},o.context=function(t){return arguments.length?(r=null==t?(n=null,new es):new Vf(n=t),"function"!=typeof i&&r.pointRadius(i),o):n},o.pointRadius=function(t){return arguments.length?(i="function"==typeof t?t:(r.pointRadius(+t),+t),o):i},o.projection(t).context(n)},t.geoProjection=vs,t.geoProjectionMutator=gs,t.geoRotation=yc,t.geoStereographic=function(){return vs(Fs).scale(250).clipAngle(142)},t.geoStereographicRaw=Fs,t.geoStream=Wa,t.geoTransform=function(t){return{stream:is(t)}},t.geoTransverseMercator=function(){var t=As(Ys),n=t.center,e=t.rotate;return t.center=function(t){return arguments.length?n([-t[1],t[0]]):[(t=n())[1],-t[0]]},t.rotate=function(t){return arguments.length?e([t[0],t[1],t.length>2?t[2]+90:90]):[(t=e())[0],t[1],t[2]-90]},e([0,0,90]).scale(159.155)},t.geoTransverseMercatorRaw=Ys,t.gray=function(t,n){return new Cn(t,0,0,null==n?1:n)},t.hcl=Ln,t.hierarchy=Vs,t.histogram=function(){var t=v,n=s,e=M;function r(r){var o,a,u=r.length,c=new Array(u);for(o=0;o<u;++o)c[o]=t(r[o],o,r);var f=n(c),s=f[0],l=f[1],h=e(c,s,l);Array.isArray(h)||(h=w(s,l,h),h=g(Math.ceil(s/h)*h,l,h));for(var d=h.length;h[0]<=s;)h.shift(),--d;for(;h[d-1]>l;)h.pop(),--d;var p,v=new Array(d+1);for(o=0;o<=d;++o)(p=v[o]=[]).x0=o>0?h[o-1]:s,p.x1=o<d?h[o]:l;for(o=0;o<u;++o)s<=(a=c[o])&&a<=l&&v[i(h,a,0,d)].push(r[o]);return v}return r.value=function(n){return arguments.length?(t="function"==typeof n?n:p(n),r):t},r.domain=function(t){return arguments.length?(n="function"==typeof t?t:p([t[0],t[1]]),r):n},r.thresholds=function(t){return arguments.length?(e="function"==typeof t?t:Array.isArray(t)?p(h.call(t)):p(t),r):e},r},t.hsl=mn,t.html=Do,t.image=function(t,n){return new Promise((function(e,r){var i=new Image;for(var o in n)i[o]=n[o];i.onerror=r,i.onload=function(){e(i)},i.src=t}))},t.interpolate=pe,t.interpolateArray=function(t,n){return(ae(n)?oe:ue)(t,n)},t.interpolateBasis=Wn,t.interpolateBasisClosed=Zn,t.interpolateBlues=dg,t.interpolateBrBG=Tv,t.interpolateBuGn=Hv,t.interpolateBuPu=Xv,t.interpolateCividis=function(t){return t=Math.max(0,Math.min(1,t)),"rgb("+Math.max(0,Math.min(255,Math.round(-4.54-t*(35.34-t*(2381.73-t*(6402.7-t*(7024.72-2710.57*t)))))))+", "+Math.max(0,Math.min(255,Math.round(32.49+t*(170.73+t*(52.82-t*(131.46-t*(176.58-67.37*t)))))))+", "+Math.max(0,Math.min(255,Math.round(81.24+t*(442.36-t*(2482.43-t*(6167.24-t*(6614.94-2475.67*t)))))))+")"},t.interpolateCool=Ag,t.interpolateCubehelix=Oe,t.interpolateCubehelixDefault=Ng,t.interpolateCubehelixLong=Be,t.interpolateDate=ce,t.interpolateDiscrete=function(t){var n=t.length;return function(e){return t[Math.max(0,Math.min(n-1,Math.floor(e*n)))]}},t.interpolateGnBu=Gv,t.interpolateGreens=vg,t.interpolateGreys=yg,t.interpolateHcl=Re,t.interpolateHclLong=De,t.interpolateHsl=Ce,t.interpolateHslLong=Pe,t.interpolateHue=function(t,n){var e=Jn(+t,+n);return function(t){var n=e(t);return n-360*Math.floor(n/360)}},t.interpolateInferno=Dg,t.interpolateLab=function(t,n){var e=te((t=En(t)).l,(n=En(n)).l),r=te(t.a,n.a),i=te(t.b,n.b),o=te(t.opacity,n.opacity);return function(n){return t.l=e(n),t.a=r(n),t.b=i(n),t.opacity=o(n),t+""}},t.interpolateMagma=Rg,t.interpolateNumber=fe,t.interpolateNumberArray=oe,t.interpolateObject=se,t.interpolateOrRd=Wv,t.interpolateOranges=Mg,t.interpolatePRGn=Sv,t.interpolatePiYG=Ev,t.interpolatePlasma=qg,t.interpolatePuBu=Jv,t.interpolatePuBuGn=Qv,t.interpolatePuOr=Pv,t.interpolatePuRd=ng,t.interpolatePurples=bg,t.interpolateRainbow=function(t){(t<0||t>1)&&(t-=Math.floor(t));var n=Math.abs(t-.5);return Sg.h=360*t-100,Sg.s=1.5-1.5*n,Sg.l=.8-.9*n,Sg+""},t.interpolateRdBu=Rv,t.interpolateRdGy=qv,t.interpolateRdPu=rg,t.interpolateRdYlBu=Uv,t.interpolateRdYlGn=Bv,t.interpolateReds=xg,t.interpolateRgb=ne,t.interpolateRgbBasis=re,t.interpolateRgbBasisClosed=ie,t.interpolateRound=ve,t.interpolateSinebow=function(t){var n;return t=(.5-t)*Math.PI,kg.r=255*(n=Math.sin(t))*n,kg.g=255*(n=Math.sin(t+Eg))*n,kg.b=255*(n=Math.sin(t+Cg))*n,kg+""},t.interpolateSpectral=Yv,t.interpolateString=de,t.interpolateTransformCss=Ne,t.interpolateTransformSvg=Te,t.interpolateTurbo=function(t){return t=Math.max(0,Math.min(1,t)),"rgb("+Math.max(0,Math.min(255,Math.round(34.61+t*(1172.33-t*(10793.56-t*(33300.12-t*(38394.49-14825.05*t)))))))+", "+Math.max(0,Math.min(255,Math.round(23.31+t*(557.33+t*(1225.33-t*(3574.96-t*(1073.77+707.56*t)))))))+", "+Math.max(0,Math.min(255,Math.round(27.2+t*(3211.1-t*(15327.97-t*(27814-t*(22569.18-6838.66*t)))))))+")"},t.interpolateViridis=zg,t.interpolateWarm=Tg,t.interpolateYlGn=ug,t.interpolateYlGnBu=og,t.interpolateYlOrBr=fg,t.interpolateYlOrRd=lg,t.interpolateZoom=ke,t.interrupt=fr,t.interval=function(t,n,e){var r=new Ze,i=n;return null==n?(r.restart(t,n,e),r):(n=+n,e=null==e?$e():+e,r.restart((function o(a){a+=i,r.restart(o,i+=n,e),t(a)}),n,e),r)},t.isoFormat=Zp,t.isoParse=Qp,t.json=function(t,n){return fetch(t,n).then(Po)},t.keys=function(t){var n=[];for(var e in t)n.push(e);return n},t.lab=En,t.lch=function(t,n,e,r){return 1===arguments.length?qn(t):new Un(e,n,t,null==r?1:r)},t.line=oy,t.lineRadial=dy,t.linkHorizontal=function(){return by(my)},t.linkRadial=function(){var t=by(wy);return t.angle=t.x,delete t.x,t.radius=t.y,delete t.y,t},t.linkVertical=function(){return by(xy)},t.local=Ct,t.map=zi,t.matcher=Q,t.max=T,t.mean=function(t,n){var e,r=t.length,i=r,o=-1,a=0;if(null==n)for(;++o<r;)isNaN(e=u(t[o]))?--i:a+=e;else for(;++o<r;)isNaN(e=u(n(t[o],o,t)))?--i:a+=e;if(i)return a/i},t.median=function(t,e){var r,i=t.length,o=-1,a=[];if(null==e)for(;++o<i;)isNaN(r=u(t[o]))||a.push(r);else for(;++o<i;)isNaN(r=u(e(t[o],o,t)))||a.push(r);return N(a.sort(n),.5)},t.merge=A,t.min=S,t.mouse=Dt,t.namespace=X,t.namespaces=j,t.nest=function(){var t,n,e,r=[],i=[];function o(e,i,a,u){if(i>=r.length)return null!=t&&e.sort(t),null!=n?n(e):e;for(var c,f,s,l=-1,h=e.length,d=r[i++],p=zi(),v=a();++l<h;)(s=p.get(c=d(f=e[l])+""))?s.push(f):p.set(c,[f]);return p.each((function(t,n){u(v,n,o(t,i,a,u))})),v}return e={object:function(t){return o(t,0,Ri,Di)},map:function(t){return o(t,0,qi,Li)},entries:function(t){return function t(e,o){if(++o>r.length)return e;var a,u=i[o-1];return null!=n&&o>=r.length?a=e.entries():(a=[],e.each((function(n,e){a.push({key:e,values:t(n,o)})}))),null!=u?a.sort((function(t,n){return u(t.key,n.key)})):a}(o(t,0,qi,Li),0)},key:function(t){return r.push(t),e},sortKeys:function(t){return i[r.length-1]=t,e},sortValues:function(n){return t=n,e},rollup:function(t){return n=t,e}}},t.now=$e,t.pack=function(){var t=null,n=1,e=1,r=dl;function i(i){return i.x=n/2,i.y=e/2,t?i.eachBefore(gl(t)).eachAfter(yl(r,.5)).eachBefore(_l(1)):i.eachBefore(gl(vl)).eachAfter(yl(dl,1)).eachAfter(yl(r,i.r/Math.min(n,e))).eachBefore(_l(Math.min(n,e)/(2*i.r))),i}return i.radius=function(n){return arguments.length?(t=ll(n),i):t},i.size=function(t){return arguments.length?(n=+t[0],e=+t[1],i):[n,e]},i.padding=function(t){return arguments.length?(r="function"==typeof t?t:pl(+t),i):r},i},t.packEnclose=Ks,t.packSiblings=function(t){return sl(t),t},t.pairs=function(t,n){null==n&&(n=a);for(var e=0,r=t.length-1,i=t[0],o=new Array(r<0?0:r);e<r;)o[e]=n(i,i=t[++e]);return o},t.partition=function(){var t=1,n=1,e=0,r=!1;function i(i){var o=i.height+1;return i.x0=i.y0=e,i.x1=t,i.y1=n/o,i.eachBefore(function(t,n){return function(r){r.children&&ml(r,r.x0,t*(r.depth+1)/n,r.x1,t*(r.depth+2)/n);var i=r.x0,o=r.y0,a=r.x1-e,u=r.y1-e;a<i&&(i=a=(i+a)/2),u<o&&(o=u=(o+u)/2),r.x0=i,r.y0=o,r.x1=a,r.y1=u}}(n,o)),r&&i.eachBefore(bl),i}return i.round=function(t){return arguments.length?(r=!!t,i):r},i.size=function(e){return arguments.length?(t=+e[0],n=+e[1],i):[t,n]},i.padding=function(t){return arguments.length?(e=+t,i):e},i},t.path=Ti,t.permute=function(t,n){for(var e=n.length,r=new Array(e);e--;)r[e]=t[n[e]];return r},t.pie=function(){var t=cy,n=uy,e=null,r=Lg(0),i=Lg(Gg),o=Lg(0);function a(a){var u,c,f,s,l,h=a.length,d=0,p=new Array(h),v=new Array(h),g=+r.apply(this,arguments),y=Math.min(Gg,Math.max(-Gg,i.apply(this,arguments)-g)),_=Math.min(Math.abs(y)/h,o.apply(this,arguments)),b=_*(y<0?-1:1);for(u=0;u<h;++u)(l=v[p[u]=u]=+t(a[u],u,a))>0&&(d+=l);for(null!=n?p.sort((function(t,e){return n(v[t],v[e])})):null!=e&&p.sort((function(t,n){return e(a[t],a[n])})),u=0,f=d?(y-h*b)/d:0;u<h;++u,g=s)c=p[u],s=g+((l=v[c])>0?l*f:0)+b,v[c]={data:a[c],index:u,value:l,startAngle:g,endAngle:s,padAngle:_};return v}return a.value=function(n){return arguments.length?(t="function"==typeof n?n:Lg(+n),a):t},a.sortValues=function(t){return arguments.length?(n=t,e=null,a):n},a.sort=function(t){return arguments.length?(e=t,n=null,a):e},a.startAngle=function(t){return arguments.length?(r="function"==typeof t?t:Lg(+t),a):r},a.endAngle=function(t){return arguments.length?(i="function"==typeof t?t:Lg(+t),a):i},a.padAngle=function(t){return arguments.length?(o="function"==typeof t?t:Lg(+t),a):o},a},t.piecewise=function(t,n){for(var e=0,r=n.length-1,i=n[0],o=new Array(r<0?0:r);e<r;)o[e]=t(i,i=n[++e]);return function(t){var n=Math.max(0,Math.min(r-1,Math.floor(t*=r)));return o[n](t-n)}},t.pointRadial=vy,t.polygonArea=function(t){for(var n,e=-1,r=t.length,i=t[r-1],o=0;++e<r;)n=i,i=t[e],o+=n[1]*i[0]-n[0]*i[1];return o/2},t.polygonCentroid=function(t){for(var n,e,r=-1,i=t.length,o=0,a=0,u=t[i-1],c=0;++r<i;)n=u,u=t[r],c+=e=n[0]*u[1]-u[0]*n[1],o+=(n[0]+u[0])*e,a+=(n[1]+u[1])*e;return[o/(c*=3),a/c]},t.polygonContains=function(t,n){for(var e,r,i=t.length,o=t[i-1],a=n[0],u=n[1],c=o[0],f=o[1],s=!1,l=0;l<i;++l)e=(o=t[l])[0],(r=o[1])>u!=f>u&&a<(c-e)*(u-r)/(f-r)+e&&(s=!s),c=e,f=r;return s},t.polygonHull=function(t){if((e=t.length)<3)return null;var n,e,r=new Array(e),i=new Array(e);for(n=0;n<e;++n)r[n]=[+t[n][0],+t[n][1],n];for(r.sort(Ul),n=0;n<e;++n)i[n]=[r[n][0],-r[n][1]];var o=Ol(r),a=Ol(i),u=a[0]===o[0],c=a[a.length-1]===o[o.length-1],f=[];for(n=o.length-1;n>=0;--n)f.push(t[r[o[n]][2]]);for(n=+u;n<a.length-c;++n)f.push(t[r[a[n]][2]]);return f},t.polygonLength=function(t){for(var n,e,r=-1,i=t.length,o=t[i-1],a=o[0],u=o[1],c=0;++r<i;)n=a,e=u,n-=a=(o=t[r])[0],e-=u=o[1],c+=Math.sqrt(n*n+e*e);return c},t.precisionFixed=da,t.precisionPrefix=pa,t.precisionRound=va,t.quadtree=Io,t.quantile=N,t.quantize=function(t,n){for(var e=new Array(n),r=0;r<n;++r)e[r]=t(r/(n-1));return e},t.radialArea=py,t.radialLine=dy,t.randomBates=jl,t.randomExponential=Xl,t.randomIrwinHall=Hl,t.randomLogNormal=Il,t.randomNormal=Yl,t.randomUniform=Fl,t.range=g,t.rgb=dn,t.ribbon=function(){var t=Ai,n=Si,e=ki,r=Ei,i=Ci,o=null;function a(){var a,u=bi.call(arguments),c=t.apply(this,u),f=n.apply(this,u),s=+e.apply(this,(u[0]=c,u)),l=r.apply(this,u)-vi,h=i.apply(this,u)-vi,d=s*hi(l),p=s*di(l),v=+e.apply(this,(u[0]=f,u)),g=r.apply(this,u)-vi,y=i.apply(this,u)-vi;if(o||(o=a=Ti()),o.moveTo(d,p),o.arc(0,0,s,l,h),l===g&&h===y||(o.quadraticCurveTo(0,0,v*hi(g),v*di(g)),o.arc(0,0,v,g,y)),o.quadraticCurveTo(0,0,d,p),o.closePath(),a)return o=null,a+""||null}return a.radius=function(t){return arguments.length?(e="function"==typeof t?t:mi(+t),a):e},a.startAngle=function(t){return arguments.length?(r="function"==typeof t?t:mi(+t),a):r},a.endAngle=function(t){return arguments.length?(i="function"==typeof t?t:mi(+t),a):i},a.source=function(n){return arguments.length?(t=n,a):t},a.target=function(t){return arguments.length?(n=t,a):n},a.context=function(t){return arguments.length?(o=null==t?null:t,a):o},a},t.scaleBand=Jl,t.scaleDiverging=function t(){var n=lh(sv()(eh));return n.copy=function(){return cv(n,t())},Gl.apply(n,arguments)},t.scaleDivergingLog=function t(){var n=bh(sv()).domain([.1,1,10]);return n.copy=function(){return cv(n,t()).base(n.base())},Gl.apply(n,arguments)},t.scaleDivergingPow=lv,t.scaleDivergingSqrt=function(){return lv.apply(null,arguments).exponent(.5)},t.scaleDivergingSymlog=function t(){var n=wh(sv());return n.copy=function(){return cv(n,t()).constant(n.constant())},Gl.apply(n,arguments)},t.scaleIdentity=function t(n){var e;function r(t){return isNaN(t=+t)?e:t}return r.invert=r,r.domain=r.range=function(t){return arguments.length?(n=Wl.call(t,th),r):n.slice()},r.unknown=function(t){return arguments.length?(e=t,r):e},r.copy=function(){return t(n).unknown(e)},n=arguments.length?Wl.call(n,th):[0,1],lh(r)},t.scaleImplicit=Ql,t.scaleLinear=function t(){var n=fh(eh,eh);return n.copy=function(){return uh(n,t())},Vl.apply(n,arguments),lh(n)},t.scaleLog=function t(){var n=bh(ch()).domain([1,10]);return n.copy=function(){return uh(n,t()).base(n.base())},Vl.apply(n,arguments),n},t.scaleOrdinal=Kl,t.scalePoint=function(){return function t(n){var e=n.copy;return n.padding=n.paddingOuter,delete n.paddingInner,delete n.paddingOuter,n.copy=function(){return t(e())},n}(Jl.apply(null,arguments).paddingInner(1))},t.scalePow=Sh,t.scaleQuantile=function t(){var e,r=[],o=[],a=[];function u(){var t=0,n=Math.max(1,o.length);for(a=new Array(n-1);++t<n;)a[t-1]=N(r,t/n);return c}function c(t){return isNaN(t=+t)?e:o[i(a,t)]}return c.invertExtent=function(t){var n=o.indexOf(t);return n<0?[NaN,NaN]:[n>0?a[n-1]:r[0],n<a.length?a[n]:r[r.length-1]]},c.domain=function(t){if(!arguments.length)return r.slice();r=[];for(var e,i=0,o=t.length;i<o;++i)null==(e=t[i])||isNaN(e=+e)||r.push(e);return r.sort(n),u()},c.range=function(t){return arguments.length?(o=Zl.call(t),u()):o.slice()},c.unknown=function(t){return arguments.length?(e=t,c):e},c.quantiles=function(){return a.slice()},c.copy=function(){return t().domain(r).range(o).unknown(e)},Vl.apply(c,arguments)},t.scaleQuantize=function t(){var n,e=0,r=1,o=1,a=[.5],u=[0,1];function c(t){return t<=t?u[i(a,t,0,o)]:n}function f(){var t=-1;for(a=new Array(o);++t<o;)a[t]=((t+1)*r-(t-o)*e)/(o+1);return c}return c.domain=function(t){return arguments.length?(e=+t[0],r=+t[1],f()):[e,r]},c.range=function(t){return arguments.length?(o=(u=Zl.call(t)).length-1,f()):u.slice()},c.invertExtent=function(t){var n=u.indexOf(t);return n<0?[NaN,NaN]:n<1?[e,a[0]]:n>=o?[a[o-1],r]:[a[n-1],a[n]]},c.unknown=function(t){return arguments.length?(n=t,c):c},c.thresholds=function(){return a.slice()},c.copy=function(){return t().domain([e,r]).range(u).unknown(n)},Vl.apply(lh(c),arguments)},t.scaleSequential=function t(){var n=lh(uv()(eh));return n.copy=function(){return cv(n,t())},Gl.apply(n,arguments)},t.scaleSequentialLog=function t(){var n=bh(uv()).domain([1,10]);return n.copy=function(){return cv(n,t()).base(n.base())},Gl.apply(n,arguments)},t.scaleSequentialPow=fv,t.scaleSequentialQuantile=function t(){var e=[],r=eh;function o(t){if(!isNaN(t=+t))return r((i(e,t)-1)/(e.length-1))}return o.domain=function(t){if(!arguments.length)return e.slice();e=[];for(var r,i=0,a=t.length;i<a;++i)null==(r=t[i])||isNaN(r=+r)||e.push(r);return e.sort(n),o},o.interpolator=function(t){return arguments.length?(r=t,o):r},o.copy=function(){return t(r).domain(e)},Gl.apply(o,arguments)},t.scaleSequentialSqrt=function(){return fv.apply(null,arguments).exponent(.5)},t.scaleSequentialSymlog=function t(){var n=wh(uv());return n.copy=function(){return cv(n,t()).constant(n.constant())},Gl.apply(n,arguments)},t.scaleSqrt=function(){return Sh.apply(null,arguments).exponent(.5)},t.scaleSymlog=function t(){var n=wh(ch());return n.copy=function(){return uh(n,t()).constant(n.constant())},Vl.apply(n,arguments)},t.scaleThreshold=function t(){var n,e=[.5],r=[0,1],o=1;function a(t){return t<=t?r[i(e,t,0,o)]:n}return a.domain=function(t){return arguments.length?(e=Zl.call(t),o=Math.min(e.length,r.length-1),a):e.slice()},a.range=function(t){return arguments.length?(r=Zl.call(t),o=Math.min(e.length,r.length-1),a):r.slice()},a.invertExtent=function(t){var n=r.indexOf(t);return[e[n-1],e[n]]},a.unknown=function(t){return arguments.length?(n=t,a):n},a.copy=function(){return t().domain(e).range(r).unknown(n)},Vl.apply(a,arguments)},t.scaleTime=function(){return Vl.apply(av(ad,id,jh,Yh,Bh,Uh,qh,Ph,t.timeFormat).domain([new Date(2e3,0,1),new Date(2e3,0,2)]),arguments)},t.scaleUtc=function(){return Vl.apply(av(Pd,Ed,vd,hd,sd,cd,qh,Ph,t.utcFormat).domain([Date.UTC(2e3,0,1),Date.UTC(2e3,0,2)]),arguments)},t.scan=function(t,e){if(r=t.length){var r,i,o=0,a=0,u=t[a];for(null==e&&(e=n);++o<r;)(e(i=t[o],u)<0||0!==e(u,u))&&(u=i,a=o);return 0===e(u,u)?a:void 0}},t.schemeAccent=pv,t.schemeBlues=hg,t.schemeBrBG=Nv,t.schemeBuGn=Iv,t.schemeBuPu=jv,t.schemeCategory10=dv,t.schemeDark2=vv,t.schemeGnBu=Vv,t.schemeGreens=pg,t.schemeGreys=gg,t.schemeOrRd=$v,t.schemeOranges=wg,t.schemePRGn=Av,t.schemePaired=gv,t.schemePastel1=yv,t.schemePastel2=_v,t.schemePiYG=kv,t.schemePuBu=Kv,t.schemePuBuGn=Zv,t.schemePuOr=Cv,t.schemePuRd=tg,t.schemePurples=_g,t.schemeRdBu=zv,t.schemeRdGy=Dv,t.schemeRdPu=eg,t.schemeRdYlBu=Lv,t.schemeRdYlGn=Ov,t.schemeReds=mg,t.schemeSet1=bv,t.schemeSet2=mv,t.schemeSet3=xv,t.schemeSpectral=Fv,t.schemeTableau10=wv,t.schemeYlGn=ag,t.schemeYlGnBu=ig,t.schemeYlOrBr=cg,t.schemeYlOrRd=sg,t.select=kt,t.selectAll=function(t){return"string"==typeof t?new At([document.querySelectorAll(t)],[document.documentElement]):new At([null==t?[]:t],Tt)},t.selection=St,t.selector=$,t.selectorAll=Z,t.set=Bi,t.shuffle=function(t,n,e){for(var r,i,o=(null==e?t.length:e)-(n=null==n?0:+n);o;)i=Math.random()*o--|0,r=t[o+n],t[o+n]=t[i+n],t[i+n]=r;return t},t.stack=function(){var t=Lg([]),n=b_,e=__,r=m_;function i(i){var o,a,u=t.apply(this,arguments),c=i.length,f=u.length,s=new Array(f);for(o=0;o<f;++o){for(var l,h=u[o],d=s[o]=new Array(c),p=0;p<c;++p)d[p]=l=[0,+r(i[p],h,p,i)],l.data=i[p];d.key=h}for(o=0,a=n(s);o<f;++o)s[a[o]].index=o;return e(s,a),s}return i.keys=function(n){return arguments.length?(t="function"==typeof n?n:Lg(gy.call(n)),i):t},i.value=function(t){return arguments.length?(r="function"==typeof t?t:Lg(+t),i):r},i.order=function(t){return arguments.length?(n=null==t?b_:"function"==typeof t?t:Lg(gy.call(t)),i):n},i.offset=function(t){return arguments.length?(e=null==t?__:t,i):e},i},t.stackOffsetDiverging=function(t,n){if((u=t.length)>0)for(var e,r,i,o,a,u,c=0,f=t[n[0]].length;c<f;++c)for(o=a=0,e=0;e<u;++e)(i=(r=t[n[e]][c])[1]-r[0])>0?(r[0]=o,r[1]=o+=i):i<0?(r[1]=a,r[0]=a+=i):(r[0]=0,r[1]=i)},t.stackOffsetExpand=function(t,n){if((r=t.length)>0){for(var e,r,i,o=0,a=t[0].length;o<a;++o){for(i=e=0;e<r;++e)i+=t[e][o][1]||0;if(i)for(e=0;e<r;++e)t[e][o][1]/=i}__(t,n)}},t.stackOffsetNone=__,t.stackOffsetSilhouette=function(t,n){if((e=t.length)>0){for(var e,r=0,i=t[n[0]],o=i.length;r<o;++r){for(var a=0,u=0;a<e;++a)u+=t[a][r][1]||0;i[r][1]+=i[r][0]=-u/2}__(t,n)}},t.stackOffsetWiggle=function(t,n){if((i=t.length)>0&&(r=(e=t[n[0]]).length)>0){for(var e,r,i,o=0,a=1;a<r;++a){for(var u=0,c=0,f=0;u<i;++u){for(var s=t[n[u]],l=s[a][1]||0,h=(l-(s[a-1][1]||0))/2,d=0;d<u;++d){var p=t[n[d]];h+=(p[a][1]||0)-(p[a-1][1]||0)}c+=l,f+=h*l}e[a-1][1]+=e[a-1][0]=o,c&&(o-=f/c)}e[a-1][1]+=e[a-1][0]=o,__(t,n)}},t.stackOrderAppearance=x_,t.stackOrderAscending=M_,t.stackOrderDescending=function(t){return M_(t).reverse()},t.stackOrderInsideOut=function(t){var n,e,r=t.length,i=t.map(N_),o=x_(t),a=0,u=0,c=[],f=[];for(n=0;n<r;++n)e=o[n],a<u?(a+=i[e],c.push(e)):(u+=i[e],f.push(e));return f.reverse().concat(c)},t.stackOrderNone=b_,t.stackOrderReverse=function(t){return b_(t).reverse()},t.stratify=function(){var t=Ml,n=Nl;function e(e){var r,i,o,a,u,c,f,s=e.length,l=new Array(s),h={};for(i=0;i<s;++i)r=e[i],u=l[i]=new Zs(r),null!=(c=t(r,i,e))&&(c+="")&&(h[f="$"+(u.id=c)]=f in h?wl:u);for(i=0;i<s;++i)if(u=l[i],null!=(c=n(e[i],i,e))&&(c+="")){if(!(a=h["$"+c]))throw new Error("missing: "+c);if(a===wl)throw new Error("ambiguous: "+c);a.children?a.children.push(u):a.children=[u],u.parent=a}else{if(o)throw new Error("multiple roots");o=u}if(!o)throw new Error("no root");if(o.parent=xl,o.eachBefore((function(t){t.depth=t.parent.depth+1,--s})).eachBefore(Ws),o.parent=null,s>0)throw new Error("cycle");return o}return e.id=function(n){return arguments.length?(t=hl(n),e):t},e.parentId=function(t){return arguments.length?(n=hl(t),e):n},e},t.style=it,t.sum=function(t,n){var e,r=t.length,i=-1,o=0;if(null==n)for(;++i<r;)(e=+t[i])&&(o+=e);else for(;++i<r;)(e=+n(t[i],i,t))&&(o+=e);return o},t.svg=qo,t.symbol=function(){var t=Lg(My),n=Lg(64),e=null;function r(){var r;if(e||(e=r=Ti()),t.apply(this,arguments).draw(e,+n.apply(this,arguments)),r)return e=null,r+""||null}return r.type=function(n){return arguments.length?(t="function"==typeof n?n:Lg(n),r):t},r.size=function(t){return arguments.length?(n="function"==typeof t?t:Lg(+t),r):n},r.context=function(t){return arguments.length?(e=null==t?null:t,r):e},r},t.symbolCircle=My,t.symbolCross=Ny,t.symbolDiamond=Sy,t.symbolSquare=zy,t.symbolStar=Py,t.symbolTriangle=Dy,t.symbolWye=Oy,t.symbols=By,t.text=So,t.thresholdFreedmanDiaconis=function(t,e,r){return t=d.call(t,u).sort(n),Math.ceil((r-e)/(2*(N(t,.75)-N(t,.25))*Math.pow(t.length,-1/3)))},t.thresholdScott=function(t,n,e){return Math.ceil((e-n)/(3.5*f(t)*Math.pow(t.length,-1/3)))},t.thresholdSturges=M,t.tickFormat=sh,t.tickIncrement=x,t.tickStep=w,t.ticks=m,t.timeDay=Yh,t.timeDays=Ih,t.timeFormatDefaultLocale=Wp,t.timeFormatLocale=Ld,t.timeFriday=Wh,t.timeFridays=ed,t.timeHour=Bh,t.timeHours=Fh,t.timeInterval=Ch,t.timeMillisecond=Ph,t.timeMilliseconds=zh,t.timeMinute=Uh,t.timeMinutes=Oh,t.timeMonday=Xh,t.timeMondays=Kh,t.timeMonth=id,t.timeMonths=od,t.timeSaturday=Zh,t.timeSaturdays=rd,t.timeSecond=qh,t.timeSeconds=Lh,t.timeSunday=jh,t.timeSundays=Qh,t.timeThursday=$h,t.timeThursdays=nd,t.timeTuesday=Vh,t.timeTuesdays=Jh,t.timeWednesday=Gh,t.timeWednesdays=td,t.timeWeek=jh,t.timeWeeks=Qh,t.timeYear=ad,t.timeYears=ud,t.timeout=er,t.timer=Qe,t.timerFlush=Ke,t.touch=qt,t.touches=function(t,n){null==n&&(n=zt().touches);for(var e=0,r=n?n.length:0,i=new Array(r);e<r;++e)i[e]=Rt(t,n[e]);return i},t.transition=gr,t.transpose=k,t.tree=function(){var t=Tl,n=1,e=1,r=null;function i(i){var c=function(t){for(var n,e,r,i,o,a=new Cl(t,0),u=[a];n=u.pop();)if(r=n._.children)for(n.children=new Array(o=r.length),i=o-1;i>=0;--i)u.push(e=n.children[i]=new Cl(r[i],i)),e.parent=n;return(a.parent=new Cl(null,0)).children=[a],a}(i);if(c.eachAfter(o),c.parent.m=-c.z,c.eachBefore(a),r)i.eachBefore(u);else{var f=i,s=i,l=i;i.eachBefore((function(t){t.x<f.x&&(f=t),t.x>s.x&&(s=t),t.depth>l.depth&&(l=t)}));var h=f===s?1:t(f,s)/2,d=h-f.x,p=n/(s.x+h+d),v=e/(l.depth||1);i.eachBefore((function(t){t.x=(t.x+d)*p,t.y=t.depth*v}))}return i}function o(n){var e=n.children,r=n.parent.children,i=n.i?r[n.i-1]:null;if(e){!function(t){for(var n,e=0,r=0,i=t.children,o=i.length;--o>=0;)(n=i[o]).z+=e,n.m+=e,e+=n.s+(r+=n.c)}(n);var o=(e[0].z+e[e.length-1].z)/2;i?(n.z=i.z+t(n._,i._),n.m=n.z-o):n.z=o}else i&&(n.z=i.z+t(n._,i._));n.parent.A=function(n,e,r){if(e){for(var i,o=n,a=n,u=e,c=o.parent.children[0],f=o.m,s=a.m,l=u.m,h=c.m;u=Sl(u),o=Al(o),u&&o;)c=Al(c),(a=Sl(a)).a=n,(i=u.z+l-o.z-f+t(u._,o._))>0&&(kl(El(u,n,r),n,i),f+=i,s+=i),l+=u.m,f+=o.m,h+=c.m,s+=a.m;u&&!Sl(a)&&(a.t=u,a.m+=l-s),o&&!Al(c)&&(c.t=o,c.m+=f-h,r=n)}return r}(n,i,n.parent.A||r[0])}function a(t){t._.x=t.z+t.parent.m,t.m+=t.parent.m}function u(t){t.x*=n,t.y=t.depth*e}return i.separation=function(n){return arguments.length?(t=n,i):t},i.size=function(t){return arguments.length?(r=!1,n=+t[0],e=+t[1],i):r?null:[n,e]},i.nodeSize=function(t){return arguments.length?(r=!0,n=+t[0],e=+t[1],i):r?[n,e]:null},i},t.treemap=function(){var t=Dl,n=!1,e=1,r=1,i=[0],o=dl,a=dl,u=dl,c=dl,f=dl;function s(t){return t.x0=t.y0=0,t.x1=e,t.y1=r,t.eachBefore(l),i=[0],n&&t.eachBefore(bl),t}function l(n){var e=i[n.depth],r=n.x0+e,s=n.y0+e,l=n.x1-e,h=n.y1-e;l<r&&(r=l=(r+l)/2),h<s&&(s=h=(s+h)/2),n.x0=r,n.y0=s,n.x1=l,n.y1=h,n.children&&(e=i[n.depth+1]=o(n)/2,r+=f(n)-e,s+=a(n)-e,(l-=u(n)-e)<r&&(r=l=(r+l)/2),(h-=c(n)-e)<s&&(s=h=(s+h)/2),t(n,r,s,l,h))}return s.round=function(t){return arguments.length?(n=!!t,s):n},s.size=function(t){return arguments.length?(e=+t[0],r=+t[1],s):[e,r]},s.tile=function(n){return arguments.length?(t=hl(n),s):t},s.padding=function(t){return arguments.length?s.paddingInner(t).paddingOuter(t):s.paddingInner()},s.paddingInner=function(t){return arguments.length?(o="function"==typeof t?t:pl(+t),s):o},s.paddingOuter=function(t){return arguments.length?s.paddingTop(t).paddingRight(t).paddingBottom(t).paddingLeft(t):s.paddingTop()},s.paddingTop=function(t){return arguments.length?(a="function"==typeof t?t:pl(+t),s):a},s.paddingRight=function(t){return arguments.length?(u="function"==typeof t?t:pl(+t),s):u},s.paddingBottom=function(t){return arguments.length?(c="function"==typeof t?t:pl(+t),s):c},s.paddingLeft=function(t){return arguments.length?(f="function"==typeof t?t:pl(+t),s):f},s},t.treemapBinary=function(t,n,e,r,i){var o,a,u=t.children,c=u.length,f=new Array(c+1);for(f[0]=a=o=0;o<c;++o)f[o+1]=a+=u[o].value;!function t(n,e,r,i,o,a,c){if(n>=e-1){var s=u[n];return s.x0=i,s.y0=o,s.x1=a,void(s.y1=c)}for(var l=f[n],h=r/2+l,d=n+1,p=e-1;d<p;){var v=d+p>>>1;f[v]<h?d=v+1:p=v}h-f[d-1]<f[d]-h&&n+1<d&&--d;var g=f[d]-l,y=r-g;if(a-i>c-o){var _=(i*y+a*g)/r;t(n,d,g,i,o,_,c),t(d,e,y,_,o,a,c)}else{var b=(o*y+c*g)/r;t(n,d,g,i,o,a,b),t(d,e,y,i,b,a,c)}}(0,c,t.value,n,e,r,i)},t.treemapDice=ml,t.treemapResquarify=ql,t.treemapSlice=Pl,t.treemapSliceDice=function(t,n,e,r,i){(1&t.depth?Pl:ml)(t,n,e,r,i)},t.treemapSquarify=Dl,t.tsv=Co,t.tsvFormat=_o,t.tsvFormatBody=bo,t.tsvFormatRow=xo,t.tsvFormatRows=mo,t.tsvFormatValue=wo,t.tsvParse=go,t.tsvParseRows=yo,t.utcDay=hd,t.utcDays=dd,t.utcFriday=md,t.utcFridays=Sd,t.utcHour=sd,t.utcHours=ld,t.utcMillisecond=Ph,t.utcMilliseconds=zh,t.utcMinute=cd,t.utcMinutes=fd,t.utcMonday=gd,t.utcMondays=Md,t.utcMonth=Ed,t.utcMonths=Cd,t.utcSaturday=xd,t.utcSaturdays=kd,t.utcSecond=qh,t.utcSeconds=Lh,t.utcSunday=vd,t.utcSundays=wd,t.utcThursday=bd,t.utcThursdays=Ad,t.utcTuesday=yd,t.utcTuesdays=Nd,t.utcWednesday=_d,t.utcWednesdays=Td,t.utcWeek=vd,t.utcWeeks=wd,t.utcYear=Pd,t.utcYears=zd,t.values=function(t){var n=[];for(var e in t)n.push(t[e]);return n},t.variance=c,t.version="5.16.0",t.voronoi=function(){var t=A_,n=S_,e=null;function r(r){return new cb(r.map((function(e,i){var o=[Math.round(t(e,i,r)/ib)*ib,Math.round(n(e,i,r)/ib)*ib];return o.index=i,o.data=e,o})),e)}return r.polygons=function(t){return r(t).polygons()},r.links=function(t){return r(t).links()},r.triangles=function(t){return r(t).triangles()},r.x=function(n){return arguments.length?(t="function"==typeof n?n:T_(+n),r):t},r.y=function(t){return arguments.length?(n="function"==typeof t?t:T_(+t),r):n},r.extent=function(t){return arguments.length?(e=null==t?null:[[+t[0][0],+t[0][1]],[+t[1][0],+t[1][1]]],r):e&&[[e[0][0],e[0][1]],[e[1][0],e[1][1]]]},r.size=function(t){return arguments.length?(e=null==t?null:[[0,0],[+t[0],+t[1]]],r):e&&[e[1][0]-e[0][0],e[1][1]-e[0][1]]},r},t.window=rt,t.xml=Ro,t.zip=function(){return k(arguments)},t.zoom=function(){var n,e,r=gb,i=yb,o=xb,a=bb,u=mb,c=[0,1/0],f=[[-1/0,-1/0],[1/0,1/0]],s=250,l=ke,h=O("start","zoom","end"),d=500,p=0;function v(t){t.property("__zoom",_b).on("wheel.zoom",w).on("mousedown.zoom",M).on("dblclick.zoom",N).filter(u).on("touchstart.zoom",T).on("touchmove.zoom",A).on("touchend.zoom touchcancel.zoom",S).style("touch-action","none").style("-webkit-tap-highlight-color","rgba(0,0,0,0)")}function g(t,n){return(n=Math.max(c[0],Math.min(c[1],n)))===t.k?t:new lb(n,t.x,t.y)}function y(t,n,e){var r=n[0]-e[0]*t.k,i=n[1]-e[1]*t.k;return r===t.x&&i===t.y?t:new lb(t.k,r,i)}function _(t){return[(+t[0][0]+ +t[1][0])/2,(+t[0][1]+ +t[1][1])/2]}function b(t,n,e){t.on("start.zoom",(function(){m(this,arguments).start()})).on("interrupt.zoom end.zoom",(function(){m(this,arguments).end()})).tween("zoom",(function(){var t=this,r=arguments,o=m(t,r),a=i.apply(t,r),u=null==e?_(a):"function"==typeof e?e.apply(t,r):e,c=Math.max(a[1][0]-a[0][0],a[1][1]-a[0][1]),f=t.__zoom,s="function"==typeof n?n.apply(t,r):n,h=l(f.invert(u).concat(c/f.k),s.invert(u).concat(c/s.k));return function(t){if(1===t)t=s;else{var n=h(t),e=c/n[2];t=new lb(e,u[0]-n[0]*e,u[1]-n[1]*e)}o.zoom(null,t)}}))}function m(t,n,e){return!e&&t.__zooming||new x(t,n)}function x(t,n){this.that=t,this.args=n,this.active=0,this.extent=i.apply(t,n),this.taps=0}function w(){if(r.apply(this,arguments)){var t=m(this,arguments),n=this.__zoom,e=Math.max(c[0],Math.min(c[1],n.k*Math.pow(2,a.apply(this,arguments)))),i=Dt(this);if(t.wheel)t.mouse[0][0]===i[0]&&t.mouse[0][1]===i[1]||(t.mouse[1]=n.invert(t.mouse[0]=i)),clearTimeout(t.wheel);else{if(n.k===e)return;t.mouse=[i,n.invert(i)],fr(this),t.start()}vb(),t.wheel=setTimeout((function(){t.wheel=null,t.end()}),150),t.zoom("mouse",o(y(g(n,e),t.mouse[0],t.mouse[1]),t.extent,f))}}function M(){if(!e&&r.apply(this,arguments)){var n=m(this,arguments,!0),i=kt(t.event.view).on("mousemove.zoom",(function(){if(vb(),!n.moved){var e=t.event.clientX-u,r=t.event.clientY-c;n.moved=e*e+r*r>p}n.zoom("mouse",o(y(n.that.__zoom,n.mouse[0]=Dt(n.that),n.mouse[1]),n.extent,f))}),!0).on("mouseup.zoom",(function(){i.on("mousemove.zoom mouseup.zoom",null),Bt(t.event.view,n.moved),vb(),n.end()}),!0),a=Dt(this),u=t.event.clientX,c=t.event.clientY;Ot(t.event.view),pb(),n.mouse=[a,this.__zoom.invert(a)],fr(this),n.start()}}function N(){if(r.apply(this,arguments)){var n=this.__zoom,e=Dt(this),a=n.invert(e),u=n.k*(t.event.shiftKey?.5:2),c=o(y(g(n,u),e,a),i.apply(this,arguments),f);vb(),s>0?kt(this).transition().duration(s).call(b,c,e):kt(this).call(v.transform,c)}}function T(){if(r.apply(this,arguments)){var e,i,o,a,u=t.event.touches,c=u.length,f=m(this,arguments,t.event.changedTouches.length===c);for(pb(),i=0;i<c;++i)a=[a=qt(this,u,(o=u[i]).identifier),this.__zoom.invert(a),o.identifier],f.touch0?f.touch1||f.touch0[2]===a[2]||(f.touch1=a,f.taps=0):(f.touch0=a,e=!0,f.taps=1+!!n);n&&(n=clearTimeout(n)),e&&(f.taps<2&&(n=setTimeout((function(){n=null}),d)),fr(this),f.start())}}function A(){if(this.__zooming){var e,r,i,a,u=m(this,arguments),c=t.event.changedTouches,s=c.length;for(vb(),n&&(n=clearTimeout(n)),u.taps=0,e=0;e<s;++e)i=qt(this,c,(r=c[e]).identifier),u.touch0&&u.touch0[2]===r.identifier?u.touch0[0]=i:u.touch1&&u.touch1[2]===r.identifier&&(u.touch1[0]=i);if(r=u.that.__zoom,u.touch1){var l=u.touch0[0],h=u.touch0[1],d=u.touch1[0],p=u.touch1[1],v=(v=d[0]-l[0])*v+(v=d[1]-l[1])*v,_=(_=p[0]-h[0])*_+(_=p[1]-h[1])*_;r=g(r,Math.sqrt(v/_)),i=[(l[0]+d[0])/2,(l[1]+d[1])/2],a=[(h[0]+p[0])/2,(h[1]+p[1])/2]}else{if(!u.touch0)return;i=u.touch0[0],a=u.touch0[1]}u.zoom("touch",o(y(r,i,a),u.extent,f))}}function S(){if(this.__zooming){var n,r,i=m(this,arguments),o=t.event.changedTouches,a=o.length;for(pb(),e&&clearTimeout(e),e=setTimeout((function(){e=null}),d),n=0;n<a;++n)r=o[n],i.touch0&&i.touch0[2]===r.identifier?delete i.touch0:i.touch1&&i.touch1[2]===r.identifier&&delete i.touch1;if(i.touch1&&!i.touch0&&(i.touch0=i.touch1,delete i.touch1),i.touch0)i.touch0[1]=this.__zoom.invert(i.touch0[0]);else if(i.end(),2===i.taps){var u=kt(this).on("dblclick.zoom");u&&u.apply(this,arguments)}}}return v.transform=function(t,n,e){var r=t.selection?t.selection():t;r.property("__zoom",_b),t!==r?b(t,n,e):r.interrupt().each((function(){m(this,arguments).start().zoom(null,"function"==typeof n?n.apply(this,arguments):n).end()}))},v.scaleBy=function(t,n,e){v.scaleTo(t,(function(){var t=this.__zoom.k,e="function"==typeof n?n.apply(this,arguments):n;return t*e}),e)},v.scaleTo=function(t,n,e){v.transform(t,(function(){var t=i.apply(this,arguments),r=this.__zoom,a=null==e?_(t):"function"==typeof e?e.apply(this,arguments):e,u=r.invert(a),c="function"==typeof n?n.apply(this,arguments):n;return o(y(g(r,c),a,u),t,f)}),e)},v.translateBy=function(t,n,e){v.transform(t,(function(){return o(this.__zoom.translate("function"==typeof n?n.apply(this,arguments):n,"function"==typeof e?e.apply(this,arguments):e),i.apply(this,arguments),f)}))},v.translateTo=function(t,n,e,r){v.transform(t,(function(){var t=i.apply(this,arguments),a=this.__zoom,u=null==r?_(t):"function"==typeof r?r.apply(this,arguments):r;return o(hb.translate(u[0],u[1]).scale(a.k).translate("function"==typeof n?-n.apply(this,arguments):-n,"function"==typeof e?-e.apply(this,arguments):-e),t,f)}),r)},x.prototype={start:function(){return 1==++this.active&&(this.that.__zooming=this,this.emit("start")),this},zoom:function(t,n){return this.mouse&&"mouse"!==t&&(this.mouse[1]=n.invert(this.mouse[0])),this.touch0&&"touch"!==t&&(this.touch0[1]=n.invert(this.touch0[0])),this.touch1&&"touch"!==t&&(this.touch1[1]=n.invert(this.touch1[0])),this.that.__zoom=n,this.emit("zoom"),this},end:function(){return 0==--this.active&&(delete this.that.__zooming,this.emit("end")),this},emit:function(t){Mt(new sb(v,t,this.that.__zoom),h.apply,h,[t,this.that,this.args])}},v.wheelDelta=function(t){return arguments.length?(a="function"==typeof t?t:fb(+t),v):a},v.filter=function(t){return arguments.length?(r="function"==typeof t?t:fb(!!t),v):r},v.touchable=function(t){return arguments.length?(u="function"==typeof t?t:fb(!!t),v):u},v.extent=function(t){return arguments.length?(i="function"==typeof t?t:fb([[+t[0][0],+t[0][1]],[+t[1][0],+t[1][1]]]),v):i},v.scaleExtent=function(t){return arguments.length?(c[0]=+t[0],c[1]=+t[1],v):[c[0],c[1]]},v.translateExtent=function(t){return arguments.length?(f[0][0]=+t[0][0],f[1][0]=+t[1][0],f[0][1]=+t[0][1],f[1][1]=+t[1][1],v):[[f[0][0],f[0][1]],[f[1][0],f[1][1]]]},v.constrain=function(t){return arguments.length?(o=t,v):o},v.duration=function(t){return arguments.length?(s=+t,v):s},v.interpolate=function(t){return arguments.length?(l=t,v):l},v.on=function(){var t=h.on.apply(h,arguments);return t===h?v:t},v.clickDistance=function(t){return arguments.length?(p=(t=+t)*t,v):Math.sqrt(p)},v},t.zoomIdentity=hb,t.zoomTransform=db,Object.defineProperty(t,"__esModule",{value:!0})}));
/**
 * @license
 * Lodash <https://lodash.com/>
 * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */
(function(){var n="Expected a function",t="__lodash_placeholder__",e=[["ary",128],["bind",1],["bindKey",2],["curry",8],["curryRight",16],["flip",512],["partial",32],["partialRight",64],["rearg",256]],r="[object Arguments]",u="[object Array]",i="[object Boolean]",f="[object Date]",o="[object Error]",a="[object Function]",c="[object GeneratorFunction]",l="[object Map]",s="[object Number]",d="[object Object]",h="[object RegExp]",p="[object Set]",v="[object String]",_="[object Symbol]",g="[object WeakMap]",y="[object ArrayBuffer]",b="[object DataView]",w="[object Float32Array]",m="[object Float64Array]",x="[object Int8Array]",j="[object Int16Array]",A="[object Int32Array]",I="[object Uint8Array]",k="[object Uint8ClampedArray]",O="[object Uint16Array]",R="[object Uint32Array]",E=/\b__p \+= '';/g,z=/\b(__p \+=) '' \+/g,S=/(__e\(.*?\)|\b__t\)) \+\n'';/g,L=/&(?:amp|lt|gt|quot|#39);/g,C=/[&<>"']/g,W=RegExp(L.source),U=RegExp(C.source),B=/<%-([\s\S]+?)%>/g,T=/<%([\s\S]+?)%>/g,$=/<%=([\s\S]+?)%>/g,D=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,N=/^\w*$/,M=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,F=/[\\^$.*+?()[\]{}|]/g,P=RegExp(F.source),q=/^\s+|\s+$/g,Z=/^\s+/,K=/\s+$/,V=/\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,G=/\{\n\/\* \[wrapped with (.+)\] \*/,H=/,? & /,J=/[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g,Y=/\\(\\)?/g,Q=/\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g,X=/\w*$/,nn=/^[-+]0x[0-9a-f]+$/i,tn=/^0b[01]+$/i,en=/^\[object .+?Constructor\]$/,rn=/^0o[0-7]+$/i,un=/^(?:0|[1-9]\d*)$/,fn=/[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g,on=/($^)/,an=/['\n\r\u2028\u2029\\]/g,cn="\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff",ln="\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000",sn="[\\ud800-\\udfff]",dn="["+ln+"]",hn="["+cn+"]",pn="\\d+",vn="[\\u2700-\\u27bf]",_n="[a-z\\xdf-\\xf6\\xf8-\\xff]",gn="[^\\ud800-\\udfff"+ln+pn+"\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde]",yn="\\ud83c[\\udffb-\\udfff]",bn="[^\\ud800-\\udfff]",wn="(?:\\ud83c[\\udde6-\\uddff]){2}",mn="[\\ud800-\\udbff][\\udc00-\\udfff]",xn="[A-Z\\xc0-\\xd6\\xd8-\\xde]",jn="(?:"+_n+"|"+gn+")",An="(?:"+xn+"|"+gn+")",In="(?:"+hn+"|"+yn+")"+"?",kn="[\\ufe0e\\ufe0f]?"+In+("(?:\\u200d(?:"+[bn,wn,mn].join("|")+")[\\ufe0e\\ufe0f]?"+In+")*"),On="(?:"+[vn,wn,mn].join("|")+")"+kn,Rn="(?:"+[bn+hn+"?",hn,wn,mn,sn].join("|")+")",En=RegExp("['’]","g"),zn=RegExp(hn,"g"),Sn=RegExp(yn+"(?="+yn+")|"+Rn+kn,"g"),Ln=RegExp([xn+"?"+_n+"+(?:['’](?:d|ll|m|re|s|t|ve))?(?="+[dn,xn,"$"].join("|")+")",An+"+(?:['’](?:D|LL|M|RE|S|T|VE))?(?="+[dn,xn+jn,"$"].join("|")+")",xn+"?"+jn+"+(?:['’](?:d|ll|m|re|s|t|ve))?",xn+"+(?:['’](?:D|LL|M|RE|S|T|VE))?","\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])","\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])",pn,On].join("|"),"g"),Cn=RegExp("[\\u200d\\ud800-\\udfff"+cn+"\\ufe0e\\ufe0f]"),Wn=/[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,Un=["Array","Buffer","DataView","Date","Error","Float32Array","Float64Array","Function","Int8Array","Int16Array","Int32Array","Map","Math","Object","Promise","RegExp","Set","String","Symbol","TypeError","Uint8Array","Uint8ClampedArray","Uint16Array","Uint32Array","WeakMap","_","clearTimeout","isFinite","parseInt","setTimeout"],Bn=-1,Tn={};Tn[w]=Tn[m]=Tn[x]=Tn[j]=Tn[A]=Tn[I]=Tn["[object Uint8ClampedArray]"]=Tn[O]=Tn[R]=!0,Tn[r]=Tn[u]=Tn[y]=Tn[i]=Tn[b]=Tn[f]=Tn[o]=Tn[a]=Tn[l]=Tn[s]=Tn[d]=Tn[h]=Tn[p]=Tn[v]=Tn[g]=!1;var $n={};$n[r]=$n[u]=$n[y]=$n[b]=$n[i]=$n[f]=$n[w]=$n[m]=$n[x]=$n[j]=$n[A]=$n[l]=$n[s]=$n[d]=$n[h]=$n[p]=$n[v]=$n[_]=$n[I]=$n["[object Uint8ClampedArray]"]=$n[O]=$n[R]=!0,$n[o]=$n[a]=$n[g]=!1;var Dn={"\\":"\\","'":"'","\n":"n","\r":"r","\u2028":"u2028","\u2029":"u2029"},Nn=parseFloat,Mn=parseInt,Fn="object"==typeof global&&global&&global.Object===Object&&global,Pn="object"==typeof self&&self&&self.Object===Object&&self,qn=Fn||Pn||Function("return this")(),Zn="object"==typeof exports&&exports&&!exports.nodeType&&exports,Kn=Zn&&"object"==typeof module&&module&&!module.nodeType&&module,Vn=Kn&&Kn.exports===Zn,Gn=Vn&&Fn.process,Hn=function(){try{var n=Kn&&Kn.require&&Kn.require("util").types;return n||Gn&&Gn.binding&&Gn.binding("util")}catch(n){}}(),Jn=Hn&&Hn.isArrayBuffer,Yn=Hn&&Hn.isDate,Qn=Hn&&Hn.isMap,Xn=Hn&&Hn.isRegExp,nt=Hn&&Hn.isSet,tt=Hn&&Hn.isTypedArray;function et(n,t,e){switch(e.length){case 0:return n.call(t);case 1:return n.call(t,e[0]);case 2:return n.call(t,e[0],e[1]);case 3:return n.call(t,e[0],e[1],e[2])}return n.apply(t,e)}function rt(n,t,e,r){for(var u=-1,i=null==n?0:n.length;++u<i;){var f=n[u];t(r,f,e(f),n)}return r}function ut(n,t){for(var e=-1,r=null==n?0:n.length;++e<r&&!1!==t(n[e],e,n););return n}function it(n,t){for(var e=null==n?0:n.length;e--&&!1!==t(n[e],e,n););return n}function ft(n,t){for(var e=-1,r=null==n?0:n.length;++e<r;)if(!t(n[e],e,n))return!1;return!0}function ot(n,t){for(var e=-1,r=null==n?0:n.length,u=0,i=[];++e<r;){var f=n[e];t(f,e,n)&&(i[u++]=f)}return i}function at(n,t){return!!(null==n?0:n.length)&&yt(n,t,0)>-1}function ct(n,t,e){for(var r=-1,u=null==n?0:n.length;++r<u;)if(e(t,n[r]))return!0;return!1}function lt(n,t){for(var e=-1,r=null==n?0:n.length,u=Array(r);++e<r;)u[e]=t(n[e],e,n);return u}function st(n,t){for(var e=-1,r=t.length,u=n.length;++e<r;)n[u+e]=t[e];return n}function dt(n,t,e,r){var u=-1,i=null==n?0:n.length;for(r&&i&&(e=n[++u]);++u<i;)e=t(e,n[u],u,n);return e}function ht(n,t,e,r){var u=null==n?0:n.length;for(r&&u&&(e=n[--u]);u--;)e=t(e,n[u],u,n);return e}function pt(n,t){for(var e=-1,r=null==n?0:n.length;++e<r;)if(t(n[e],e,n))return!0;return!1}var vt=xt("length");function _t(n,t,e){var r;return e(n,(function(n,e,u){if(t(n,e,u))return r=e,!1})),r}function gt(n,t,e,r){for(var u=n.length,i=e+(r?1:-1);r?i--:++i<u;)if(t(n[i],i,n))return i;return-1}function yt(n,t,e){return t==t?function(n,t,e){var r=e-1,u=n.length;for(;++r<u;)if(n[r]===t)return r;return-1}(n,t,e):gt(n,wt,e)}function bt(n,t,e,r){for(var u=e-1,i=n.length;++u<i;)if(r(n[u],t))return u;return-1}function wt(n){return n!=n}function mt(n,t){var e=null==n?0:n.length;return e?It(n,t)/e:NaN}function xt(n){return function(t){return null==t?undefined:t[n]}}function jt(n){return function(t){return null==n?undefined:n[t]}}function At(n,t,e,r,u){return u(n,(function(n,u,i){e=r?(r=!1,n):t(e,n,u,i)})),e}function It(n,t){for(var e,r=-1,u=n.length;++r<u;){var i=t(n[r]);undefined!==i&&(e=undefined===e?i:e+i)}return e}function kt(n,t){for(var e=-1,r=Array(n);++e<n;)r[e]=t(e);return r}function Ot(n){return function(t){return n(t)}}function Rt(n,t){return lt(t,(function(t){return n[t]}))}function Et(n,t){return n.has(t)}function zt(n,t){for(var e=-1,r=n.length;++e<r&&yt(t,n[e],0)>-1;);return e}function St(n,t){for(var e=n.length;e--&&yt(t,n[e],0)>-1;);return e}function Lt(n,t){for(var e=n.length,r=0;e--;)n[e]===t&&++r;return r}var Ct=jt({"À":"A","Á":"A","Â":"A","Ã":"A","Ä":"A","Å":"A","à":"a","á":"a","â":"a","ã":"a","ä":"a","å":"a","Ç":"C","ç":"c","Ð":"D","ð":"d","È":"E","É":"E","Ê":"E","Ë":"E","è":"e","é":"e","ê":"e","ë":"e","Ì":"I","Í":"I","Î":"I","Ï":"I","ì":"i","í":"i","î":"i","ï":"i","Ñ":"N","ñ":"n","Ò":"O","Ó":"O","Ô":"O","Õ":"O","Ö":"O","Ø":"O","ò":"o","ó":"o","ô":"o","õ":"o","ö":"o","ø":"o","Ù":"U","Ú":"U","Û":"U","Ü":"U","ù":"u","ú":"u","û":"u","ü":"u","Ý":"Y","ý":"y","ÿ":"y","Æ":"Ae","æ":"ae","Þ":"Th","þ":"th","ß":"ss","Ā":"A","Ă":"A","Ą":"A","ā":"a","ă":"a","ą":"a","Ć":"C","Ĉ":"C","Ċ":"C","Č":"C","ć":"c","ĉ":"c","ċ":"c","č":"c","Ď":"D","Đ":"D","ď":"d","đ":"d","Ē":"E","Ĕ":"E","Ė":"E","Ę":"E","Ě":"E","ē":"e","ĕ":"e","ė":"e","ę":"e","ě":"e","Ĝ":"G","Ğ":"G","Ġ":"G","Ģ":"G","ĝ":"g","ğ":"g","ġ":"g","ģ":"g","Ĥ":"H","Ħ":"H","ĥ":"h","ħ":"h","Ĩ":"I","Ī":"I","Ĭ":"I","Į":"I","İ":"I","ĩ":"i","ī":"i","ĭ":"i","į":"i","ı":"i","Ĵ":"J","ĵ":"j","Ķ":"K","ķ":"k","ĸ":"k","Ĺ":"L","Ļ":"L","Ľ":"L","Ŀ":"L","Ł":"L","ĺ":"l","ļ":"l","ľ":"l","ŀ":"l","ł":"l","Ń":"N","Ņ":"N","Ň":"N","Ŋ":"N","ń":"n","ņ":"n","ň":"n","ŋ":"n","Ō":"O","Ŏ":"O","Ő":"O","ō":"o","ŏ":"o","ő":"o","Ŕ":"R","Ŗ":"R","Ř":"R","ŕ":"r","ŗ":"r","ř":"r","Ś":"S","Ŝ":"S","Ş":"S","Š":"S","ś":"s","ŝ":"s","ş":"s","š":"s","Ţ":"T","Ť":"T","Ŧ":"T","ţ":"t","ť":"t","ŧ":"t","Ũ":"U","Ū":"U","Ŭ":"U","Ů":"U","Ű":"U","Ų":"U","ũ":"u","ū":"u","ŭ":"u","ů":"u","ű":"u","ų":"u","Ŵ":"W","ŵ":"w","Ŷ":"Y","ŷ":"y","Ÿ":"Y","Ź":"Z","Ż":"Z","Ž":"Z","ź":"z","ż":"z","ž":"z","Ĳ":"IJ","ĳ":"ij","Œ":"Oe","œ":"oe","ŉ":"'n","ſ":"s"}),Wt=jt({"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"});function Ut(n){return"\\"+Dn[n]}function Bt(n){return Cn.test(n)}function Tt(n){var t=-1,e=Array(n.size);return n.forEach((function(n,r){e[++t]=[r,n]})),e}function $t(n,t){return function(e){return n(t(e))}}function Dt(n,e){for(var r=-1,u=n.length,i=0,f=[];++r<u;){var o=n[r];o!==e&&o!==t||(n[r]=t,f[i++]=r)}return f}function Nt(n){var t=-1,e=Array(n.size);return n.forEach((function(n){e[++t]=n})),e}function Mt(n){var t=-1,e=Array(n.size);return n.forEach((function(n){e[++t]=[n,n]})),e}function Ft(n){return Bt(n)?function(n){var t=Sn.lastIndex=0;for(;Sn.test(n);)++t;return t}(n):vt(n)}function Pt(n){return Bt(n)?function(n){return n.match(Sn)||[]}(n):function(n){return n.split("")}(n)}var qt=jt({"&amp;":"&","&lt;":"<","&gt;":">","&quot;":'"',"&#39;":"'"});var Zt=function cn(ln){var sn,dn=(ln=null==ln?qn:Zt.defaults(qn.Object(),ln,Zt.pick(qn,Un))).Array,hn=ln.Date,pn=ln.Error,vn=ln.Function,_n=ln.Math,gn=ln.Object,yn=ln.RegExp,bn=ln.String,wn=ln.TypeError,mn=dn.prototype,xn=vn.prototype,jn=gn.prototype,An=ln["__core-js_shared__"],In=xn.toString,kn=jn.hasOwnProperty,On=0,Rn=(sn=/[^.]+$/.exec(An&&An.keys&&An.keys.IE_PROTO||""))?"Symbol(src)_1."+sn:"",Sn=jn.toString,Cn=In.call(gn),Dn=qn._,Fn=yn("^"+In.call(kn).replace(F,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),Pn=Vn?ln.Buffer:undefined,Zn=ln.Symbol,Kn=ln.Uint8Array,Gn=Pn?Pn.allocUnsafe:undefined,Hn=$t(gn.getPrototypeOf,gn),vt=gn.create,jt=jn.propertyIsEnumerable,Kt=mn.splice,Vt=Zn?Zn.isConcatSpreadable:undefined,Gt=Zn?Zn.iterator:undefined,Ht=Zn?Zn.toStringTag:undefined,Jt=function(){try{var n=ni(gn,"defineProperty");return n({},"",{}),n}catch(n){}}(),Yt=ln.clearTimeout!==qn.clearTimeout&&ln.clearTimeout,Qt=hn&&hn.now!==qn.Date.now&&hn.now,Xt=ln.setTimeout!==qn.setTimeout&&ln.setTimeout,ne=_n.ceil,te=_n.floor,ee=gn.getOwnPropertySymbols,re=Pn?Pn.isBuffer:undefined,ue=ln.isFinite,ie=mn.join,fe=$t(gn.keys,gn),oe=_n.max,ae=_n.min,ce=hn.now,le=ln.parseInt,se=_n.random,de=mn.reverse,he=ni(ln,"DataView"),pe=ni(ln,"Map"),ve=ni(ln,"Promise"),_e=ni(ln,"Set"),ge=ni(ln,"WeakMap"),ye=ni(gn,"create"),be=ge&&new ge,we={},me=Oi(he),xe=Oi(pe),je=Oi(ve),Ae=Oi(_e),Ie=Oi(ge),ke=Zn?Zn.prototype:undefined,Oe=ke?ke.valueOf:undefined,Re=ke?ke.toString:undefined;function Ee(n){if(Zf(n)&&!Wf(n)&&!(n instanceof Ce)){if(n instanceof Le)return n;if(kn.call(n,"__wrapped__"))return Ri(n)}return new Le(n)}var ze=function(){function n(){}return function(t){if(!qf(t))return{};if(vt)return vt(t);n.prototype=t;var e=new n;return n.prototype=undefined,e}}();function Se(){}function Le(n,t){this.__wrapped__=n,this.__actions__=[],this.__chain__=!!t,this.__index__=0,this.__values__=undefined}function Ce(n){this.__wrapped__=n,this.__actions__=[],this.__dir__=1,this.__filtered__=!1,this.__iteratees__=[],this.__takeCount__=4294967295,this.__views__=[]}function We(n){var t=-1,e=null==n?0:n.length;for(this.clear();++t<e;){var r=n[t];this.set(r[0],r[1])}}function Ue(n){var t=-1,e=null==n?0:n.length;for(this.clear();++t<e;){var r=n[t];this.set(r[0],r[1])}}function Be(n){var t=-1,e=null==n?0:n.length;for(this.clear();++t<e;){var r=n[t];this.set(r[0],r[1])}}function Te(n){var t=-1,e=null==n?0:n.length;for(this.__data__=new Be;++t<e;)this.add(n[t])}function $e(n){var t=this.__data__=new Ue(n);this.size=t.size}function De(n,t){var e=Wf(n),r=!e&&Cf(n),u=!e&&!r&&$f(n),i=!e&&!r&&!u&&Xf(n),f=e||r||u||i,o=f?kt(n.length,bn):[],a=o.length;for(var c in n)!t&&!kn.call(n,c)||f&&("length"==c||u&&("offset"==c||"parent"==c)||i&&("buffer"==c||"byteLength"==c||"byteOffset"==c)||oi(c,a))||o.push(c);return o}function Ne(n){var t=n.length;return t?n[Tr(0,t-1)]:undefined}function Me(n,t){return Ai(yu(n),Je(t,0,n.length))}function Fe(n){return Ai(yu(n))}function Pe(n,t,e){(undefined!==e&&!zf(n[t],e)||undefined===e&&!(t in n))&&Ge(n,t,e)}function qe(n,t,e){var r=n[t];kn.call(n,t)&&zf(r,e)&&(undefined!==e||t in n)||Ge(n,t,e)}function Ze(n,t){for(var e=n.length;e--;)if(zf(n[e][0],t))return e;return-1}function Ke(n,t,e,r){return tr(n,(function(n,u,i){t(r,n,e(n),i)})),r}function Ve(n,t){return n&&bu(t,xo(t),n)}function Ge(n,t,e){"__proto__"==t&&Jt?Jt(n,t,{configurable:!0,enumerable:!0,value:e,writable:!0}):n[t]=e}function He(n,t){for(var e=-1,r=t.length,u=dn(r),i=null==n;++e<r;)u[e]=i?undefined:go(n,t[e]);return u}function Je(n,t,e){return n==n&&(undefined!==e&&(n=n<=e?n:e),undefined!==t&&(n=n>=t?n:t)),n}function Ye(n,t,e,u,o,g){var E,z=1&t,S=2&t,L=4&t;if(e&&(E=o?e(n,u,o,g):e(n)),undefined!==E)return E;if(!qf(n))return n;var C=Wf(n);if(C){if(E=function(n){var t=n.length,e=new n.constructor(t);t&&"string"==typeof n[0]&&kn.call(n,"index")&&(e.index=n.index,e.input=n.input);return e}(n),!z)return yu(n,E)}else{var W=ri(n),U=W==a||W==c;if($f(n))return du(n,z);if(W==d||W==r||U&&!o){if(E=S||U?{}:ii(n),!z)return S?function(n,t){return bu(n,ei(n),t)}(n,function(n,t){return n&&bu(t,jo(t),n)}(E,n)):function(n,t){return bu(n,ti(n),t)}(n,Ve(E,n))}else{if(!$n[W])return o?n:{};E=function(n,t,e){var r=n.constructor;switch(t){case y:return hu(n);case i:case f:return new r(+n);case b:return function(n,t){var e=t?hu(n.buffer):n.buffer;return new n.constructor(e,n.byteOffset,n.byteLength)}(n,e);case w:case m:case x:case j:case A:case I:case k:case O:case R:return pu(n,e);case l:return new r;case s:case v:return new r(n);case h:return function(n){var t=new n.constructor(n.source,X.exec(n));return t.lastIndex=n.lastIndex,t}(n);case p:return new r;case _:return u=n,Oe?gn(Oe.call(u)):{}}var u}(n,W,z)}}g||(g=new $e);var B=g.get(n);if(B)return B;g.set(n,E),Jf(n)?n.forEach((function(r){E.add(Ye(r,t,e,r,n,g))})):Kf(n)&&n.forEach((function(r,u){E.set(u,Ye(r,t,e,u,n,g))}));var T=C?undefined:(L?S?Vu:Ku:S?jo:xo)(n);return ut(T||n,(function(r,u){T&&(r=n[u=r]),qe(E,u,Ye(r,t,e,u,n,g))})),E}function Qe(n,t,e){var r=e.length;if(null==n)return!r;for(n=gn(n);r--;){var u=e[r],i=t[u],f=n[u];if(undefined===f&&!(u in n)||!i(f))return!1}return!0}function Xe(t,e,r){if("function"!=typeof t)throw new wn(n);return wi((function(){t.apply(undefined,r)}),e)}function nr(n,t,e,r){var u=-1,i=at,f=!0,o=n.length,a=[],c=t.length;if(!o)return a;e&&(t=lt(t,Ot(e))),r?(i=ct,f=!1):t.length>=200&&(i=Et,f=!1,t=new Te(t));n:for(;++u<o;){var l=n[u],s=null==e?l:e(l);if(l=r||0!==l?l:0,f&&s==s){for(var d=c;d--;)if(t[d]===s)continue n;a.push(l)}else i(t,s,r)||a.push(l)}return a}Ee.templateSettings={escape:B,evaluate:T,interpolate:$,variable:"",imports:{_:Ee}},Ee.prototype=Se.prototype,Ee.prototype.constructor=Ee,Le.prototype=ze(Se.prototype),Le.prototype.constructor=Le,Ce.prototype=ze(Se.prototype),Ce.prototype.constructor=Ce,We.prototype.clear=function(){this.__data__=ye?ye(null):{},this.size=0},We.prototype.delete=function(n){var t=this.has(n)&&delete this.__data__[n];return this.size-=t?1:0,t},We.prototype.get=function(n){var t=this.__data__;if(ye){var e=t[n];return"__lodash_hash_undefined__"===e?undefined:e}return kn.call(t,n)?t[n]:undefined},We.prototype.has=function(n){var t=this.__data__;return ye?undefined!==t[n]:kn.call(t,n)},We.prototype.set=function(n,t){var e=this.__data__;return this.size+=this.has(n)?0:1,e[n]=ye&&undefined===t?"__lodash_hash_undefined__":t,this},Ue.prototype.clear=function(){this.__data__=[],this.size=0},Ue.prototype.delete=function(n){var t=this.__data__,e=Ze(t,n);return!(e<0)&&(e==t.length-1?t.pop():Kt.call(t,e,1),--this.size,!0)},Ue.prototype.get=function(n){var t=this.__data__,e=Ze(t,n);return e<0?undefined:t[e][1]},Ue.prototype.has=function(n){return Ze(this.__data__,n)>-1},Ue.prototype.set=function(n,t){var e=this.__data__,r=Ze(e,n);return r<0?(++this.size,e.push([n,t])):e[r][1]=t,this},Be.prototype.clear=function(){this.size=0,this.__data__={hash:new We,map:new(pe||Ue),string:new We}},Be.prototype.delete=function(n){var t=Qu(this,n).delete(n);return this.size-=t?1:0,t},Be.prototype.get=function(n){return Qu(this,n).get(n)},Be.prototype.has=function(n){return Qu(this,n).has(n)},Be.prototype.set=function(n,t){var e=Qu(this,n),r=e.size;return e.set(n,t),this.size+=e.size==r?0:1,this},Te.prototype.add=Te.prototype.push=function(n){return this.__data__.set(n,"__lodash_hash_undefined__"),this},Te.prototype.has=function(n){return this.__data__.has(n)},$e.prototype.clear=function(){this.__data__=new Ue,this.size=0},$e.prototype.delete=function(n){var t=this.__data__,e=t.delete(n);return this.size=t.size,e},$e.prototype.get=function(n){return this.__data__.get(n)},$e.prototype.has=function(n){return this.__data__.has(n)},$e.prototype.set=function(n,t){var e=this.__data__;if(e instanceof Ue){var r=e.__data__;if(!pe||r.length<199)return r.push([n,t]),this.size=++e.size,this;e=this.__data__=new Be(r)}return e.set(n,t),this.size=e.size,this};var tr=xu(cr),er=xu(lr,!0);function rr(n,t){var e=!0;return tr(n,(function(n,r,u){return e=!!t(n,r,u)})),e}function ur(n,t,e){for(var r=-1,u=n.length;++r<u;){var i=n[r],f=t(i);if(null!=f&&(undefined===o?f==f&&!Qf(f):e(f,o)))var o=f,a=i}return a}function ir(n,t){var e=[];return tr(n,(function(n,r,u){t(n,r,u)&&e.push(n)})),e}function fr(n,t,e,r,u){var i=-1,f=n.length;for(e||(e=fi),u||(u=[]);++i<f;){var o=n[i];t>0&&e(o)?t>1?fr(o,t-1,e,r,u):st(u,o):r||(u[u.length]=o)}return u}var or=ju(),ar=ju(!0);function cr(n,t){return n&&or(n,t,xo)}function lr(n,t){return n&&ar(n,t,xo)}function sr(n,t){return ot(t,(function(t){return Mf(n[t])}))}function dr(n,t){for(var e=0,r=(t=au(t,n)).length;null!=n&&e<r;)n=n[ki(t[e++])];return e&&e==r?n:undefined}function hr(n,t,e){var r=t(n);return Wf(n)?r:st(r,e(n))}function pr(n){return null==n?undefined===n?"[object Undefined]":"[object Null]":Ht&&Ht in gn(n)?function(n){var t=kn.call(n,Ht),e=n[Ht];try{n[Ht]=undefined;var r=!0}catch(n){}var u=Sn.call(n);r&&(t?n[Ht]=e:delete n[Ht]);return u}(n):function(n){return Sn.call(n)}(n)}function vr(n,t){return n>t}function _r(n,t){return null!=n&&kn.call(n,t)}function gr(n,t){return null!=n&&t in gn(n)}function yr(n,t,e){for(var r=e?ct:at,u=n[0].length,i=n.length,f=i,o=dn(i),a=1/0,c=[];f--;){var l=n[f];f&&t&&(l=lt(l,Ot(t))),a=ae(l.length,a),o[f]=!e&&(t||u>=120&&l.length>=120)?new Te(f&&l):undefined}l=n[0];var s=-1,d=o[0];n:for(;++s<u&&c.length<a;){var h=l[s],p=t?t(h):h;if(h=e||0!==h?h:0,!(d?Et(d,p):r(c,p,e))){for(f=i;--f;){var v=o[f];if(!(v?Et(v,p):r(n[f],p,e)))continue n}d&&d.push(p),c.push(h)}}return c}function br(n,t,e){var r=null==(n=_i(n,t=au(t,n)))?n:n[ki(Di(t))];return null==r?undefined:et(r,n,e)}function wr(n){return Zf(n)&&pr(n)==r}function mr(n,t,e,a,c){return n===t||(null==n||null==t||!Zf(n)&&!Zf(t)?n!=n&&t!=t:function(n,t,e,a,c,g){var w=Wf(n),m=Wf(t),x=w?u:ri(n),j=m?u:ri(t),A=(x=x==r?d:x)==d,I=(j=j==r?d:j)==d,k=x==j;if(k&&$f(n)){if(!$f(t))return!1;w=!0,A=!1}if(k&&!A)return g||(g=new $e),w||Xf(n)?qu(n,t,e,a,c,g):function(n,t,e,r,u,a,c){switch(e){case b:if(n.byteLength!=t.byteLength||n.byteOffset!=t.byteOffset)return!1;n=n.buffer,t=t.buffer;case y:return!(n.byteLength!=t.byteLength||!a(new Kn(n),new Kn(t)));case i:case f:case s:return zf(+n,+t);case o:return n.name==t.name&&n.message==t.message;case h:case v:return n==t+"";case l:var d=Tt;case p:var g=1&r;if(d||(d=Nt),n.size!=t.size&&!g)return!1;var w=c.get(n);if(w)return w==t;r|=2,c.set(n,t);var m=qu(d(n),d(t),r,u,a,c);return c.delete(n),m;case _:if(Oe)return Oe.call(n)==Oe.call(t)}return!1}(n,t,x,e,a,c,g);if(!(1&e)){var O=A&&kn.call(n,"__wrapped__"),R=I&&kn.call(t,"__wrapped__");if(O||R){var E=O?n.value():n,z=R?t.value():t;return g||(g=new $e),c(E,z,e,a,g)}}if(!k)return!1;return g||(g=new $e),function(n,t,e,r,u,i){var f=1&e,o=Ku(n),a=o.length,c=Ku(t).length;if(a!=c&&!f)return!1;var l=a;for(;l--;){var s=o[l];if(!(f?s in t:kn.call(t,s)))return!1}var d=i.get(n);if(d&&i.get(t))return d==t;var h=!0;i.set(n,t),i.set(t,n);var p=f;for(;++l<a;){var v=n[s=o[l]],_=t[s];if(r)var g=f?r(_,v,s,t,n,i):r(v,_,s,n,t,i);if(!(undefined===g?v===_||u(v,_,e,r,i):g)){h=!1;break}p||(p="constructor"==s)}if(h&&!p){var y=n.constructor,b=t.constructor;y==b||!("constructor"in n)||!("constructor"in t)||"function"==typeof y&&y instanceof y&&"function"==typeof b&&b instanceof b||(h=!1)}return i.delete(n),i.delete(t),h}(n,t,e,a,c,g)}(n,t,e,a,mr,c))}function xr(n,t,e,r){var u=e.length,i=u,f=!r;if(null==n)return!i;for(n=gn(n);u--;){var o=e[u];if(f&&o[2]?o[1]!==n[o[0]]:!(o[0]in n))return!1}for(;++u<i;){var a=(o=e[u])[0],c=n[a],l=o[1];if(f&&o[2]){if(undefined===c&&!(a in n))return!1}else{var s=new $e;if(r)var d=r(c,l,a,n,t,s);if(!(undefined===d?mr(l,c,3,r,s):d))return!1}}return!0}function jr(n){return!(!qf(n)||(t=n,Rn&&Rn in t))&&(Mf(n)?Fn:en).test(Oi(n));var t}function Ar(n){return"function"==typeof n?n:null==n?Go:"object"==typeof n?Wf(n)?zr(n[0],n[1]):Er(n):ra(n)}function Ir(n){if(!di(n))return fe(n);var t=[];for(var e in gn(n))kn.call(n,e)&&"constructor"!=e&&t.push(e);return t}function kr(n){if(!qf(n))return function(n){var t=[];if(null!=n)for(var e in gn(n))t.push(e);return t}(n);var t=di(n),e=[];for(var r in n)("constructor"!=r||!t&&kn.call(n,r))&&e.push(r);return e}function Or(n,t){return n<t}function Rr(n,t){var e=-1,r=Bf(n)?dn(n.length):[];return tr(n,(function(n,u,i){r[++e]=t(n,u,i)})),r}function Er(n){var t=Xu(n);return 1==t.length&&t[0][2]?pi(t[0][0],t[0][1]):function(e){return e===n||xr(e,n,t)}}function zr(n,t){return ci(n)&&hi(t)?pi(ki(n),t):function(e){var r=go(e,n);return undefined===r&&r===t?yo(e,n):mr(t,r,3)}}function Sr(n,t,e,r,u){n!==t&&or(t,(function(i,f){if(u||(u=new $e),qf(i))!function(n,t,e,r,u,i,f){var o=yi(n,e),a=yi(t,e),c=f.get(a);if(c)return void Pe(n,e,c);var l=i?i(o,a,e+"",n,t,f):undefined,s=undefined===l;if(s){var d=Wf(a),h=!d&&$f(a),p=!d&&!h&&Xf(a);l=a,d||h||p?Wf(o)?l=o:Tf(o)?l=yu(o):h?(s=!1,l=du(a,!0)):p?(s=!1,l=pu(a,!0)):l=[]:Gf(a)||Cf(a)?(l=o,Cf(o)?l=oo(o):qf(o)&&!Mf(o)||(l=ii(a))):s=!1}s&&(f.set(a,l),u(l,a,r,i,f),f.delete(a));Pe(n,e,l)}(n,t,f,e,Sr,r,u);else{var o=r?r(yi(n,f),i,f+"",n,t,u):undefined;undefined===o&&(o=i),Pe(n,f,o)}}),jo)}function Lr(n,t){var e=n.length;if(e)return oi(t+=t<0?e:0,e)?n[t]:undefined}function Cr(n,t,e){var r=-1;return t=lt(t.length?t:[Go],Ot(Yu())),function(n,t){var e=n.length;for(n.sort(t);e--;)n[e]=n[e].value;return n}(Rr(n,(function(n,e,u){return{criteria:lt(t,(function(t){return t(n)})),index:++r,value:n}})),(function(n,t){return function(n,t,e){var r=-1,u=n.criteria,i=t.criteria,f=u.length,o=e.length;for(;++r<f;){var a=vu(u[r],i[r]);if(a)return r>=o?a:a*("desc"==e[r]?-1:1)}return n.index-t.index}(n,t,e)}))}function Wr(n,t,e){for(var r=-1,u=t.length,i={};++r<u;){var f=t[r],o=dr(n,f);e(o,f)&&Fr(i,au(f,n),o)}return i}function Ur(n,t,e,r){var u=r?bt:yt,i=-1,f=t.length,o=n;for(n===t&&(t=yu(t)),e&&(o=lt(n,Ot(e)));++i<f;)for(var a=0,c=t[i],l=e?e(c):c;(a=u(o,l,a,r))>-1;)o!==n&&Kt.call(o,a,1),Kt.call(n,a,1);return n}function Br(n,t){for(var e=n?t.length:0,r=e-1;e--;){var u=t[e];if(e==r||u!==i){var i=u;oi(u)?Kt.call(n,u,1):nu(n,u)}}return n}function Tr(n,t){return n+te(se()*(t-n+1))}function $r(n,t){var e="";if(!n||t<1||t>9007199254740991)return e;do{t%2&&(e+=n),(t=te(t/2))&&(n+=n)}while(t);return e}function Dr(n,t){return mi(vi(n,t,Go),n+"")}function Nr(n){return Ne(So(n))}function Mr(n,t){var e=So(n);return Ai(e,Je(t,0,e.length))}function Fr(n,t,e,r){if(!qf(n))return n;for(var u=-1,i=(t=au(t,n)).length,f=i-1,o=n;null!=o&&++u<i;){var a=ki(t[u]),c=e;if(u!=f){var l=o[a];undefined===(c=r?r(l,a,o):undefined)&&(c=qf(l)?l:oi(t[u+1])?[]:{})}qe(o,a,c),o=o[a]}return n}var Pr=be?function(n,t){return be.set(n,t),n}:Go,qr=Jt?function(n,t){return Jt(n,"toString",{configurable:!0,enumerable:!1,value:Zo(t),writable:!0})}:Go;function Zr(n){return Ai(So(n))}function Kr(n,t,e){var r=-1,u=n.length;t<0&&(t=-t>u?0:u+t),(e=e>u?u:e)<0&&(e+=u),u=t>e?0:e-t>>>0,t>>>=0;for(var i=dn(u);++r<u;)i[r]=n[r+t];return i}function Vr(n,t){var e;return tr(n,(function(n,r,u){return!(e=t(n,r,u))})),!!e}function Gr(n,t,e){var r=0,u=null==n?r:n.length;if("number"==typeof t&&t==t&&u<=2147483647){for(;r<u;){var i=r+u>>>1,f=n[i];null!==f&&!Qf(f)&&(e?f<=t:f<t)?r=i+1:u=i}return u}return Hr(n,t,Go,e)}function Hr(n,t,e,r){t=e(t);for(var u=0,i=null==n?0:n.length,f=t!=t,o=null===t,a=Qf(t),c=undefined===t;u<i;){var l=te((u+i)/2),s=e(n[l]),d=undefined!==s,h=null===s,p=s==s,v=Qf(s);if(f)var _=r||p;else _=c?p&&(r||d):o?p&&d&&(r||!h):a?p&&d&&!h&&(r||!v):!h&&!v&&(r?s<=t:s<t);_?u=l+1:i=l}return ae(i,4294967294)}function Jr(n,t){for(var e=-1,r=n.length,u=0,i=[];++e<r;){var f=n[e],o=t?t(f):f;if(!e||!zf(o,a)){var a=o;i[u++]=0===f?0:f}}return i}function Yr(n){return"number"==typeof n?n:Qf(n)?NaN:+n}function Qr(n){if("string"==typeof n)return n;if(Wf(n))return lt(n,Qr)+"";if(Qf(n))return Re?Re.call(n):"";var t=n+"";return"0"==t&&1/n==-Infinity?"-0":t}function Xr(n,t,e){var r=-1,u=at,i=n.length,f=!0,o=[],a=o;if(e)f=!1,u=ct;else if(i>=200){var c=t?null:$u(n);if(c)return Nt(c);f=!1,u=Et,a=new Te}else a=t?[]:o;n:for(;++r<i;){var l=n[r],s=t?t(l):l;if(l=e||0!==l?l:0,f&&s==s){for(var d=a.length;d--;)if(a[d]===s)continue n;t&&a.push(s),o.push(l)}else u(a,s,e)||(a!==o&&a.push(s),o.push(l))}return o}function nu(n,t){return null==(n=_i(n,t=au(t,n)))||delete n[ki(Di(t))]}function tu(n,t,e,r){return Fr(n,t,e(dr(n,t)),r)}function eu(n,t,e,r){for(var u=n.length,i=r?u:-1;(r?i--:++i<u)&&t(n[i],i,n););return e?Kr(n,r?0:i,r?i+1:u):Kr(n,r?i+1:0,r?u:i)}function ru(n,t){var e=n;return e instanceof Ce&&(e=e.value()),dt(t,(function(n,t){return t.func.apply(t.thisArg,st([n],t.args))}),e)}function uu(n,t,e){var r=n.length;if(r<2)return r?Xr(n[0]):[];for(var u=-1,i=dn(r);++u<r;)for(var f=n[u],o=-1;++o<r;)o!=u&&(i[u]=nr(i[u]||f,n[o],t,e));return Xr(fr(i,1),t,e)}function iu(n,t,e){for(var r=-1,u=n.length,i=t.length,f={};++r<u;){var o=r<i?t[r]:undefined;e(f,n[r],o)}return f}function fu(n){return Tf(n)?n:[]}function ou(n){return"function"==typeof n?n:Go}function au(n,t){return Wf(n)?n:ci(n,t)?[n]:Ii(ao(n))}var cu=Dr;function lu(n,t,e){var r=n.length;return e=undefined===e?r:e,!t&&e>=r?n:Kr(n,t,e)}var su=Yt||function(n){return qn.clearTimeout(n)};function du(n,t){if(t)return n.slice();var e=n.length,r=Gn?Gn(e):new n.constructor(e);return n.copy(r),r}function hu(n){var t=new n.constructor(n.byteLength);return new Kn(t).set(new Kn(n)),t}function pu(n,t){var e=t?hu(n.buffer):n.buffer;return new n.constructor(e,n.byteOffset,n.length)}function vu(n,t){if(n!==t){var e=undefined!==n,r=null===n,u=n==n,i=Qf(n),f=undefined!==t,o=null===t,a=t==t,c=Qf(t);if(!o&&!c&&!i&&n>t||i&&f&&a&&!o&&!c||r&&f&&a||!e&&a||!u)return 1;if(!r&&!i&&!c&&n<t||c&&e&&u&&!r&&!i||o&&e&&u||!f&&u||!a)return-1}return 0}function _u(n,t,e,r){for(var u=-1,i=n.length,f=e.length,o=-1,a=t.length,c=oe(i-f,0),l=dn(a+c),s=!r;++o<a;)l[o]=t[o];for(;++u<f;)(s||u<i)&&(l[e[u]]=n[u]);for(;c--;)l[o++]=n[u++];return l}function gu(n,t,e,r){for(var u=-1,i=n.length,f=-1,o=e.length,a=-1,c=t.length,l=oe(i-o,0),s=dn(l+c),d=!r;++u<l;)s[u]=n[u];for(var h=u;++a<c;)s[h+a]=t[a];for(;++f<o;)(d||u<i)&&(s[h+e[f]]=n[u++]);return s}function yu(n,t){var e=-1,r=n.length;for(t||(t=dn(r));++e<r;)t[e]=n[e];return t}function bu(n,t,e,r){var u=!e;e||(e={});for(var i=-1,f=t.length;++i<f;){var o=t[i],a=r?r(e[o],n[o],o,e,n):undefined;undefined===a&&(a=n[o]),u?Ge(e,o,a):qe(e,o,a)}return e}function wu(n,t){return function(e,r){var u=Wf(e)?rt:Ke,i=t?t():{};return u(e,n,Yu(r,2),i)}}function mu(n){return Dr((function(t,e){var r=-1,u=e.length,i=u>1?e[u-1]:undefined,f=u>2?e[2]:undefined;for(i=n.length>3&&"function"==typeof i?(u--,i):undefined,f&&ai(e[0],e[1],f)&&(i=u<3?undefined:i,u=1),t=gn(t);++r<u;){var o=e[r];o&&n(t,o,r,i)}return t}))}function xu(n,t){return function(e,r){if(null==e)return e;if(!Bf(e))return n(e,r);for(var u=e.length,i=t?u:-1,f=gn(e);(t?i--:++i<u)&&!1!==r(f[i],i,f););return e}}function ju(n){return function(t,e,r){for(var u=-1,i=gn(t),f=r(t),o=f.length;o--;){var a=f[n?o:++u];if(!1===e(i[a],a,i))break}return t}}function Au(n){return function(t){var e=Bt(t=ao(t))?Pt(t):undefined,r=e?e[0]:t.charAt(0),u=e?lu(e,1).join(""):t.slice(1);return r[n]()+u}}function Iu(n){return function(t){return dt(Fo(Wo(t).replace(En,"")),n,"")}}function ku(n){return function(){var t=arguments;switch(t.length){case 0:return new n;case 1:return new n(t[0]);case 2:return new n(t[0],t[1]);case 3:return new n(t[0],t[1],t[2]);case 4:return new n(t[0],t[1],t[2],t[3]);case 5:return new n(t[0],t[1],t[2],t[3],t[4]);case 6:return new n(t[0],t[1],t[2],t[3],t[4],t[5]);case 7:return new n(t[0],t[1],t[2],t[3],t[4],t[5],t[6])}var e=ze(n.prototype),r=n.apply(e,t);return qf(r)?r:e}}function Ou(n){return function(t,e,r){var u=gn(t);if(!Bf(t)){var i=Yu(e,3);t=xo(t),e=function(n){return i(u[n],n,u)}}var f=n(t,e,r);return f>-1?u[i?t[f]:f]:undefined}}function Ru(t){return Zu((function(e){var r=e.length,u=r,i=Le.prototype.thru;for(t&&e.reverse();u--;){var f=e[u];if("function"!=typeof f)throw new wn(n);if(i&&!o&&"wrapper"==Hu(f))var o=new Le([],!0)}for(u=o?u:r;++u<r;){var a=Hu(f=e[u]),c="wrapper"==a?Gu(f):undefined;o=c&&li(c[0])&&424==c[1]&&!c[4].length&&1==c[9]?o[Hu(c[0])].apply(o,c[3]):1==f.length&&li(f)?o[a]():o.thru(f)}return function(){var n=arguments,t=n[0];if(o&&1==n.length&&Wf(t))return o.plant(t).value();for(var u=0,i=r?e[u].apply(this,n):t;++u<r;)i=e[u].call(this,i);return i}}))}function Eu(n,t,e,r,u,i,f,o,a,c){var l=128&t,s=1&t,d=2&t,h=24&t,p=512&t,v=d?undefined:ku(n);return function _(){for(var g=arguments.length,y=dn(g),b=g;b--;)y[b]=arguments[b];if(h)var w=Ju(_),m=Lt(y,w);if(r&&(y=_u(y,r,u,h)),i&&(y=gu(y,i,f,h)),g-=m,h&&g<c){var x=Dt(y,w);return Bu(n,t,Eu,_.placeholder,e,y,x,o,a,c-g)}var j=s?e:this,A=d?j[n]:n;return g=y.length,o?y=gi(y,o):p&&g>1&&y.reverse(),l&&a<g&&(y.length=a),this&&this!==qn&&this instanceof _&&(A=v||ku(A)),A.apply(j,y)}}function zu(n,t){return function(e,r){return function(n,t,e,r){return cr(n,(function(n,u,i){t(r,e(n),u,i)})),r}(e,n,t(r),{})}}function Su(n,t){return function(e,r){var u;if(undefined===e&&undefined===r)return t;if(undefined!==e&&(u=e),undefined!==r){if(undefined===u)return r;"string"==typeof e||"string"==typeof r?(e=Qr(e),r=Qr(r)):(e=Yr(e),r=Yr(r)),u=n(e,r)}return u}}function Lu(n){return Zu((function(t){return t=lt(t,Ot(Yu())),Dr((function(e){var r=this;return n(t,(function(n){return et(n,r,e)}))}))}))}function Cu(n,t){var e=(t=undefined===t?" ":Qr(t)).length;if(e<2)return e?$r(t,n):t;var r=$r(t,ne(n/Ft(t)));return Bt(t)?lu(Pt(r),0,n).join(""):r.slice(0,n)}function Wu(n){return function(t,e,r){return r&&"number"!=typeof r&&ai(t,e,r)&&(e=r=undefined),t=ro(t),undefined===e?(e=t,t=0):e=ro(e),function(n,t,e,r){for(var u=-1,i=oe(ne((t-n)/(e||1)),0),f=dn(i);i--;)f[r?i:++u]=n,n+=e;return f}(t,e,r=undefined===r?t<e?1:-1:ro(r),n)}}function Uu(n){return function(t,e){return"string"==typeof t&&"string"==typeof e||(t=fo(t),e=fo(e)),n(t,e)}}function Bu(n,t,e,r,u,i,f,o,a,c){var l=8&t;t|=l?32:64,4&(t&=~(l?64:32))||(t&=-4);var s=[n,t,u,l?i:undefined,l?f:undefined,l?undefined:i,l?undefined:f,o,a,c],d=e.apply(undefined,s);return li(n)&&bi(d,s),d.placeholder=r,xi(d,n,t)}function Tu(n){var t=_n[n];return function(n,e){if(n=fo(n),(e=null==e?0:ae(uo(e),292))&&ue(n)){var r=(ao(n)+"e").split("e");return+((r=(ao(t(r[0]+"e"+(+r[1]+e)))+"e").split("e"))[0]+"e"+(+r[1]-e))}return t(n)}}var $u=_e&&1/Nt(new _e([,-0]))[1]==Infinity?function(n){return new _e(n)}:Xo;function Du(n){return function(t){var e=ri(t);return e==l?Tt(t):e==p?Mt(t):function(n,t){return lt(t,(function(t){return[t,n[t]]}))}(t,n(t))}}function Nu(e,r,u,i,f,o,a,c){var l=2&r;if(!l&&"function"!=typeof e)throw new wn(n);var s=i?i.length:0;if(s||(r&=-97,i=f=undefined),a=undefined===a?a:oe(uo(a),0),c=undefined===c?c:uo(c),s-=f?f.length:0,64&r){var d=i,h=f;i=f=undefined}var p=l?undefined:Gu(e),v=[e,r,u,i,f,d,h,o,a,c];if(p&&function(n,e){var r=n[1],u=e[1],i=r|u,f=i<131,o=128==u&&8==r||128==u&&256==r&&n[7].length<=e[8]||384==u&&e[7].length<=e[8]&&8==r;if(!f&&!o)return n;1&u&&(n[2]=e[2],i|=1&r?0:4);var a=e[3];if(a){var c=n[3];n[3]=c?_u(c,a,e[4]):a,n[4]=c?Dt(n[3],t):e[4]}(a=e[5])&&(c=n[5],n[5]=c?gu(c,a,e[6]):a,n[6]=c?Dt(n[5],t):e[6]);(a=e[7])&&(n[7]=a);128&u&&(n[8]=null==n[8]?e[8]:ae(n[8],e[8]));null==n[9]&&(n[9]=e[9]);n[0]=e[0],n[1]=i}(v,p),e=v[0],r=v[1],u=v[2],i=v[3],f=v[4],!(c=v[9]=undefined===v[9]?l?0:e.length:oe(v[9]-s,0))&&24&r&&(r&=-25),r&&1!=r)_=8==r||16==r?function(n,t,e){var r=ku(n);return function u(){for(var i=arguments.length,f=dn(i),o=i,a=Ju(u);o--;)f[o]=arguments[o];var c=i<3&&f[0]!==a&&f[i-1]!==a?[]:Dt(f,a);return(i-=c.length)<e?Bu(n,t,Eu,u.placeholder,void 0,f,c,void 0,void 0,e-i):et(this&&this!==qn&&this instanceof u?r:n,this,f)}}(e,r,c):32!=r&&33!=r||f.length?Eu.apply(undefined,v):function(n,t,e,r){var u=1&t,i=ku(n);return function t(){for(var f=-1,o=arguments.length,a=-1,c=r.length,l=dn(c+o),s=this&&this!==qn&&this instanceof t?i:n;++a<c;)l[a]=r[a];for(;o--;)l[a++]=arguments[++f];return et(s,u?e:this,l)}}(e,r,u,i);else var _=function(n,t,e){var r=1&t,u=ku(n);return function t(){return(this&&this!==qn&&this instanceof t?u:n).apply(r?e:this,arguments)}}(e,r,u);return xi((p?Pr:bi)(_,v),e,r)}function Mu(n,t,e,r){return undefined===n||zf(n,jn[e])&&!kn.call(r,e)?t:n}function Fu(n,t,e,r,u,i){return qf(n)&&qf(t)&&(i.set(t,n),Sr(n,t,undefined,Fu,i),i.delete(t)),n}function Pu(n){return Gf(n)?undefined:n}function qu(n,t,e,r,u,i){var f=1&e,o=n.length,a=t.length;if(o!=a&&!(f&&a>o))return!1;var c=i.get(n);if(c&&i.get(t))return c==t;var l=-1,s=!0,d=2&e?new Te:undefined;for(i.set(n,t),i.set(t,n);++l<o;){var h=n[l],p=t[l];if(r)var v=f?r(p,h,l,t,n,i):r(h,p,l,n,t,i);if(undefined!==v){if(v)continue;s=!1;break}if(d){if(!pt(t,(function(n,t){if(!Et(d,t)&&(h===n||u(h,n,e,r,i)))return d.push(t)}))){s=!1;break}}else if(h!==p&&!u(h,p,e,r,i)){s=!1;break}}return i.delete(n),i.delete(t),s}function Zu(n){return mi(vi(n,undefined,Wi),n+"")}function Ku(n){return hr(n,xo,ti)}function Vu(n){return hr(n,jo,ei)}var Gu=be?function(n){return be.get(n)}:Xo;function Hu(n){for(var t=n.name+"",e=we[t],r=kn.call(we,t)?e.length:0;r--;){var u=e[r],i=u.func;if(null==i||i==n)return u.name}return t}function Ju(n){return(kn.call(Ee,"placeholder")?Ee:n).placeholder}function Yu(){var n=Ee.iteratee||Ho;return n=n===Ho?Ar:n,arguments.length?n(arguments[0],arguments[1]):n}function Qu(n,t){var e,r,u=n.__data__;return("string"==(r=typeof(e=t))||"number"==r||"symbol"==r||"boolean"==r?"__proto__"!==e:null===e)?u["string"==typeof t?"string":"hash"]:u.map}function Xu(n){for(var t=xo(n),e=t.length;e--;){var r=t[e],u=n[r];t[e]=[r,u,hi(u)]}return t}function ni(n,t){var e=function(n,t){return null==n?void 0:n[t]}(n,t);return jr(e)?e:undefined}var ti=ee?function(n){return null==n?[]:(n=gn(n),ot(ee(n),(function(t){return jt.call(n,t)})))}:fa,ei=ee?function(n){for(var t=[];n;)st(t,ti(n)),n=Hn(n);return t}:fa,ri=pr;function ui(n,t,e){for(var r=-1,u=(t=au(t,n)).length,i=!1;++r<u;){var f=ki(t[r]);if(!(i=null!=n&&e(n,f)))break;n=n[f]}return i||++r!=u?i:!!(u=null==n?0:n.length)&&Pf(u)&&oi(f,u)&&(Wf(n)||Cf(n))}function ii(n){return"function"!=typeof n.constructor||di(n)?{}:ze(Hn(n))}function fi(n){return Wf(n)||Cf(n)||!!(Vt&&n&&n[Vt])}function oi(n,t){var e=typeof n;return!!(t=null==t?9007199254740991:t)&&("number"==e||"symbol"!=e&&un.test(n))&&n>-1&&n%1==0&&n<t}function ai(n,t,e){if(!qf(e))return!1;var r=typeof t;return!!("number"==r?Bf(e)&&oi(t,e.length):"string"==r&&t in e)&&zf(e[t],n)}function ci(n,t){if(Wf(n))return!1;var e=typeof n;return!("number"!=e&&"symbol"!=e&&"boolean"!=e&&null!=n&&!Qf(n))||(N.test(n)||!D.test(n)||null!=t&&n in gn(t))}function li(n){var t=Hu(n),e=Ee[t];if("function"!=typeof e||!(t in Ce.prototype))return!1;if(n===e)return!0;var r=Gu(e);return!!r&&n===r[0]}(he&&ri(new he(new ArrayBuffer(1)))!=b||pe&&ri(new pe)!=l||ve&&"[object Promise]"!=ri(ve.resolve())||_e&&ri(new _e)!=p||ge&&ri(new ge)!=g)&&(ri=function(n){var t=pr(n),e=t==d?n.constructor:undefined,r=e?Oi(e):"";if(r)switch(r){case me:return b;case xe:return l;case je:return"[object Promise]";case Ae:return p;case Ie:return g}return t});var si=An?Mf:oa;function di(n){var t=n&&n.constructor;return n===("function"==typeof t&&t.prototype||jn)}function hi(n){return n==n&&!qf(n)}function pi(n,t){return function(e){return null!=e&&(e[n]===t&&(undefined!==t||n in gn(e)))}}function vi(n,t,e){return t=oe(undefined===t?n.length-1:t,0),function(){for(var r=arguments,u=-1,i=oe(r.length-t,0),f=dn(i);++u<i;)f[u]=r[t+u];u=-1;for(var o=dn(t+1);++u<t;)o[u]=r[u];return o[t]=e(f),et(n,this,o)}}function _i(n,t){return t.length<2?n:dr(n,Kr(t,0,-1))}function gi(n,t){for(var e=n.length,r=ae(t.length,e),u=yu(n);r--;){var i=t[r];n[r]=oi(i,e)?u[i]:undefined}return n}function yi(n,t){if(("constructor"!==t||"function"!=typeof n[t])&&"__proto__"!=t)return n[t]}var bi=ji(Pr),wi=Xt||function(n,t){return qn.setTimeout(n,t)},mi=ji(qr);function xi(n,t,r){var u=t+"";return mi(n,function(n,t){var e=t.length;if(!e)return n;var r=e-1;return t[r]=(e>1?"& ":"")+t[r],t=t.join(e>2?", ":" "),n.replace(V,"{\n/* [wrapped with "+t+"] */\n")}(u,function(n,t){return ut(e,(function(e){var r="_."+e[0];t&e[1]&&!at(n,r)&&n.push(r)})),n.sort()}(function(n){var t=n.match(G);return t?t[1].split(H):[]}(u),r)))}function ji(n){var t=0,e=0;return function(){var r=ce(),u=16-(r-e);if(e=r,u>0){if(++t>=800)return arguments[0]}else t=0;return n.apply(undefined,arguments)}}function Ai(n,t){var e=-1,r=n.length,u=r-1;for(t=undefined===t?r:t;++e<t;){var i=Tr(e,u),f=n[i];n[i]=n[e],n[e]=f}return n.length=t,n}var Ii=function(n){var t=Af(n,(function(n){return 500===e.size&&e.clear(),n})),e=t.cache;return t}((function(n){var t=[];return 46===n.charCodeAt(0)&&t.push(""),n.replace(M,(function(n,e,r,u){t.push(r?u.replace(Y,"$1"):e||n)})),t}));function ki(n){if("string"==typeof n||Qf(n))return n;var t=n+"";return"0"==t&&1/n==-Infinity?"-0":t}function Oi(n){if(null!=n){try{return In.call(n)}catch(n){}try{return n+""}catch(n){}}return""}function Ri(n){if(n instanceof Ce)return n.clone();var t=new Le(n.__wrapped__,n.__chain__);return t.__actions__=yu(n.__actions__),t.__index__=n.__index__,t.__values__=n.__values__,t}var Ei=Dr((function(n,t){return Tf(n)?nr(n,fr(t,1,Tf,!0)):[]})),zi=Dr((function(n,t){var e=Di(t);return Tf(e)&&(e=undefined),Tf(n)?nr(n,fr(t,1,Tf,!0),Yu(e,2)):[]})),Si=Dr((function(n,t){var e=Di(t);return Tf(e)&&(e=undefined),Tf(n)?nr(n,fr(t,1,Tf,!0),undefined,e):[]}));function Li(n,t,e){var r=null==n?0:n.length;if(!r)return-1;var u=null==e?0:uo(e);return u<0&&(u=oe(r+u,0)),gt(n,Yu(t,3),u)}function Ci(n,t,e){var r=null==n?0:n.length;if(!r)return-1;var u=r-1;return undefined!==e&&(u=uo(e),u=e<0?oe(r+u,0):ae(u,r-1)),gt(n,Yu(t,3),u,!0)}function Wi(n){return(null==n?0:n.length)?fr(n,1):[]}function Ui(n){return n&&n.length?n[0]:undefined}var Bi=Dr((function(n){var t=lt(n,fu);return t.length&&t[0]===n[0]?yr(t):[]})),Ti=Dr((function(n){var t=Di(n),e=lt(n,fu);return t===Di(e)?t=undefined:e.pop(),e.length&&e[0]===n[0]?yr(e,Yu(t,2)):[]})),$i=Dr((function(n){var t=Di(n),e=lt(n,fu);return(t="function"==typeof t?t:undefined)&&e.pop(),e.length&&e[0]===n[0]?yr(e,undefined,t):[]}));function Di(n){var t=null==n?0:n.length;return t?n[t-1]:undefined}var Ni=Dr(Mi);function Mi(n,t){return n&&n.length&&t&&t.length?Ur(n,t):n}var Fi=Zu((function(n,t){var e=null==n?0:n.length,r=He(n,t);return Br(n,lt(t,(function(n){return oi(n,e)?+n:n})).sort(vu)),r}));function Pi(n){return null==n?n:de.call(n)}var qi=Dr((function(n){return Xr(fr(n,1,Tf,!0))})),Zi=Dr((function(n){var t=Di(n);return Tf(t)&&(t=undefined),Xr(fr(n,1,Tf,!0),Yu(t,2))})),Ki=Dr((function(n){var t=Di(n);return t="function"==typeof t?t:undefined,Xr(fr(n,1,Tf,!0),undefined,t)}));function Vi(n){if(!n||!n.length)return[];var t=0;return n=ot(n,(function(n){if(Tf(n))return t=oe(n.length,t),!0})),kt(t,(function(t){return lt(n,xt(t))}))}function Gi(n,t){if(!n||!n.length)return[];var e=Vi(n);return null==t?e:lt(e,(function(n){return et(t,undefined,n)}))}var Hi=Dr((function(n,t){return Tf(n)?nr(n,t):[]})),Ji=Dr((function(n){return uu(ot(n,Tf))})),Yi=Dr((function(n){var t=Di(n);return Tf(t)&&(t=undefined),uu(ot(n,Tf),Yu(t,2))})),Qi=Dr((function(n){var t=Di(n);return t="function"==typeof t?t:undefined,uu(ot(n,Tf),undefined,t)})),Xi=Dr(Vi);var nf=Dr((function(n){var t=n.length,e=t>1?n[t-1]:undefined;return e="function"==typeof e?(n.pop(),e):undefined,Gi(n,e)}));function tf(n){var t=Ee(n);return t.__chain__=!0,t}function ef(n,t){return t(n)}var rf=Zu((function(n){var t=n.length,e=t?n[0]:0,r=this.__wrapped__,u=function(t){return He(t,n)};return!(t>1||this.__actions__.length)&&r instanceof Ce&&oi(e)?((r=r.slice(e,+e+(t?1:0))).__actions__.push({func:ef,args:[u],thisArg:undefined}),new Le(r,this.__chain__).thru((function(n){return t&&!n.length&&n.push(undefined),n}))):this.thru(u)}));var uf=wu((function(n,t,e){kn.call(n,e)?++n[e]:Ge(n,e,1)}));var ff=Ou(Li),of=Ou(Ci);function af(n,t){return(Wf(n)?ut:tr)(n,Yu(t,3))}function cf(n,t){return(Wf(n)?it:er)(n,Yu(t,3))}var lf=wu((function(n,t,e){kn.call(n,e)?n[e].push(t):Ge(n,e,[t])}));var sf=Dr((function(n,t,e){var r=-1,u="function"==typeof t,i=Bf(n)?dn(n.length):[];return tr(n,(function(n){i[++r]=u?et(t,n,e):br(n,t,e)})),i})),df=wu((function(n,t,e){Ge(n,e,t)}));function hf(n,t){return(Wf(n)?lt:Rr)(n,Yu(t,3))}var pf=wu((function(n,t,e){n[e?0:1].push(t)}),(function(){return[[],[]]}));var vf=Dr((function(n,t){if(null==n)return[];var e=t.length;return e>1&&ai(n,t[0],t[1])?t=[]:e>2&&ai(t[0],t[1],t[2])&&(t=[t[0]]),Cr(n,fr(t,1),[])})),_f=Qt||function(){return qn.Date.now()};function gf(n,t,e){return t=e?undefined:t,Nu(n,128,undefined,undefined,undefined,undefined,t=n&&null==t?n.length:t)}function yf(t,e){var r;if("function"!=typeof e)throw new wn(n);return t=uo(t),function(){return--t>0&&(r=e.apply(this,arguments)),t<=1&&(e=undefined),r}}var bf=Dr((function(n,t,e){var r=1;if(e.length){var u=Dt(e,Ju(bf));r|=32}return Nu(n,r,t,e,u)})),wf=Dr((function(n,t,e){var r=3;if(e.length){var u=Dt(e,Ju(wf));r|=32}return Nu(t,r,n,e,u)}));function mf(t,e,r){var u,i,f,o,a,c,l=0,s=!1,d=!1,h=!0;if("function"!=typeof t)throw new wn(n);function p(n){var e=u,r=i;return u=i=undefined,l=n,o=t.apply(r,e)}function v(n){return l=n,a=wi(g,e),s?p(n):o}function _(n){var t=n-c;return undefined===c||t>=e||t<0||d&&n-l>=f}function g(){var n=_f();if(_(n))return y(n);a=wi(g,function(n){var t=e-(n-c);return d?ae(t,f-(n-l)):t}(n))}function y(n){return a=undefined,h&&u?p(n):(u=i=undefined,o)}function b(){var n=_f(),t=_(n);if(u=arguments,i=this,c=n,t){if(undefined===a)return v(c);if(d)return su(a),a=wi(g,e),p(c)}return undefined===a&&(a=wi(g,e)),o}return e=fo(e)||0,qf(r)&&(s=!!r.leading,f=(d="maxWait"in r)?oe(fo(r.maxWait)||0,e):f,h="trailing"in r?!!r.trailing:h),b.cancel=function(){undefined!==a&&su(a),l=0,u=c=i=a=undefined},b.flush=function(){return undefined===a?o:y(_f())},b}var xf=Dr((function(n,t){return Xe(n,1,t)})),jf=Dr((function(n,t,e){return Xe(n,fo(t)||0,e)}));function Af(t,e){if("function"!=typeof t||null!=e&&"function"!=typeof e)throw new wn(n);var r=function(){var n=arguments,u=e?e.apply(this,n):n[0],i=r.cache;if(i.has(u))return i.get(u);var f=t.apply(this,n);return r.cache=i.set(u,f)||i,f};return r.cache=new(Af.Cache||Be),r}function If(t){if("function"!=typeof t)throw new wn(n);return function(){var n=arguments;switch(n.length){case 0:return!t.call(this);case 1:return!t.call(this,n[0]);case 2:return!t.call(this,n[0],n[1]);case 3:return!t.call(this,n[0],n[1],n[2])}return!t.apply(this,n)}}Af.Cache=Be;var kf=cu((function(n,t){var e=(t=1==t.length&&Wf(t[0])?lt(t[0],Ot(Yu())):lt(fr(t,1),Ot(Yu()))).length;return Dr((function(r){for(var u=-1,i=ae(r.length,e);++u<i;)r[u]=t[u].call(this,r[u]);return et(n,this,r)}))})),Of=Dr((function(n,t){return Nu(n,32,undefined,t,Dt(t,Ju(Of)))})),Rf=Dr((function(n,t){return Nu(n,64,undefined,t,Dt(t,Ju(Rf)))})),Ef=Zu((function(n,t){return Nu(n,256,undefined,undefined,undefined,t)}));function zf(n,t){return n===t||n!=n&&t!=t}var Sf=Uu(vr),Lf=Uu((function(n,t){return n>=t})),Cf=wr(function(){return arguments}())?wr:function(n){return Zf(n)&&kn.call(n,"callee")&&!jt.call(n,"callee")},Wf=dn.isArray,Uf=Jn?Ot(Jn):function(n){return Zf(n)&&pr(n)==y};function Bf(n){return null!=n&&Pf(n.length)&&!Mf(n)}function Tf(n){return Zf(n)&&Bf(n)}var $f=re||oa,Df=Yn?Ot(Yn):function(n){return Zf(n)&&pr(n)==f};function Nf(n){if(!Zf(n))return!1;var t=pr(n);return t==o||"[object DOMException]"==t||"string"==typeof n.message&&"string"==typeof n.name&&!Gf(n)}function Mf(n){if(!qf(n))return!1;var t=pr(n);return t==a||t==c||"[object AsyncFunction]"==t||"[object Proxy]"==t}function Ff(n){return"number"==typeof n&&n==uo(n)}function Pf(n){return"number"==typeof n&&n>-1&&n%1==0&&n<=9007199254740991}function qf(n){var t=typeof n;return null!=n&&("object"==t||"function"==t)}function Zf(n){return null!=n&&"object"==typeof n}var Kf=Qn?Ot(Qn):function(n){return Zf(n)&&ri(n)==l};function Vf(n){return"number"==typeof n||Zf(n)&&pr(n)==s}function Gf(n){if(!Zf(n)||pr(n)!=d)return!1;var t=Hn(n);if(null===t)return!0;var e=kn.call(t,"constructor")&&t.constructor;return"function"==typeof e&&e instanceof e&&In.call(e)==Cn}var Hf=Xn?Ot(Xn):function(n){return Zf(n)&&pr(n)==h};var Jf=nt?Ot(nt):function(n){return Zf(n)&&ri(n)==p};function Yf(n){return"string"==typeof n||!Wf(n)&&Zf(n)&&pr(n)==v}function Qf(n){return"symbol"==typeof n||Zf(n)&&pr(n)==_}var Xf=tt?Ot(tt):function(n){return Zf(n)&&Pf(n.length)&&!!Tn[pr(n)]};var no=Uu(Or),to=Uu((function(n,t){return n<=t}));function eo(n){if(!n)return[];if(Bf(n))return Yf(n)?Pt(n):yu(n);if(Gt&&n[Gt])return function(n){for(var t,e=[];!(t=n.next()).done;)e.push(t.value);return e}(n[Gt]());var t=ri(n);return(t==l?Tt:t==p?Nt:So)(n)}function ro(n){return n?Infinity===(n=fo(n))||-Infinity===n?17976931348623157e292*(n<0?-1:1):n==n?n:0:0===n?n:0}function uo(n){var t=ro(n),e=t%1;return t==t?e?t-e:t:0}function io(n){return n?Je(uo(n),0,4294967295):0}function fo(n){if("number"==typeof n)return n;if(Qf(n))return NaN;if(qf(n)){var t="function"==typeof n.valueOf?n.valueOf():n;n=qf(t)?t+"":t}if("string"!=typeof n)return 0===n?n:+n;n=n.replace(q,"");var e=tn.test(n);return e||rn.test(n)?Mn(n.slice(2),e?2:8):nn.test(n)?NaN:+n}function oo(n){return bu(n,jo(n))}function ao(n){return null==n?"":Qr(n)}var co=mu((function(n,t){if(di(t)||Bf(t))bu(t,xo(t),n);else for(var e in t)kn.call(t,e)&&qe(n,e,t[e])})),lo=mu((function(n,t){bu(t,jo(t),n)})),so=mu((function(n,t,e,r){bu(t,jo(t),n,r)})),ho=mu((function(n,t,e,r){bu(t,xo(t),n,r)})),po=Zu(He);var vo=Dr((function(n,t){n=gn(n);var e=-1,r=t.length,u=r>2?t[2]:undefined;for(u&&ai(t[0],t[1],u)&&(r=1);++e<r;)for(var i=t[e],f=jo(i),o=-1,a=f.length;++o<a;){var c=f[o],l=n[c];(undefined===l||zf(l,jn[c])&&!kn.call(n,c))&&(n[c]=i[c])}return n})),_o=Dr((function(n){return n.push(undefined,Fu),et(Io,undefined,n)}));function go(n,t,e){var r=null==n?undefined:dr(n,t);return undefined===r?e:r}function yo(n,t){return null!=n&&ui(n,t,gr)}var bo=zu((function(n,t,e){null!=t&&"function"!=typeof t.toString&&(t=Sn.call(t)),n[t]=e}),Zo(Go)),wo=zu((function(n,t,e){null!=t&&"function"!=typeof t.toString&&(t=Sn.call(t)),kn.call(n,t)?n[t].push(e):n[t]=[e]}),Yu),mo=Dr(br);function xo(n){return Bf(n)?De(n):Ir(n)}function jo(n){return Bf(n)?De(n,!0):kr(n)}var Ao=mu((function(n,t,e){Sr(n,t,e)})),Io=mu((function(n,t,e,r){Sr(n,t,e,r)})),ko=Zu((function(n,t){var e={};if(null==n)return e;var r=!1;t=lt(t,(function(t){return t=au(t,n),r||(r=t.length>1),t})),bu(n,Vu(n),e),r&&(e=Ye(e,7,Pu));for(var u=t.length;u--;)nu(e,t[u]);return e}));var Oo=Zu((function(n,t){return null==n?{}:function(n,t){return Wr(n,t,(function(t,e){return yo(n,e)}))}(n,t)}));function Ro(n,t){if(null==n)return{};var e=lt(Vu(n),(function(n){return[n]}));return t=Yu(t),Wr(n,e,(function(n,e){return t(n,e[0])}))}var Eo=Du(xo),zo=Du(jo);function So(n){return null==n?[]:Rt(n,xo(n))}var Lo=Iu((function(n,t,e){return t=t.toLowerCase(),n+(e?Co(t):t)}));function Co(n){return Mo(ao(n).toLowerCase())}function Wo(n){return(n=ao(n))&&n.replace(fn,Ct).replace(zn,"")}var Uo=Iu((function(n,t,e){return n+(e?"-":"")+t.toLowerCase()})),Bo=Iu((function(n,t,e){return n+(e?" ":"")+t.toLowerCase()})),To=Au("toLowerCase");var $o=Iu((function(n,t,e){return n+(e?"_":"")+t.toLowerCase()}));var Do=Iu((function(n,t,e){return n+(e?" ":"")+Mo(t)}));var No=Iu((function(n,t,e){return n+(e?" ":"")+t.toUpperCase()})),Mo=Au("toUpperCase");function Fo(n,t,e){return n=ao(n),undefined===(t=e?undefined:t)?function(n){return Wn.test(n)}(n)?function(n){return n.match(Ln)||[]}(n):function(n){return n.match(J)||[]}(n):n.match(t)||[]}var Po=Dr((function(n,t){try{return et(n,undefined,t)}catch(n){return Nf(n)?n:new pn(n)}})),qo=Zu((function(n,t){return ut(t,(function(t){t=ki(t),Ge(n,t,bf(n[t],n))})),n}));function Zo(n){return function(){return n}}var Ko=Ru(),Vo=Ru(!0);function Go(n){return n}function Ho(n){return Ar("function"==typeof n?n:Ye(n,1))}var Jo=Dr((function(n,t){return function(e){return br(e,n,t)}})),Yo=Dr((function(n,t){return function(e){return br(n,e,t)}}));function Qo(n,t,e){var r=xo(t),u=sr(t,r);null!=e||qf(t)&&(u.length||!r.length)||(e=t,t=n,n=this,u=sr(t,xo(t)));var i=!(qf(e)&&"chain"in e&&!e.chain),f=Mf(n);return ut(u,(function(e){var r=t[e];n[e]=r,f&&(n.prototype[e]=function(){var t=this.__chain__;if(i||t){var e=n(this.__wrapped__),u=e.__actions__=yu(this.__actions__);return u.push({func:r,args:arguments,thisArg:n}),e.__chain__=t,e}return r.apply(n,st([this.value()],arguments))})})),n}function Xo(){}var na=Lu(lt),ta=Lu(ft),ea=Lu(pt);function ra(n){return ci(n)?xt(ki(n)):function(n){return function(t){return dr(t,n)}}(n)}var ua=Wu(),ia=Wu(!0);function fa(){return[]}function oa(){return!1}var aa=Su((function(n,t){return n+t}),0),ca=Tu("ceil"),la=Su((function(n,t){return n/t}),1),sa=Tu("floor");var da,ha=Su((function(n,t){return n*t}),1),pa=Tu("round"),va=Su((function(n,t){return n-t}),0);return Ee.after=function(t,e){if("function"!=typeof e)throw new wn(n);return t=uo(t),function(){if(--t<1)return e.apply(this,arguments)}},Ee.ary=gf,Ee.assign=co,Ee.assignIn=lo,Ee.assignInWith=so,Ee.assignWith=ho,Ee.at=po,Ee.before=yf,Ee.bind=bf,Ee.bindAll=qo,Ee.bindKey=wf,Ee.castArray=function(){if(!arguments.length)return[];var n=arguments[0];return Wf(n)?n:[n]},Ee.chain=tf,Ee.chunk=function(n,t,e){t=(e?ai(n,t,e):undefined===t)?1:oe(uo(t),0);var r=null==n?0:n.length;if(!r||t<1)return[];for(var u=0,i=0,f=dn(ne(r/t));u<r;)f[i++]=Kr(n,u,u+=t);return f},Ee.compact=function(n){for(var t=-1,e=null==n?0:n.length,r=0,u=[];++t<e;){var i=n[t];i&&(u[r++]=i)}return u},Ee.concat=function(){var n=arguments.length;if(!n)return[];for(var t=dn(n-1),e=arguments[0],r=n;r--;)t[r-1]=arguments[r];return st(Wf(e)?yu(e):[e],fr(t,1))},Ee.cond=function(t){var e=null==t?0:t.length,r=Yu();return t=e?lt(t,(function(t){if("function"!=typeof t[1])throw new wn(n);return[r(t[0]),t[1]]})):[],Dr((function(n){for(var r=-1;++r<e;){var u=t[r];if(et(u[0],this,n))return et(u[1],this,n)}}))},Ee.conforms=function(n){return function(n){var t=xo(n);return function(e){return Qe(e,n,t)}}(Ye(n,1))},Ee.constant=Zo,Ee.countBy=uf,Ee.create=function(n,t){var e=ze(n);return null==t?e:Ve(e,t)},Ee.curry=function n(t,e,r){var u=Nu(t,8,undefined,undefined,undefined,undefined,undefined,e=r?undefined:e);return u.placeholder=n.placeholder,u},Ee.curryRight=function n(t,e,r){var u=Nu(t,16,undefined,undefined,undefined,undefined,undefined,e=r?undefined:e);return u.placeholder=n.placeholder,u},Ee.debounce=mf,Ee.defaults=vo,Ee.defaultsDeep=_o,Ee.defer=xf,Ee.delay=jf,Ee.difference=Ei,Ee.differenceBy=zi,Ee.differenceWith=Si,Ee.drop=function(n,t,e){var r=null==n?0:n.length;return r?Kr(n,(t=e||undefined===t?1:uo(t))<0?0:t,r):[]},Ee.dropRight=function(n,t,e){var r=null==n?0:n.length;return r?Kr(n,0,(t=r-(t=e||undefined===t?1:uo(t)))<0?0:t):[]},Ee.dropRightWhile=function(n,t){return n&&n.length?eu(n,Yu(t,3),!0,!0):[]},Ee.dropWhile=function(n,t){return n&&n.length?eu(n,Yu(t,3),!0):[]},Ee.fill=function(n,t,e,r){var u=null==n?0:n.length;return u?(e&&"number"!=typeof e&&ai(n,t,e)&&(e=0,r=u),function(n,t,e,r){var u=n.length;for((e=uo(e))<0&&(e=-e>u?0:u+e),(r=void 0===r||r>u?u:uo(r))<0&&(r+=u),r=e>r?0:io(r);e<r;)n[e++]=t;return n}(n,t,e,r)):[]},Ee.filter=function(n,t){return(Wf(n)?ot:ir)(n,Yu(t,3))},Ee.flatMap=function(n,t){return fr(hf(n,t),1)},Ee.flatMapDeep=function(n,t){return fr(hf(n,t),Infinity)},Ee.flatMapDepth=function(n,t,e){return e=undefined===e?1:uo(e),fr(hf(n,t),e)},Ee.flatten=Wi,Ee.flattenDeep=function(n){return(null==n?0:n.length)?fr(n,Infinity):[]},Ee.flattenDepth=function(n,t){return(null==n?0:n.length)?fr(n,t=undefined===t?1:uo(t)):[]},Ee.flip=function(n){return Nu(n,512)},Ee.flow=Ko,Ee.flowRight=Vo,Ee.fromPairs=function(n){for(var t=-1,e=null==n?0:n.length,r={};++t<e;){var u=n[t];r[u[0]]=u[1]}return r},Ee.functions=function(n){return null==n?[]:sr(n,xo(n))},Ee.functionsIn=function(n){return null==n?[]:sr(n,jo(n))},Ee.groupBy=lf,Ee.initial=function(n){return(null==n?0:n.length)?Kr(n,0,-1):[]},Ee.intersection=Bi,Ee.intersectionBy=Ti,Ee.intersectionWith=$i,Ee.invert=bo,Ee.invertBy=wo,Ee.invokeMap=sf,Ee.iteratee=Ho,Ee.keyBy=df,Ee.keys=xo,Ee.keysIn=jo,Ee.map=hf,Ee.mapKeys=function(n,t){var e={};return t=Yu(t,3),cr(n,(function(n,r,u){Ge(e,t(n,r,u),n)})),e},Ee.mapValues=function(n,t){var e={};return t=Yu(t,3),cr(n,(function(n,r,u){Ge(e,r,t(n,r,u))})),e},Ee.matches=function(n){return Er(Ye(n,1))},Ee.matchesProperty=function(n,t){return zr(n,Ye(t,1))},Ee.memoize=Af,Ee.merge=Ao,Ee.mergeWith=Io,Ee.method=Jo,Ee.methodOf=Yo,Ee.mixin=Qo,Ee.negate=If,Ee.nthArg=function(n){return n=uo(n),Dr((function(t){return Lr(t,n)}))},Ee.omit=ko,Ee.omitBy=function(n,t){return Ro(n,If(Yu(t)))},Ee.once=function(n){return yf(2,n)},Ee.orderBy=function(n,t,e,r){return null==n?[]:(Wf(t)||(t=null==t?[]:[t]),Wf(e=r?undefined:e)||(e=null==e?[]:[e]),Cr(n,t,e))},Ee.over=na,Ee.overArgs=kf,Ee.overEvery=ta,Ee.overSome=ea,Ee.partial=Of,Ee.partialRight=Rf,Ee.partition=pf,Ee.pick=Oo,Ee.pickBy=Ro,Ee.property=ra,Ee.propertyOf=function(n){return function(t){return null==n?undefined:dr(n,t)}},Ee.pull=Ni,Ee.pullAll=Mi,Ee.pullAllBy=function(n,t,e){return n&&n.length&&t&&t.length?Ur(n,t,Yu(e,2)):n},Ee.pullAllWith=function(n,t,e){return n&&n.length&&t&&t.length?Ur(n,t,undefined,e):n},Ee.pullAt=Fi,Ee.range=ua,Ee.rangeRight=ia,Ee.rearg=Ef,Ee.reject=function(n,t){return(Wf(n)?ot:ir)(n,If(Yu(t,3)))},Ee.remove=function(n,t){var e=[];if(!n||!n.length)return e;var r=-1,u=[],i=n.length;for(t=Yu(t,3);++r<i;){var f=n[r];t(f,r,n)&&(e.push(f),u.push(r))}return Br(n,u),e},Ee.rest=function(t,e){if("function"!=typeof t)throw new wn(n);return Dr(t,e=undefined===e?e:uo(e))},Ee.reverse=Pi,Ee.sampleSize=function(n,t,e){return t=(e?ai(n,t,e):undefined===t)?1:uo(t),(Wf(n)?Me:Mr)(n,t)},Ee.set=function(n,t,e){return null==n?n:Fr(n,t,e)},Ee.setWith=function(n,t,e,r){return r="function"==typeof r?r:undefined,null==n?n:Fr(n,t,e,r)},Ee.shuffle=function(n){return(Wf(n)?Fe:Zr)(n)},Ee.slice=function(n,t,e){var r=null==n?0:n.length;return r?(e&&"number"!=typeof e&&ai(n,t,e)?(t=0,e=r):(t=null==t?0:uo(t),e=undefined===e?r:uo(e)),Kr(n,t,e)):[]},Ee.sortBy=vf,Ee.sortedUniq=function(n){return n&&n.length?Jr(n):[]},Ee.sortedUniqBy=function(n,t){return n&&n.length?Jr(n,Yu(t,2)):[]},Ee.split=function(n,t,e){return e&&"number"!=typeof e&&ai(n,t,e)&&(t=e=undefined),(e=undefined===e?4294967295:e>>>0)?(n=ao(n))&&("string"==typeof t||null!=t&&!Hf(t))&&!(t=Qr(t))&&Bt(n)?lu(Pt(n),0,e):n.split(t,e):[]},Ee.spread=function(t,e){if("function"!=typeof t)throw new wn(n);return e=null==e?0:oe(uo(e),0),Dr((function(n){var r=n[e],u=lu(n,0,e);return r&&st(u,r),et(t,this,u)}))},Ee.tail=function(n){var t=null==n?0:n.length;return t?Kr(n,1,t):[]},Ee.take=function(n,t,e){return n&&n.length?Kr(n,0,(t=e||undefined===t?1:uo(t))<0?0:t):[]},Ee.takeRight=function(n,t,e){var r=null==n?0:n.length;return r?Kr(n,(t=r-(t=e||undefined===t?1:uo(t)))<0?0:t,r):[]},Ee.takeRightWhile=function(n,t){return n&&n.length?eu(n,Yu(t,3),!1,!0):[]},Ee.takeWhile=function(n,t){return n&&n.length?eu(n,Yu(t,3)):[]},Ee.tap=function(n,t){return t(n),n},Ee.throttle=function(t,e,r){var u=!0,i=!0;if("function"!=typeof t)throw new wn(n);return qf(r)&&(u="leading"in r?!!r.leading:u,i="trailing"in r?!!r.trailing:i),mf(t,e,{leading:u,maxWait:e,trailing:i})},Ee.thru=ef,Ee.toArray=eo,Ee.toPairs=Eo,Ee.toPairsIn=zo,Ee.toPath=function(n){return Wf(n)?lt(n,ki):Qf(n)?[n]:yu(Ii(ao(n)))},Ee.toPlainObject=oo,Ee.transform=function(n,t,e){var r=Wf(n),u=r||$f(n)||Xf(n);if(t=Yu(t,4),null==e){var i=n&&n.constructor;e=u?r?new i:[]:qf(n)&&Mf(i)?ze(Hn(n)):{}}return(u?ut:cr)(n,(function(n,r,u){return t(e,n,r,u)})),e},Ee.unary=function(n){return gf(n,1)},Ee.union=qi,Ee.unionBy=Zi,Ee.unionWith=Ki,Ee.uniq=function(n){return n&&n.length?Xr(n):[]},Ee.uniqBy=function(n,t){return n&&n.length?Xr(n,Yu(t,2)):[]},Ee.uniqWith=function(n,t){return t="function"==typeof t?t:undefined,n&&n.length?Xr(n,undefined,t):[]},Ee.unset=function(n,t){return null==n||nu(n,t)},Ee.unzip=Vi,Ee.unzipWith=Gi,Ee.update=function(n,t,e){return null==n?n:tu(n,t,ou(e))},Ee.updateWith=function(n,t,e,r){return r="function"==typeof r?r:undefined,null==n?n:tu(n,t,ou(e),r)},Ee.values=So,Ee.valuesIn=function(n){return null==n?[]:Rt(n,jo(n))},Ee.without=Hi,Ee.words=Fo,Ee.wrap=function(n,t){return Of(ou(t),n)},Ee.xor=Ji,Ee.xorBy=Yi,Ee.xorWith=Qi,Ee.zip=Xi,Ee.zipObject=function(n,t){return iu(n||[],t||[],qe)},Ee.zipObjectDeep=function(n,t){return iu(n||[],t||[],Fr)},Ee.zipWith=nf,Ee.entries=Eo,Ee.entriesIn=zo,Ee.extend=lo,Ee.extendWith=so,Qo(Ee,Ee),Ee.add=aa,Ee.attempt=Po,Ee.camelCase=Lo,Ee.capitalize=Co,Ee.ceil=ca,Ee.clamp=function(n,t,e){return undefined===e&&(e=t,t=undefined),undefined!==e&&(e=(e=fo(e))==e?e:0),undefined!==t&&(t=(t=fo(t))==t?t:0),Je(fo(n),t,e)},Ee.clone=function(n){return Ye(n,4)},Ee.cloneDeep=function(n){return Ye(n,5)},Ee.cloneDeepWith=function(n,t){return Ye(n,5,t="function"==typeof t?t:undefined)},Ee.cloneWith=function(n,t){return Ye(n,4,t="function"==typeof t?t:undefined)},Ee.conformsTo=function(n,t){return null==t||Qe(n,t,xo(t))},Ee.deburr=Wo,Ee.defaultTo=function(n,t){return null==n||n!=n?t:n},Ee.divide=la,Ee.endsWith=function(n,t,e){n=ao(n),t=Qr(t);var r=n.length,u=e=undefined===e?r:Je(uo(e),0,r);return(e-=t.length)>=0&&n.slice(e,u)==t},Ee.eq=zf,Ee.escape=function(n){return(n=ao(n))&&U.test(n)?n.replace(C,Wt):n},Ee.escapeRegExp=function(n){return(n=ao(n))&&P.test(n)?n.replace(F,"\\$&"):n},Ee.every=function(n,t,e){var r=Wf(n)?ft:rr;return e&&ai(n,t,e)&&(t=undefined),r(n,Yu(t,3))},Ee.find=ff,Ee.findIndex=Li,Ee.findKey=function(n,t){return _t(n,Yu(t,3),cr)},Ee.findLast=of,Ee.findLastIndex=Ci,Ee.findLastKey=function(n,t){return _t(n,Yu(t,3),lr)},Ee.floor=sa,Ee.forEach=af,Ee.forEachRight=cf,Ee.forIn=function(n,t){return null==n?n:or(n,Yu(t,3),jo)},Ee.forInRight=function(n,t){return null==n?n:ar(n,Yu(t,3),jo)},Ee.forOwn=function(n,t){return n&&cr(n,Yu(t,3))},Ee.forOwnRight=function(n,t){return n&&lr(n,Yu(t,3))},Ee.get=go,Ee.gt=Sf,Ee.gte=Lf,Ee.has=function(n,t){return null!=n&&ui(n,t,_r)},Ee.hasIn=yo,Ee.head=Ui,Ee.identity=Go,Ee.includes=function(n,t,e,r){n=Bf(n)?n:So(n),e=e&&!r?uo(e):0;var u=n.length;return e<0&&(e=oe(u+e,0)),Yf(n)?e<=u&&n.indexOf(t,e)>-1:!!u&&yt(n,t,e)>-1},Ee.indexOf=function(n,t,e){var r=null==n?0:n.length;if(!r)return-1;var u=null==e?0:uo(e);return u<0&&(u=oe(r+u,0)),yt(n,t,u)},Ee.inRange=function(n,t,e){return t=ro(t),undefined===e?(e=t,t=0):e=ro(e),function(n,t,e){return n>=ae(t,e)&&n<oe(t,e)}(n=fo(n),t,e)},Ee.invoke=mo,Ee.isArguments=Cf,Ee.isArray=Wf,Ee.isArrayBuffer=Uf,Ee.isArrayLike=Bf,Ee.isArrayLikeObject=Tf,Ee.isBoolean=function(n){return!0===n||!1===n||Zf(n)&&pr(n)==i},Ee.isBuffer=$f,Ee.isDate=Df,Ee.isElement=function(n){return Zf(n)&&1===n.nodeType&&!Gf(n)},Ee.isEmpty=function(n){if(null==n)return!0;if(Bf(n)&&(Wf(n)||"string"==typeof n||"function"==typeof n.splice||$f(n)||Xf(n)||Cf(n)))return!n.length;var t=ri(n);if(t==l||t==p)return!n.size;if(di(n))return!Ir(n).length;for(var e in n)if(kn.call(n,e))return!1;return!0},Ee.isEqual=function(n,t){return mr(n,t)},Ee.isEqualWith=function(n,t,e){var r=(e="function"==typeof e?e:undefined)?e(n,t):undefined;return undefined===r?mr(n,t,undefined,e):!!r},Ee.isError=Nf,Ee.isFinite=function(n){return"number"==typeof n&&ue(n)},Ee.isFunction=Mf,Ee.isInteger=Ff,Ee.isLength=Pf,Ee.isMap=Kf,Ee.isMatch=function(n,t){return n===t||xr(n,t,Xu(t))},Ee.isMatchWith=function(n,t,e){return e="function"==typeof e?e:undefined,xr(n,t,Xu(t),e)},Ee.isNaN=function(n){return Vf(n)&&n!=+n},Ee.isNative=function(n){if(si(n))throw new pn("Unsupported core-js use. Try https://npms.io/search?q=ponyfill.");return jr(n)},Ee.isNil=function(n){return null==n},Ee.isNull=function(n){return null===n},Ee.isNumber=Vf,Ee.isObject=qf,Ee.isObjectLike=Zf,Ee.isPlainObject=Gf,Ee.isRegExp=Hf,Ee.isSafeInteger=function(n){return Ff(n)&&n>=-9007199254740991&&n<=9007199254740991},Ee.isSet=Jf,Ee.isString=Yf,Ee.isSymbol=Qf,Ee.isTypedArray=Xf,Ee.isUndefined=function(n){return undefined===n},Ee.isWeakMap=function(n){return Zf(n)&&ri(n)==g},Ee.isWeakSet=function(n){return Zf(n)&&"[object WeakSet]"==pr(n)},Ee.join=function(n,t){return null==n?"":ie.call(n,t)},Ee.kebabCase=Uo,Ee.last=Di,Ee.lastIndexOf=function(n,t,e){var r=null==n?0:n.length;if(!r)return-1;var u=r;return undefined!==e&&(u=(u=uo(e))<0?oe(r+u,0):ae(u,r-1)),t==t?function(n,t,e){for(var r=e+1;r--;)if(n[r]===t)return r;return r}(n,t,u):gt(n,wt,u,!0)},Ee.lowerCase=Bo,Ee.lowerFirst=To,Ee.lt=no,Ee.lte=to,Ee.max=function(n){return n&&n.length?ur(n,Go,vr):undefined},Ee.maxBy=function(n,t){return n&&n.length?ur(n,Yu(t,2),vr):undefined},Ee.mean=function(n){return mt(n,Go)},Ee.meanBy=function(n,t){return mt(n,Yu(t,2))},Ee.min=function(n){return n&&n.length?ur(n,Go,Or):undefined},Ee.minBy=function(n,t){return n&&n.length?ur(n,Yu(t,2),Or):undefined},Ee.stubArray=fa,Ee.stubFalse=oa,Ee.stubObject=function(){return{}},Ee.stubString=function(){return""},Ee.stubTrue=function(){return!0},Ee.multiply=ha,Ee.nth=function(n,t){return n&&n.length?Lr(n,uo(t)):undefined},Ee.noConflict=function(){return qn._===this&&(qn._=Dn),this},Ee.noop=Xo,Ee.now=_f,Ee.pad=function(n,t,e){n=ao(n);var r=(t=uo(t))?Ft(n):0;if(!t||r>=t)return n;var u=(t-r)/2;return Cu(te(u),e)+n+Cu(ne(u),e)},Ee.padEnd=function(n,t,e){n=ao(n);var r=(t=uo(t))?Ft(n):0;return t&&r<t?n+Cu(t-r,e):n},Ee.padStart=function(n,t,e){n=ao(n);var r=(t=uo(t))?Ft(n):0;return t&&r<t?Cu(t-r,e)+n:n},Ee.parseInt=function(n,t,e){return e||null==t?t=0:t&&(t=+t),le(ao(n).replace(Z,""),t||0)},Ee.random=function(n,t,e){if(e&&"boolean"!=typeof e&&ai(n,t,e)&&(t=e=undefined),undefined===e&&("boolean"==typeof t?(e=t,t=undefined):"boolean"==typeof n&&(e=n,n=undefined)),undefined===n&&undefined===t?(n=0,t=1):(n=ro(n),undefined===t?(t=n,n=0):t=ro(t)),n>t){var r=n;n=t,t=r}if(e||n%1||t%1){var u=se();return ae(n+u*(t-n+Nn("1e-"+((u+"").length-1))),t)}return Tr(n,t)},Ee.reduce=function(n,t,e){var r=Wf(n)?dt:At,u=arguments.length<3;return r(n,Yu(t,4),e,u,tr)},Ee.reduceRight=function(n,t,e){var r=Wf(n)?ht:At,u=arguments.length<3;return r(n,Yu(t,4),e,u,er)},Ee.repeat=function(n,t,e){return t=(e?ai(n,t,e):undefined===t)?1:uo(t),$r(ao(n),t)},Ee.replace=function(){var n=arguments,t=ao(n[0]);return n.length<3?t:t.replace(n[1],n[2])},Ee.result=function(n,t,e){var r=-1,u=(t=au(t,n)).length;for(u||(u=1,n=undefined);++r<u;){var i=null==n?undefined:n[ki(t[r])];undefined===i&&(r=u,i=e),n=Mf(i)?i.call(n):i}return n},Ee.round=pa,Ee.runInContext=cn,Ee.sample=function(n){return(Wf(n)?Ne:Nr)(n)},Ee.size=function(n){if(null==n)return 0;if(Bf(n))return Yf(n)?Ft(n):n.length;var t=ri(n);return t==l||t==p?n.size:Ir(n).length},Ee.snakeCase=$o,Ee.some=function(n,t,e){var r=Wf(n)?pt:Vr;return e&&ai(n,t,e)&&(t=undefined),r(n,Yu(t,3))},Ee.sortedIndex=function(n,t){return Gr(n,t)},Ee.sortedIndexBy=function(n,t,e){return Hr(n,t,Yu(e,2))},Ee.sortedIndexOf=function(n,t){var e=null==n?0:n.length;if(e){var r=Gr(n,t);if(r<e&&zf(n[r],t))return r}return-1},Ee.sortedLastIndex=function(n,t){return Gr(n,t,!0)},Ee.sortedLastIndexBy=function(n,t,e){return Hr(n,t,Yu(e,2),!0)},Ee.sortedLastIndexOf=function(n,t){if(null==n?0:n.length){var e=Gr(n,t,!0)-1;if(zf(n[e],t))return e}return-1},Ee.startCase=Do,Ee.startsWith=function(n,t,e){return n=ao(n),e=null==e?0:Je(uo(e),0,n.length),t=Qr(t),n.slice(e,e+t.length)==t},Ee.subtract=va,Ee.sum=function(n){return n&&n.length?It(n,Go):0},Ee.sumBy=function(n,t){return n&&n.length?It(n,Yu(t,2)):0},Ee.template=function(n,t,e){var r=Ee.templateSettings;e&&ai(n,t,e)&&(t=undefined),n=ao(n),t=so({},t,r,Mu);var u,i,f=so({},t.imports,r.imports,Mu),o=xo(f),a=Rt(f,o),c=0,l=t.interpolate||on,s="__p += '",d=yn((t.escape||on).source+"|"+l.source+"|"+(l===$?Q:on).source+"|"+(t.evaluate||on).source+"|$","g"),h="//# sourceURL="+(kn.call(t,"sourceURL")?(t.sourceURL+"").replace(/[\r\n]/g," "):"lodash.templateSources["+ ++Bn+"]")+"\n";n.replace(d,(function(t,e,r,f,o,a){return r||(r=f),s+=n.slice(c,a).replace(an,Ut),e&&(u=!0,s+="' +\n__e("+e+") +\n'"),o&&(i=!0,s+="';\n"+o+";\n__p += '"),r&&(s+="' +\n((__t = ("+r+")) == null ? '' : __t) +\n'"),c=a+t.length,t})),s+="';\n";var p=kn.call(t,"variable")&&t.variable;p||(s="with (obj) {\n"+s+"\n}\n"),s=(i?s.replace(E,""):s).replace(z,"$1").replace(S,"$1;"),s="function("+(p||"obj")+") {\n"+(p?"":"obj || (obj = {});\n")+"var __t, __p = ''"+(u?", __e = _.escape":"")+(i?", __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n":";\n")+s+"return __p\n}";var v=Po((function(){return vn(o,h+"return "+s).apply(undefined,a)}));if(v.source=s,Nf(v))throw v;return v},Ee.times=function(n,t){if((n=uo(n))<1||n>9007199254740991)return[];var e=4294967295,r=ae(n,4294967295);n-=4294967295;for(var u=kt(r,t=Yu(t));++e<n;)t(e);return u},Ee.toFinite=ro,Ee.toInteger=uo,Ee.toLength=io,Ee.toLower=function(n){return ao(n).toLowerCase()},Ee.toNumber=fo,Ee.toSafeInteger=function(n){return n?Je(uo(n),-9007199254740991,9007199254740991):0===n?n:0},Ee.toString=ao,Ee.toUpper=function(n){return ao(n).toUpperCase()},Ee.trim=function(n,t,e){if((n=ao(n))&&(e||undefined===t))return n.replace(q,"");if(!n||!(t=Qr(t)))return n;var r=Pt(n),u=Pt(t);return lu(r,zt(r,u),St(r,u)+1).join("")},Ee.trimEnd=function(n,t,e){if((n=ao(n))&&(e||undefined===t))return n.replace(K,"");if(!n||!(t=Qr(t)))return n;var r=Pt(n);return lu(r,0,St(r,Pt(t))+1).join("")},Ee.trimStart=function(n,t,e){if((n=ao(n))&&(e||undefined===t))return n.replace(Z,"");if(!n||!(t=Qr(t)))return n;var r=Pt(n);return lu(r,zt(r,Pt(t))).join("")},Ee.truncate=function(n,t){var e=30,r="...";if(qf(t)){var u="separator"in t?t.separator:u;e="length"in t?uo(t.length):e,r="omission"in t?Qr(t.omission):r}var i=(n=ao(n)).length;if(Bt(n)){var f=Pt(n);i=f.length}if(e>=i)return n;var o=e-Ft(r);if(o<1)return r;var a=f?lu(f,0,o).join(""):n.slice(0,o);if(undefined===u)return a+r;if(f&&(o+=a.length-o),Hf(u)){if(n.slice(o).search(u)){var c,l=a;for(u.global||(u=yn(u.source,ao(X.exec(u))+"g")),u.lastIndex=0;c=u.exec(l);)var s=c.index;a=a.slice(0,undefined===s?o:s)}}else if(n.indexOf(Qr(u),o)!=o){var d=a.lastIndexOf(u);d>-1&&(a=a.slice(0,d))}return a+r},Ee.unescape=function(n){return(n=ao(n))&&W.test(n)?n.replace(L,qt):n},Ee.uniqueId=function(n){var t=++On;return ao(n)+t},Ee.upperCase=No,Ee.upperFirst=Mo,Ee.each=af,Ee.eachRight=cf,Ee.first=Ui,Qo(Ee,(da={},cr(Ee,(function(n,t){kn.call(Ee.prototype,t)||(da[t]=n)})),da),{chain:!1}),Ee.VERSION="4.17.15",ut(["bind","bindKey","curry","curryRight","partial","partialRight"],(function(n){Ee[n].placeholder=Ee})),ut(["drop","take"],(function(n,t){Ce.prototype[n]=function(e){e=undefined===e?1:oe(uo(e),0);var r=this.__filtered__&&!t?new Ce(this):this.clone();return r.__filtered__?r.__takeCount__=ae(e,r.__takeCount__):r.__views__.push({size:ae(e,4294967295),type:n+(r.__dir__<0?"Right":"")}),r},Ce.prototype[n+"Right"]=function(t){return this.reverse()[n](t).reverse()}})),ut(["filter","map","takeWhile"],(function(n,t){var e=t+1,r=1==e||3==e;Ce.prototype[n]=function(n){var t=this.clone();return t.__iteratees__.push({iteratee:Yu(n,3),type:e}),t.__filtered__=t.__filtered__||r,t}})),ut(["head","last"],(function(n,t){var e="take"+(t?"Right":"");Ce.prototype[n]=function(){return this[e](1).value()[0]}})),ut(["initial","tail"],(function(n,t){var e="drop"+(t?"":"Right");Ce.prototype[n]=function(){return this.__filtered__?new Ce(this):this[e](1)}})),Ce.prototype.compact=function(){return this.filter(Go)},Ce.prototype.find=function(n){return this.filter(n).head()},Ce.prototype.findLast=function(n){return this.reverse().find(n)},Ce.prototype.invokeMap=Dr((function(n,t){return"function"==typeof n?new Ce(this):this.map((function(e){return br(e,n,t)}))})),Ce.prototype.reject=function(n){return this.filter(If(Yu(n)))},Ce.prototype.slice=function(n,t){n=uo(n);var e=this;return e.__filtered__&&(n>0||t<0)?new Ce(e):(n<0?e=e.takeRight(-n):n&&(e=e.drop(n)),undefined!==t&&(e=(t=uo(t))<0?e.dropRight(-t):e.take(t-n)),e)},Ce.prototype.takeRightWhile=function(n){return this.reverse().takeWhile(n).reverse()},Ce.prototype.toArray=function(){return this.take(4294967295)},cr(Ce.prototype,(function(n,t){var e=/^(?:filter|find|map|reject)|While$/.test(t),r=/^(?:head|last)$/.test(t),u=Ee[r?"take"+("last"==t?"Right":""):t],i=r||/^find/.test(t);u&&(Ee.prototype[t]=function(){var t=this.__wrapped__,f=r?[1]:arguments,o=t instanceof Ce,a=f[0],c=o||Wf(t),l=function(n){var t=u.apply(Ee,st([n],f));return r&&s?t[0]:t};c&&e&&"function"==typeof a&&1!=a.length&&(o=c=!1);var s=this.__chain__,d=!!this.__actions__.length,h=i&&!s,p=o&&!d;if(!i&&c){t=p?t:new Ce(this);var v=n.apply(t,f);return v.__actions__.push({func:ef,args:[l],thisArg:undefined}),new Le(v,s)}return h&&p?n.apply(this,f):(v=this.thru(l),h?r?v.value()[0]:v.value():v)})})),ut(["pop","push","shift","sort","splice","unshift"],(function(n){var t=mn[n],e=/^(?:push|sort|unshift)$/.test(n)?"tap":"thru",r=/^(?:pop|shift)$/.test(n);Ee.prototype[n]=function(){var n=arguments;if(r&&!this.__chain__){var u=this.value();return t.apply(Wf(u)?u:[],n)}return this[e]((function(e){return t.apply(Wf(e)?e:[],n)}))}})),cr(Ce.prototype,(function(n,t){var e=Ee[t];if(e){var r=e.name+"";kn.call(we,r)||(we[r]=[]),we[r].push({name:t,func:e})}})),we[Eu(undefined,2).name]=[{name:"wrapper",func:undefined}],Ce.prototype.clone=function(){var n=new Ce(this.__wrapped__);return n.__actions__=yu(this.__actions__),n.__dir__=this.__dir__,n.__filtered__=this.__filtered__,n.__iteratees__=yu(this.__iteratees__),n.__takeCount__=this.__takeCount__,n.__views__=yu(this.__views__),n},Ce.prototype.reverse=function(){if(this.__filtered__){var n=new Ce(this);n.__dir__=-1,n.__filtered__=!0}else(n=this.clone()).__dir__*=-1;return n},Ce.prototype.value=function(){var n=this.__wrapped__.value(),t=this.__dir__,e=Wf(n),r=t<0,u=e?n.length:0,i=function(n,t,e){var r=-1,u=e.length;for(;++r<u;){var i=e[r],f=i.size;switch(i.type){case"drop":n+=f;break;case"dropRight":t-=f;break;case"take":t=ae(t,n+f);break;case"takeRight":n=oe(n,t-f)}}return{start:n,end:t}}(0,u,this.__views__),f=i.start,o=i.end,a=o-f,c=r?o:f-1,l=this.__iteratees__,s=l.length,d=0,h=ae(a,this.__takeCount__);if(!e||!r&&u==a&&h==a)return ru(n,this.__actions__);var p=[];n:for(;a--&&d<h;){for(var v=-1,_=n[c+=t];++v<s;){var g=l[v],y=g.iteratee,b=g.type,w=y(_);if(2==b)_=w;else if(!w){if(1==b)continue n;break n}}p[d++]=_}return p},Ee.prototype.at=rf,Ee.prototype.chain=function(){return tf(this)},Ee.prototype.commit=function(){return new Le(this.value(),this.__chain__)},Ee.prototype.next=function(){undefined===this.__values__&&(this.__values__=eo(this.value()));var n=this.__index__>=this.__values__.length;return{done:n,value:n?undefined:this.__values__[this.__index__++]}},Ee.prototype.plant=function(n){for(var t,e=this;e instanceof Se;){var r=Ri(e);r.__index__=0,r.__values__=undefined,t?u.__wrapped__=r:t=r;var u=r;e=e.__wrapped__}return u.__wrapped__=n,t},Ee.prototype.reverse=function(){var n=this.__wrapped__;if(n instanceof Ce){var t=n;return this.__actions__.length&&(t=new Ce(this)),(t=t.reverse()).__actions__.push({func:ef,args:[Pi],thisArg:undefined}),new Le(t,this.__chain__)}return this.thru(Pi)},Ee.prototype.toJSON=Ee.prototype.valueOf=Ee.prototype.value=function(){return ru(this.__wrapped__,this.__actions__)},Ee.prototype.first=Ee.prototype.head,Gt&&(Ee.prototype[Gt]=function(){return this}),Ee}();"function"==typeof define&&"object"==typeof define.amd&&define.amd?(qn._=Zt,define((function(){return Zt}))):Kn?((Kn.exports=Zt)._=Zt,Zn._=Zt):qn._=Zt}).call(this);
!function(t,r){if("object"==typeof exports&&"object"==typeof module)module.exports=r();else if("function"==typeof define&&define.amd)define([],r);else{var e=r();for(var n in e)("object"==typeof exports?exports:t)[n]=e[n]}}(window,(function(){return function(t){var r={};function e(n){if(r[n])return r[n].exports;var o=r[n]={i:n,l:!1,exports:{}};return t[n].call(o.exports,o,o.exports,e),o.l=!0,o.exports}return e.m=t,e.c=r,e.d=function(t,r,n){e.o(t,r)||Object.defineProperty(t,r,{enumerable:!0,get:n})},e.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},e.t=function(t,r){if(1&r&&(t=e(t)),8&r)return t;if(4&r&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(e.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&r&&"string"!=typeof t)for(var o in t)e.d(n,o,function(r){return t[r]}.bind(null,o));return n},e.n=function(t){var r=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(r,"a",r),r},e.o=function(t,r){return Object.prototype.hasOwnProperty.call(t,r)},e.p="",e(e.s=16)}([function(t,r,e){"use strict";e.r(r),e.d(r,"arrayStructTypeToSQL",(function(){return E})),e.d(r,"autoIncreatementToSQL",(function(){return I})),e.d(r,"columnOrderListToSQL",(function(){return N})),e.d(r,"commonKeywordArgsToSQL",(function(){return T})),e.d(r,"commonOptionConnector",(function(){return s})),e.d(r,"connector",(function(){return c})),e.d(r,"commonTypeValue",(function(){return L})),e.d(r,"commentToSQL",(function(){return A})),e.d(r,"createBinaryExpr",(function(){return f})),e.d(r,"createValueExpr",(function(){return l})),e.d(r,"DEFAULT_OPT",(function(){return a})),e.d(r,"escape",(function(){return p})),e.d(r,"literalToSQL",(function(){return m})),e.d(r,"columnIdentifierToSql",(function(){return d})),e.d(r,"identifierToSql",(function(){return h})),e.d(r,"onPartitionsToSQL",(function(){return O})),e.d(r,"replaceParams",(function(){return w})),e.d(r,"returningToSQL",(function(){return j})),e.d(r,"hasVal",(function(){return g})),e.d(r,"setParserOpt",(function(){return v})),e.d(r,"toUpper",(function(){return C})),e.d(r,"topToSQL",(function(){return y})),e.d(r,"triggerEventToSQL",(function(){return S}));var n=e(2);function o(t){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}var u={"\0":"\\0","'":"\\'",'"':'\\"',"\b":"\\b","\n":"\\n","\r":"\\r","\t":"\\t","":"\\Z"},a={database:"mysql",type:"table"},i=a;function s(t,r,e){if(e)return t?"".concat(t.toUpperCase()," ").concat(r(e)):r(e)}function c(t,r){if(r)return"".concat(t.toUpperCase()," ").concat(r)}function l(t){var r=o(t);if(Array.isArray(t))return{type:"expr_list",value:t.map(l)};if(null===t)return{type:"null",value:null};switch(r){case"boolean":return{type:"bool",value:t};case"string":return{type:"string",value:t};case"number":return{type:"number",value:t};default:throw new Error('Cannot convert value "'.concat(r,'" to SQL'))}}function f(t,r,e){var n={operator:t,type:"binary_expr"};return n.left=r.type?r:l(r),"BETWEEN"===t||"NOT BETWEEN"===t?(n.right={type:"expr_list",value:[l(e[0]),l(e[1])]},n):(n.right=e.type?e:l(e),n)}function p(t){for(var r=[],e=0,n=t.length;e<n;++e){var o=t[e],a=u[o];a&&(o=a),r.push(o)}return r.join("")}function b(){return i}function v(t){i=t}function y(t){if(t){var r=t.value,e=t.percent,n="TOP ".concat(r);return e?"".concat(n," ").concat(e.toUpperCase()):n}}function d(t){var r=b().database;if(t)switch(r&&r.toLowerCase()){case"postgresql":case"db2":return'"'.concat(t,'"');case"transactsql":return"[".concat(t,"]");case"mysql":case"mariadb":case"bigquery":default:return"`".concat(t,"`")}}function h(t,r){var e=b().database;if(!0===r)return"'".concat(t,"'");if(t)switch(e&&e.toLowerCase()){case"mysql":case"mariadb":return"`".concat(t,"`");case"postgresql":return'"'.concat(t,'"');case"transactsql":return"[".concat(t,"]");case"bigquery":case"db2":return t;default:return"`".concat(t,"`")}}function m(t){if(t){var r=t.type,e=t.parentheses,n=t.value,o=n;switch(r){case"string":o="'".concat(p(n),"'");break;case"double_quote_string":o='"'.concat(p(n),'"');break;case"single_quote_string":o="'".concat(n,"'");break;case"boolean":case"bool":o=n?"TRUE":"FALSE";break;case"null":o="NULL";break;case"star":o="*";break;case"param":o=":".concat(n);break;case"origin":o=n.toUpperCase();break;case"time":case"date":case"timestamp":o="".concat(r.toUpperCase()," '").concat(n,"'")}return e?"(".concat(o,")"):o}}function w(t,r){return function t(r,e){return Object.keys(r).filter((function(t){var e=r[t];return Array.isArray(e)||"object"===o(e)&&null!==e})).forEach((function(n){var u=r[n];if("object"!==o(u)||"param"!==u.type)return t(u,e);if(void 0===e[u.value])throw new Error("no value for parameter :".concat(u.value," found"));return r[n]=l(e[u.value]),null})),r}(JSON.parse(JSON.stringify(t)),r)}function L(t){var r=[];if(!t)return r;var e=t.type,n=t.value;return r.push(e.toUpperCase()),r.push(n.toUpperCase()),r}function C(t){if(t)return t.toUpperCase()}function g(t){return t}function O(t){var r=t.type,e=t.partitions;return[C(r),"(".concat(e.map((function(t){if("range"!==t.type)return m(t);var r=t.start,e=t.end,n=t.symbol;return"".concat(m(r)," ").concat(C(n)," ").concat(m(e))})).join(", "),")")].join(" ")}function E(t){if(t){var r=t.dataType,e=t.definition,n=t.anglebracket,o=C(r);if("ARRAY"!==o&&"STRUCT"!==o)return o;var u=e&&e.map((function(t){return[t.field_name,E(t.field_type)].filter(g).join(" ")})).join(", ");return n?"".concat(o,"<").concat(u,">"):"".concat(o," ").concat(u)}}function A(t){if(t){var r=[],e=t.keyword,n=t.symbol,o=t.value;return r.push(e.toUpperCase()),n&&r.push(n),r.push(m(o)),r.join(" ")}}function S(t){return t.map((function(t){var r=t.keyword,e=t.args,o=[C(r)];if(e){var u=e.keyword,a=e.columns;o.push(C(u),a.map(n.d).join(", "))}return o.join(" ")})).join(" OR ")}function j(t){return t?["RETURNING",t.columns.map(n.d).filter(g).join(", ")].join(" "):""}function T(t){return t?[C(t.keyword),C(t.args)]:[]}function I(t){if(!t||"string"==typeof t)return C(t);var r=t.keyword,e=t.seed,n=t.increment,o=t.parentheses,u=C(r);return o&&(u+="(".concat(m(e),", ").concat(m(n),")")),u}function N(t){if(t)return t.map(n.c).filter(g).join(", ")}},function(t,r,e){"use strict";e.d(r,"a",(function(){return y})),e.d(r,"b",(function(){return d})),e.d(r,"c",(function(){return h}));var n=e(0),o=e(10),u=e(11),a=e(2),i=e(7),s=e(6);function c(t){return(c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function l(t){var r=t.definition,e=t.keyword,o=[Object(n.toUpper)(e)];return r&&"object"===c(r)&&(o.length=0,o.push(Object(n.arrayStructTypeToSQL)(r))),o.push(function(t){var r=t.expr_list,e=t.type;switch(Object(n.toUpper)(e)){case"STRUCT":return"(".concat(Object(a.f)(r),")");case"ARRAY":return function(t){var r=t.array_path,e=t.expr_list,o=t.parentheses;if(!e)return"[".concat(Object(a.f)(r),"]");if(Array.isArray(e))return"[".concat(e.map((function(t){return"(".concat(Object(a.f)(t),")")})).filter(n.hasVal).join(", "),"]");var u=y(e);return o?"(".concat(u,")"):u}(t);default:return""}}(t)),o.filter(n.hasVal).join("")}var f=e(8),p=e(12);function b(t){return(b="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}var v={alter:o.a,aggr_func:function(t){var r=t.args,e=t.over,o=t.orderby,a=y(r.expr),i=t.name,s=Object(u.a)(e);return r.distinct&&(a="DISTINCT ".concat(a)),o&&(a="".concat(a," ").concat(h(o,"order by"))),["".concat(i,"(").concat(a,")"),s].filter(n.hasVal).join(" ")},array:l,assign:function(t){var r=t.left,e=t.right,n=t.symbol,o=t.keyword;r.keyword=o;var u=y(r),a=y(e);return"".concat(u," ").concat(n," ").concat(a)},extract:i.b,binary_expr:function(t){var r=t.operator,e=y(t.right),n=!1;if(Array.isArray(e)){switch(r){case"=":r="IN";break;case"!=":r="NOT IN";break;case"BETWEEN":case"NOT BETWEEN":n=!0,e="".concat(e[0]," AND ").concat(e[1])}n||(e="(".concat(e.join(", "),")"))}var o="".concat(y(t.left)," ").concat(r," ").concat(e);return t.parentheses?"(".concat(o,")"):o},case:function(t){var r=["CASE"],e=t.args;t.expr&&r.push(y(t.expr));for(var n=0,o=e.length;n<o;++n)r.push(e[n].type.toUpperCase()),e[n].cond&&(r.push(y(e[n].cond)),r.push("THEN")),r.push(y(e[n].result));return r.push("END"),r.join(" ")},cast:i.a,column_ref:a.d,function:i.c,interval:function(t){var r=t.expr,e=t.unit;return["INTERVAL",y(r),Object(n.toUpper)(e)].filter(n.hasVal).join(" ")},struct:l,window:p.b};function y(t){var r=t;if(t.ast){var e=r.ast;Reflect.deleteProperty(r,e);for(var o=0,u=Object.keys(e);o<u.length;o++){var a=u[o];r[a]=e[a]}}return v[r.type]?v[r.type](r):Object(n.literalToSQL)(r)}function d(t){return t?t.map(y):[]}function h(t,r){if(!Array.isArray(t))return"";var e=[],o=Object(n.toUpper)(r);switch(o){case"ORDER BY":e=t.map((function(t){return"".concat(y(t.expr)," ").concat(t.type)}));break;case"PARTITION BY":default:e=t.map((function(t){return"".concat(Object(a.d)(t.expr))}))}return Object(n.connector)(o,e.join(", "))}v.var=function(t){var r=t.prefix,e=void 0===r?"@":r,n=t.name,o=t.members,u=t.keyword,a=[];u&&a.push(u);var i=o&&o.length>0?"".concat(n,".").concat(o.join(".")):n;return a.push("".concat(e||"").concat(i)),a.join(" ")},v.expr_list=function(t){var r=d(t.value);return t.parentheses?"(".concat(r,")"):r},v.select=function(t){var r="object"===b(t._next)?Object(f.c)(t):Object(s.a)(t);return t.parentheses?"(".concat(r,")"):r},v.unary_expr=function(t){var r="".concat(t.operator," ").concat(y(t.expr));return t.parentheses?"(".concat(r,")"):r}},function(t,r,e){"use strict";e.d(r,"b",(function(){return b})),e.d(r,"d",(function(){return c})),e.d(r,"f",(function(){return v})),e.d(r,"a",(function(){return l})),e.d(r,"c",(function(){return p})),e.d(r,"e",(function(){return f}));var n=e(9),o=e(1),u=e(3),a=e(0);function i(t){return function(t){if(Array.isArray(t))return s(t)}(t)||function(t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}(t)||function(t,r){if(t){if("string"==typeof t)return s(t,r);var e=Object.prototype.toString.call(t).slice(8,-1);return"Object"===e&&t.constructor&&(e=t.constructor.name),"Map"===e||"Set"===e?Array.from(t):"Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e)?s(t,r):void 0}}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function s(t,r){(null==r||r>t.length)&&(r=t.length);for(var e=0,n=new Array(r);e<r;e++)n[e]=t[e];return n}function c(t){var r=t.arrow,e=t.as,n=t.collate,u=t.column,i=t.isDual,s=t.table,c=t.parentheses,l=t.property,f="*"===u?"*":Object(a.identifierToSql)(u,i);s&&(f="".concat(Object(a.identifierToSql)(s),".").concat(f));var p=[f,Object(a.commonOptionConnector)("AS",o.a,e),Object(a.commonOptionConnector)(r,a.literalToSQL,l)];n&&p.push(Object(a.commonTypeValue)(n).join(" "));var b=p.filter(a.hasVal).join(" ");return c?"(".concat(b,")"):b}function l(t){var r=t||{},e=r.dataType,n=r.length,o=r.suffix,u=r.scale,i=e;return n&&(i+="(".concat([n,u].filter(a.hasVal).join(", "),")")),o&&o.length&&(i+=" ".concat(o.join(" "))),i}function f(t){var r=[];if(!t)return r;var e=t.definition,n=t.keyword,o=t.match,s=t.table,c=t.on_delete,l=t.on_update;return r.push(n.toUpperCase()),r.push(Object(u.c)(s)),r.push("(".concat(e.map(a.identifierToSql).join(", "),")")),r.push(Object(a.toUpper)(o)),r.push.apply(r,i(Object(a.commonTypeValue)(c))),r.push.apply(r,i(Object(a.commonTypeValue)(l))),r.filter(a.hasVal)}function p(t){var r=t.column,e=t.collate,n=t.nulls,u=t.opclass,i=t.order;return[Object(o.a)(r),Object(a.commonOptionConnector)(e&&e.type,a.identifierToSql,e&&e.value),u,Object(a.toUpper)(i),Object(a.toUpper)(n)].filter(a.hasVal).join(" ")}function b(t){var r=[],e=c(t.column),u=l(t.definition);r.push(e),r.push(u);var s=function(t){var r=[],e=t.nullable,u=t.check,s=t.comment,c=t.collate,l=t.storage,p=t.default_val,b=t.auto_increment,v=t.unique_or_primary,y=t.column_format,d=t.reference_definition;if(r.push(Object(a.toUpper)(e&&e.value)),p){var h=p.type,m=p.value;r.push(h.toUpperCase(),Object(o.a)(m))}return r.push(Object(n.a)(u)),r.push(Object(a.autoIncreatementToSQL)(b),Object(a.toUpper)(v),Object(a.commentToSQL)(s)),r.push.apply(r,i(Object(a.commonTypeValue)(c))),r.push.apply(r,i(Object(a.commonTypeValue)(y))),r.push.apply(r,i(Object(a.commonTypeValue)(l))),r.push.apply(r,i(f(d))),r.filter(a.hasVal).join(" ")}(t);return r.push(s),r.filter(a.hasVal).join(" ")}function v(t,r){if(!t||"*"===t)return t;var e=function(t){var r=Array.isArray(t)&&t[0];return!(!r||"dual"!==r.type)}(r),n=[],u=t.expr_list,i=t.star,s=t.type;n.push(i,Object(a.toUpper)(s));var c=(u||t).map((function(t){return function(t,r){var e=t.expr;r&&(e.isDual=r);var n=Object(o.a)(e);return null!==t.as&&(n="".concat(n," AS "),n=t.as.match(/^[a-z_][0-9a-z_]*$/i)?"".concat(n).concat(Object(a.identifierToSql)(t.as)):"".concat(n).concat(Object(a.columnIdentifierToSql)(t.as))),n}(t,e)})).join(", ");return n.push([s&&"(",c,s&&")"].filter(a.hasVal).join("")),n.filter(a.hasVal).join(" ")}},function(t,r,e){"use strict";e.d(r,"c",(function(){return a})),e.d(r,"a",(function(){return i})),e.d(r,"b",(function(){return u}));var n=e(0),o=e(1);function u(t){var r=t.table,e=t.db,u=t.as,a=t.expr,i=Object(n.identifierToSql)(e),s=r?Object(n.identifierToSql)(r):Object(o.a)(a),c=i?"".concat(i,".").concat(s):s;return u?"".concat(c," AS ").concat(Object(n.identifierToSql)(u)):c}function a(t){var r=t.type;if("UNNEST"===Object(n.toUpper)(r))return function(t){var r=t.type,e=t.as,u=t.expr,a=t.with_offset;return[Object(n.toUpper)(r),"(".concat(u&&Object(o.a)(u)||" ",")"),Object(n.commonOptionConnector)("AS",n.identifierToSql,e),Object(n.commonOptionConnector)(Object(n.toUpper)(a&&a.keyword),n.identifierToSql,a&&a.as)].filter(n.hasVal).join(" ")}(t);var e=t[0],a=[];if("dual"===e.type)return"DUAL";a.push(u(e));for(var i=1;i<t.length;++i){var s=t[i],c=s.on,l=s.using,f=s.join,p=[];p.push(f?" ".concat(f):","),p.push(u(s)),p.push(Object(n.commonOptionConnector)("ON",o.a,c)),l&&p.push("USING (".concat(l.map(n.identifierToSql).join(", "),")")),a.push(p.filter(n.hasVal).join(" "))}return a.filter(n.hasVal).join("")}function i(t){var r=t.keyword,e=t.symbol,n=t.value,o=[r.toUpperCase()];return e&&o.push(e),o.push(n),o.join(" ")}},function(t,r,e){"use strict";e.d(r,"a",(function(){return s}));var n=e(0),o=e(1);function u(t){return function(t){if(Array.isArray(t))return a(t)}(t)||function(t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}(t)||function(t,r){if(t){if("string"==typeof t)return a(t,r);var e=Object.prototype.toString.call(t).slice(8,-1);return"Object"===e&&t.constructor&&(e=t.constructor.name),"Map"===e||"Set"===e?Array.from(t):"Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e)?a(t,r):void 0}}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function a(t,r){(null==r||r>t.length)&&(r=t.length);for(var e=0,n=new Array(r);e<r;e++)n[e]=t[e];return n}function i(t){return t?[Object(n.toUpper)(t.prefix),Object(o.a)(t.value),Object(n.toUpper)(t.suffix)]:[]}function s(t){return t?t.fetch?(e=(r=t).fetch,a=r.offset,[].concat(u(i(a)),u(i(e))).filter(n.hasVal).join(" ")):function(t){var r=t.seperator,e=t.value;return Object(n.connector)("LIMIT",e.map(o.a).join("".concat("offset"===r?" ":"").concat(Object(n.toUpper)(r)," ")))}(t):"";var r,e,a}},function(t,r,e){"use strict";e.d(r,"a",(function(){return f})),e.d(r,"d",(function(){return i})),e.d(r,"b",(function(){return c})),e.d(r,"c",(function(){return l}));var n=e(0),o=e(1);function u(t){return function(t){if(Array.isArray(t))return a(t)}(t)||function(t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}(t)||function(t,r){if(t){if("string"==typeof t)return a(t,r);var e=Object.prototype.toString.call(t).slice(8,-1);return"Object"===e&&t.constructor&&(e=t.constructor.name),"Map"===e||"Set"===e?Array.from(t):"Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e)?a(t,r):void 0}}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function a(t,r){(null==r||r>t.length)&&(r=t.length);for(var e=0,n=new Array(r);e<r;e++)n[e]=t[e];return n}function i(t){if(!t)return[];var r=t.keyword,e=t.type;return[r.toUpperCase(),e.toUpperCase()]}function s(t){if(t){var r=t.type,e=t.expr,o=t.symbol,a=r.toUpperCase(),s=[];switch(s.push(a),a){case"KEY_BLOCK_SIZE":o&&s.push(o),s.push(Object(n.literalToSQL)(e));break;case"BTREE":case"HASH":s.length=0,s.push.apply(s,u(i(t)));break;case"WITH PARSER":s.push(e);break;case"VISIBLE":case"INVISIBLE":break;case"COMMENT":s.shift(),s.push(Object(n.commentToSQL)(t));break;case"DATA_COMPRESSION":s.push(o,Object(n.toUpper)(e.value),Object(n.onPartitionsToSQL)(e.on));break;default:s.push(o,Object(n.literalToSQL)(e))}return s.filter(n.hasVal).join(" ")}}function c(t){return t?t.map(s):[]}function l(t){var r=t.constraint_type,e=t.index_type,a=t.index_options,s=void 0===a?[]:a,l=t.definition,f=[];if(f.push.apply(f,u(i(e))),l&&l.length){var p="CHECK"===Object(n.toUpper)(r)?"(".concat(Object(o.a)(l[0]),")"):"(".concat(l.map((function(t){return Object(n.identifierToSql)(t)})).join(", "),")");f.push(p)}return f.push(c(s).join(" ")),f}function f(t){var r=[],e=t.keyword,o=t.index;return r.push(Object(n.toUpper)(e)),r.push(o),r.push.apply(r,u(l(t))),r.filter(n.hasVal).join(" ")}},function(t,r,e){"use strict";e.d(r,"a",(function(){return c}));var n=e(1),o=e(2),u=e(4),a=e(13),i=e(3),s=e(0);function c(t){var r=t.as_struct_val,e=t.columns,c=t.distinct,l=t.from,f=t.for_sys_time_as_of,p=void 0===f?{}:f,b=t.for_update,v=t.groupby,y=t.having,d=t.limit,h=t.options,m=t.orderby,w=t.parentheses_symbol,L=t.top,C=t.window,g=t.with,O=t.where,E=[Object(a.a)(g),"SELECT",Object(s.toUpper)(r)];E.push(Object(s.topToSQL)(L)),Array.isArray(h)&&E.push(h.join(" ")),E.push(c,Object(o.f)(e,l)),E.push(Object(s.commonOptionConnector)("FROM",i.c,l));var A=p||{},S=A.keyword,j=A.expr;E.push(Object(s.commonOptionConnector)(S,n.a,j)),E.push(Object(s.commonOptionConnector)("WHERE",n.a,O)),E.push(Object(s.connector)("GROUP BY",Object(n.b)(v).join(", "))),E.push(Object(s.commonOptionConnector)("HAVING",n.a,y)),E.push(Object(s.commonOptionConnector)("WINDOW",n.a,C)),E.push(Object(n.c)(m,"order by")),E.push(Object(u.a)(d)),E.push(Object(s.toUpper)(b));var T=E.filter(s.hasVal).join(" ");return w?"(".concat(T,")"):T}},function(t,r,e){"use strict";e.d(r,"a",(function(){return a})),e.d(r,"b",(function(){return i})),e.d(r,"c",(function(){return s}));var n=e(1),o=e(0),u=e(11);function a(t){var r=t.target,e=t.expr,o=t.symbol,u=r.length,a=r.dataType,i=r.parentheses,s=r.scale,c="";u&&(c=s?"".concat(u,", ").concat(s):u),i&&(c="(".concat(c,")"));var l=Object(n.a)(e),f="::",p="";return"as"===o&&(l="CAST(".concat(l),p=")",f=" ".concat(o.toUpperCase()," ")),"".concat(l).concat(f).concat(a).concat(c).concat(p)}function i(t){var r=t.args,e=t.type,u=r.field,a=r.cast_type,i=r.source,s=["".concat(Object(o.toUpper)(e),"(").concat(Object(o.toUpper)(u)),"FROM",Object(o.toUpper)(a),Object(n.a)(i)];return"".concat(s.filter(o.hasVal).join(" "),")")}function s(t){var r=t.args,e=t.name;if(!r)return e;var a=t.parentheses,i=t.over,s="".concat(e,"(").concat(Object(n.a)(r).join(", "),")"),c=Object(u.a)(i);return[a?"(".concat(s,")"):s,c].filter(o.hasVal).join(" ")}},function(t,r,e){"use strict";e.d(r,"a",(function(){return T})),e.d(r,"c",(function(){return j})),e.d(r,"b",(function(){return I}));var n=e(1),o=e(5),u=e(2),a=e(9),i=e(7),s=e(3),c=e(0);function l(t){return function(t){if(Array.isArray(t))return f(t)}(t)||function(t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}(t)||function(t,r){if(t){if("string"==typeof t)return f(t,r);var e=Object.prototype.toString.call(t).slice(8,-1);return"Object"===e&&t.constructor&&(e=t.constructor.name),"Map"===e||"Set"===e?Array.from(t):"Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e)?f(t,r):void 0}}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function f(t,r){(null==r||r>t.length)&&(r=t.length);for(var e=0,n=new Array(r);e<r;e++)n[e]=t[e];return n}function p(t){if(!t)return[];var r=t.resource;switch(r){case"column":return Object(u.b)(t);case"index":return Object(o.a)(t);case"constraint":return Object(a.a)(t);default:throw new Error("unknow resource = ".concat(r," type"))}}var b=e(10),v=e(6),y=e(4);function d(t,r){(null==r||r>t.length)&&(r=t.length);for(var e=0,n=new Array(r);e<r;e++)n[e]=t[e];return n}function h(t){if(!t||0===t.length)return"";var r,e=[],o=function(t,r){var e;if("undefined"==typeof Symbol||null==t[Symbol.iterator]){if(Array.isArray(t)||(e=function(t,r){if(t){if("string"==typeof t)return d(t,r);var e=Object.prototype.toString.call(t).slice(8,-1);return"Object"===e&&t.constructor&&(e=t.constructor.name),"Map"===e||"Set"===e?Array.from(t):"Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e)?d(t,r):void 0}}(t))||r&&t&&"number"==typeof t.length){e&&(t=e);var n=0,o=function(){};return{s:o,n:function(){return n>=t.length?{done:!0}:{done:!1,value:t[n++]}},e:function(t){throw t},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var u,a=!0,i=!1;return{s:function(){e=t[Symbol.iterator]()},n:function(){var t=e.next();return a=t.done,t},e:function(t){i=!0,u=t},f:function(){try{a||null==e.return||e.return()}finally{if(i)throw u}}}}(t);try{for(o.s();!(r=o.n()).done;){var u=r.value,a="",i=u.table,s=u.column,l=u.value;a=[i,s].filter(c.hasVal).map((function(t){return Object(c.identifierToSql)(t)})).join("."),l&&(a="".concat(a," = ").concat(Object(n.a)(l))),e.push(a)}}catch(t){o.e(t)}finally{o.f()}return e.join(", ")}function m(t){if("select"===t.type)return Object(v.a)(t);var r=t.map(n.a);return"(".concat(r.join("),("),")")}function w(t){if(!t)return"";var r=["PARTITION","("];if(Array.isArray(t))r.push(t.map(c.identifierToSql).join(", "));else{var e=t.value;r.push(e.map(n.a).join(", "))}return r.push(")"),r.filter(c.hasVal).join("")}function L(t,r){var e;if("undefined"==typeof Symbol||null==t[Symbol.iterator]){if(Array.isArray(t)||(e=C(t))||r&&t&&"number"==typeof t.length){e&&(t=e);var n=0,o=function(){};return{s:o,n:function(){return n>=t.length?{done:!0}:{done:!1,value:t[n++]}},e:function(t){throw t},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var u,a=!0,i=!1;return{s:function(){e=t[Symbol.iterator]()},n:function(){var t=e.next();return a=t.done,t},e:function(t){i=!0,u=t},f:function(){try{a||null==e.return||e.return()}finally{if(i)throw u}}}}function C(t,r){if(t){if("string"==typeof t)return g(t,r);var e=Object.prototype.toString.call(t).slice(8,-1);return"Object"===e&&t.constructor&&(e=t.constructor.name),"Map"===e||"Set"===e?Array.from(t):"Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e)?g(t,r):void 0}}function g(t,r){(null==r||r>t.length)&&(r=t.length);for(var e=0,n=new Array(r);e<r;e++)n[e]=t[e];return n}function O(t){var r=t.type,e=t.keyword,n=t.name,o=[Object(c.toUpper)(r),Object(c.toUpper)(e)];switch(e){case"table":o.push(Object(s.c)(n));break;case"procedure":o.push(Object(c.identifierToSql)(n))}return o.filter(c.hasVal).join(" ")}function E(t){var r=t.type,e=t.keyword,n=t.tables,o=[r.toUpperCase(),Object(c.toUpper)(e)];if("UNLOCK"===r.toUpperCase())return o.join(" ");var u,a=[],i=L(n);try{var l=function(){var t=u.value,r=t.table,e=t.lock_type,n=[Object(s.b)(r)];e&&n.push(["prefix","type","suffix"].map((function(t){return Object(c.toUpper)(e[t])})).filter(c.hasVal).join(" ")),a.push(n.join(" "))};for(i.s();!(u=i.n()).done;)l()}catch(t){i.e(t)}finally{i.f()}return o.push.apply(o,[a.join(", ")].concat(function(t){return function(t){if(Array.isArray(t))return g(t)}(t)||function(t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}(t)||C(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(function(t){var r=t.lock_mode,e=t.nowait,n=[];if(r){var o=r.mode;n.push(o.toUpperCase())}return e&&n.push(e.toUpperCase()),n}(t)))),o.filter(c.hasVal).join(" ")}var A=e(13),S={alter:b.b,create:function(t){var r=t.keyword,e="";switch(r.toLowerCase()){case"table":e=function(t){var r=t.type,e=t.keyword,n=t.table,o=t.like,u=t.as,a=t.temporary,i=t.if_not_exists,l=t.create_definitions,f=t.table_options,b=t.ignore_replace,v=t.query_expr,y=[Object(c.toUpper)(r),Object(c.toUpper)(a),Object(c.toUpper)(e),Object(c.toUpper)(i),Object(s.c)(n)];if(o){var d=o.type,h=o.table,m=Object(s.c)(h);return y.push(Object(c.toUpper)(d),m),y.filter(c.hasVal).join(" ")}return l&&y.push("(".concat(l.map(p).join(", "),")")),f&&y.push(f.map(s.a).join(" ")),y.push(Object(c.toUpper)(b),Object(c.toUpper)(u)),v&&y.push(j(v)),y.filter(c.hasVal).join(" ")}(t);break;case"trigger":e=function(t){var r=t.constraint,e=t.constraint_kw,o=t.deferrable,u=t.events,a=t.execute,f=t.for_each,p=t.from,b=t.location,v=t.keyword,y=t.type,d=t.table,h=t.when,m=[Object(c.toUpper)(y),Object(c.toUpper)(e),Object(c.toUpper)(v),Object(c.identifierToSql)(r),Object(c.toUpper)(b)],w=Object(c.triggerEventToSQL)(u);return m.push(w,"ON",Object(s.b)(d)),p&&m.push("FROM",Object(s.b)(p)),m.push.apply(m,l(Object(c.commonKeywordArgsToSQL)(o)).concat(l(Object(c.commonKeywordArgsToSQL)(f)))),h&&m.push(Object(c.toUpper)(h.type),Object(n.a)(h.cond)),m.push(Object(c.toUpper)(a.keyword),Object(i.c)(a.expr)),m.filter(c.hasVal).join(" ")}(t);break;case"extension":e=function(t){var r=t.extension,e=t.from,n=t.if_not_exists,o=t.keyword,u=t.schema,a=t.type,i=t.with,s=t.version;return[Object(c.toUpper)(a),Object(c.toUpper)(o),Object(c.toUpper)(n),Object(c.literalToSQL)(r),Object(c.toUpper)(i),Object(c.commonOptionConnector)("SCHEMA",c.literalToSQL,u),Object(c.commonOptionConnector)("VERSION",c.literalToSQL,s),Object(c.commonOptionConnector)("FROM",c.literalToSQL,e)].filter(c.hasVal).join(" ")}(t);break;case"index":e=function(t){var r=t.concurrently,e=t.filestream_on,u=t.keyword,a=t.include,i=t.index_columns,f=t.index_type,p=t.index_using,b=t.index,v=t.on,y=t.on_kw,d=t.table,h=t.tablespace,m=t.type,w=t.where,L=t.with,C=t.with_before_where,g=L&&"WITH (".concat(Object(o.b)(L).join(", "),")"),O=a&&"".concat(Object(c.toUpper)(a.keyword)," (").concat(a.columns.map((function(t){return Object(c.identifierToSql)(t)})).join(", "),")"),E=[Object(c.toUpper)(m),Object(c.toUpper)(f),Object(c.toUpper)(u),Object(c.toUpper)(r),Object(c.identifierToSql)(b),Object(c.toUpper)(y),Object(s.b)(d)].concat(l(Object(o.d)(p)),["(".concat(Object(c.columnOrderListToSQL)(i),")"),O,Object(c.commonOptionConnector)("TABLESPACE",c.literalToSQL,h)]);return C?E.push(g,Object(c.commonOptionConnector)("WHERE",n.a,w)):E.push(Object(c.commonOptionConnector)("WHERE",n.a,w),g),E.push(Object(c.commonOptionConnector)("ON",n.a,v),Object(c.commonOptionConnector)("FILESTREAM_ON",c.literalToSQL,e)),E.filter(c.hasVal).join(" ")}(t);break;default:throw new Error("unknow create resource ".concat(r))}return e},select:v.a,delete:function(t){var r=["DELETE"],e=t.columns,o=t.from,a=t.table,i=t.where,l=t.orderby,f=t.limit,p=Object(u.f)(e,o);return r.push(p),Array.isArray(a)&&(1===a.length&&!0===a[0].addition||r.push(Object(s.c)(a))),r.push(Object(c.commonOptionConnector)("FROM",s.c,o)),r.push(Object(c.commonOptionConnector)("WHERE",n.a,i)),r.push(Object(n.c)(l,"order by")),r.push(Object(y.a)(f)),r.filter(c.hasVal).join(" ")},update:function(t){var r=t.table,e=t.set,o=t.where,u=t.orderby,a=t.limit,i=t.returning;return["UPDATE",Object(s.c)(r),Object(c.commonOptionConnector)("SET",h,e),Object(c.commonOptionConnector)("WHERE",n.a,o),Object(n.c)(u,"order by"),Object(y.a)(a),Object(c.returningToSQL)(i)].filter(c.hasVal).join(" ")},insert:function(t){var r=t.table,e=t.prefix,o=void 0===e?"into":e,u=t.columns,a=t.values,i=t.where,l=t.on_duplicate_update,f=t.partition,p=t.returning,b=t.set,v=["INSERT",Object(c.toUpper)(o),Object(s.c)(r),w(f)];return Array.isArray(u)&&v.push("(".concat(u.map(c.identifierToSql).join(", "),")")),v.push(Object(c.commonOptionConnector)(Array.isArray(a)?"VALUES":"",m,a)),v.push(Object(c.commonOptionConnector)("SET",h,b)),v.push(Object(c.commonOptionConnector)("WHERE",n.a,i)),v.push(Object(c.returningToSQL)(p)),v.push(Object(c.commonOptionConnector)(l&&l.keyword,h,l&&l.set)),v.filter(c.hasVal).join(" ")},drop:O,truncate:O,declare:function(t){var r=t.type,e=t.declare,o=[Object(c.toUpper)(r)],a=e.map((function(t){var r=t.at,e=t.name,o=t.as,a=t.prefix,i=t.definition,s=t.keyword,l=["".concat(r).concat(e),Object(c.toUpper)(o)];switch(s){case"variable":l.push(Object(u.a)(a)),i&&l.push("=",Object(n.a)(i));break;case"cursor":l.push(Object(c.toUpper)(a));break;case"table":l.push(Object(c.toUpper)(a),"(".concat(i.map(p).join(", "),")"))}return l.filter(c.hasVal).join(" ")})).join(", ");return o.push(a),o.join(" ")},use:function(t){var r=t.type,e=t.db,n=Object(c.toUpper)(r),o=Object(c.identifierToSql)(e);return"".concat(n," ").concat(o)},rename:function(t){var r=t.type,e=t.table,n=[],o="".concat(r&&r.toUpperCase()," TABLE");if(e){var u,a=L(e);try{for(a.s();!(u=a.n()).done;){var i=u.value.map(s.b);n.push(i.join(" TO "))}}catch(t){a.e(t)}finally{a.f()}}return"".concat(o," ").concat(n.join(", "))},call:function(t){var r=Object(n.a)(t.expr);return"".concat("CALL"," ").concat(r)},set:function(t){var r=t.expr,e=Object(n.a)(r);return"".concat("SET"," ").concat(e)},lock:E,unlock:E};function j(t){for(var r=S[t.type],e=[r(t)],o=t,u=o._orderby,a=o._limit;t._next;){var i=(t.union||"union").toUpperCase();e.push(i,r(t._next)),t=t._next}return e.push(Object(n.c)(u,"order by"),Object(y.a)(a)),e.filter(c.hasVal).join(" ")}function T(t){var r=t.with,e=t.parentheses,o=t.select,u=t.orderby,a=t.limit,i=[Object(A.a)(r),e&&"(",j(o),e&&")"];return i.push(Object(n.c)(u,"order by"),Object(y.a)(a)),i.filter((function(t){return t})).join(" ")}function I(t){for(var r=[],e=0,n=t.length;e<n;++e){var o=t[e]&&t[e].ast;o||(o=t[e]),r.push(j(o))}return r.join(" ; ")}},function(t,r,e){"use strict";e.d(r,"a",(function(){return s}));var n=e(0),o=e(5),u=e(2);function a(t){return function(t){if(Array.isArray(t))return i(t)}(t)||function(t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}(t)||function(t,r){if(t){if("string"==typeof t)return i(t,r);var e=Object.prototype.toString.call(t).slice(8,-1);return"Object"===e&&t.constructor&&(e=t.constructor.name),"Map"===e||"Set"===e?Array.from(t):"Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e)?i(t,r):void 0}}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function i(t,r){(null==r||r>t.length)&&(r=t.length);for(var e=0,n=new Array(r);e<r;e++)n[e]=t[e];return n}function s(t){if(t){var r=t.constraint,e=t.constraint_type,i=t.index,s=t.keyword,c=t.reference_definition,l=[];return l.push(Object(n.toUpper)(s)),l.push(Object(n.identifierToSql)(r)),l.push(Object(n.toUpper)(e)),l.push(Object(n.identifierToSql)(i)),l.push.apply(l,a(Object(o.c)(t))),l.push.apply(l,a(Object(u.e)(c))),l.filter(n.hasVal).join(" ")}}},function(t,r,e){"use strict";e.d(r,"b",(function(){return l})),e.d(r,"a",(function(){return f}));var n=e(2),o=e(5),u=e(3),a=e(1),i=e(0);function s(t){return function(t){if(Array.isArray(t))return c(t)}(t)||function(t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}(t)||function(t,r){if(t){if("string"==typeof t)return c(t,r);var e=Object.prototype.toString.call(t).slice(8,-1);return"Object"===e&&t.constructor&&(e=t.constructor.name),"Map"===e||"Set"===e?Array.from(t):"Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e)?c(t,r):void 0}}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function c(t,r){(null==r||r>t.length)&&(r=t.length);for(var e=0,n=new Array(r);e<r;e++)n[e]=t[e];return n}function l(t){var r=t.type,e=t.table,n=t.expr,o=void 0===n?[]:n;return[Object(i.toUpper)(r),"TABLE",Object(u.c)(e),o.map(a.a).join(", ")].filter(i.hasVal).join(" ")}function f(t){var r=t.action,e=t.constraint_type,u=t.if_not_exists,a=t.keyword,c=t.resource,l="",f=[];switch(c){case"column":f=[Object(n.b)(t)];break;case"index":f=Object(o.c)(t),l=t[c];break;case"table":l=Object(i.identifierToSql)(t[c]);break;case"algorithm":case"lock":l="= ".concat(t[c]);break;case"constraint":l=Object(i.identifierToSql)(t[c]),f=[Object(i.toUpper)(e)].concat(s(Object(o.c)(t)))}return[Object(i.toUpper)(r),Object(i.toUpper)(a),Object(i.toUpper)(u),l,f.filter(i.hasVal).join(" ")].filter(i.hasVal).join(" ")}},function(t,r,e){"use strict";e.d(r,"a",(function(){return a}));var n=e(0),o=e(1),u=e(12);function a(t){if(t){var r=t.as_window_specification,e=t.orderby,a=t.partitionby,i=t.type;if("WINDOW"===Object(n.toUpper)(i)){var s=Object(u.a)(r);return"OVER ".concat(s)}var c=Object(o.c)(a,"partition by"),l=Object(o.c)(e,"order by");return"OVER (".concat([c,l].filter(n.hasVal).join(" "),")")}}},function(t,r,e){"use strict";e.d(r,"a",(function(){return u})),e.d(r,"b",(function(){return i}));var n=e(0),o=e(1);function u(t){if("string"==typeof t)return t;var r=t.window_specification;return"(".concat(function(t){var r=t.name,e=t.partitionby,u=t.orderby,a=t.window_frame_clause;return[r,Object(o.c)(e,"partition by"),Object(o.c)(u,"order by"),Object(n.toUpper)(a)].filter(n.hasVal).join(" ")}(r),")")}function a(t){var r=t.name,e=t.as_window_specification;return"".concat(r," AS ").concat(u(e))}function i(t){return t.expr.map(a).join(", ")}},function(t,r,e){"use strict";e.d(r,"a",(function(){return o}));var n=e(1);function o(t){if(t&&0!==t.length){var r=t[0].recursive?"RECURSIVE ":"",e=t.map((function(t){var r=t.name,e=t.stmt,o=t.columns,u=Array.isArray(o)?"(".concat(o.join(", "),")"):"";return"".concat(r).concat(u," AS (").concat(Object(n.a)(e),")")})).join(", ");return"WITH ".concat(r).concat(e)}}},function(t,r,e){"use strict";var n,o,u,a=(n={},o="mysql",u=e(15).parse,o in n?Object.defineProperty(n,o,{value:u,enumerable:!0,configurable:!0,writable:!0}):n[o]=u,n),i=e(8),s=["select","delete","update","insert","drop","rename","truncate","call","use","alter","set","create","lock","unlock","bigquery","declare"];function c(t){var r=t&&t.ast?t.ast:t;if(!s.includes(r.type))throw new Error("".concat(r.type," statements not supported at the moment"))}function l(t){return Array.isArray(t)?(t.forEach(c),Object(i.b)(t)):(c(t),"bigquery"===t.type?Object(i.a)(t):Object(i.c)(t))}var f=e(0);function p(t,r){var e;if("undefined"==typeof Symbol||null==t[Symbol.iterator]){if(Array.isArray(t)||(e=function(t,r){if(t){if("string"==typeof t)return b(t,r);var e=Object.prototype.toString.call(t).slice(8,-1);return"Object"===e&&t.constructor&&(e=t.constructor.name),"Map"===e||"Set"===e?Array.from(t):"Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e)?b(t,r):void 0}}(t))||r&&t&&"number"==typeof t.length){e&&(t=e);var n=0,o=function(){};return{s:o,n:function(){return n>=t.length?{done:!0}:{done:!1,value:t[n++]}},e:function(t){throw t},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var u,a=!0,i=!1;return{s:function(){e=t[Symbol.iterator]()},n:function(){var t=e.next();return a=t.done,t},e:function(t){i=!0,u=t},f:function(){try{a||null==e.return||e.return()}finally{if(i)throw u}}}}function b(t,r){(null==r||r>t.length)&&(r=t.length);for(var e=0,n=new Array(r);e<r;e++)n[e]=t[e];return n}function v(t,r){for(var e=0;e<r.length;e++){var n=r[e];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}var y=function(){function t(){!function(t,r){if(!(t instanceof r))throw new TypeError("Cannot call a class as a function")}(this,t)}var r,e;return r=t,(e=[{key:"astify",value:function(t){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:f.DEFAULT_OPT,e=this.parse(t,r);return e&&e.ast}},{key:"sqlify",value:function(t){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:f.DEFAULT_OPT;return Object(f.setParserOpt)(r),l(t)}},{key:"parse",value:function(t){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:f.DEFAULT_OPT,e=r.database,n=void 0===e?"mysql":e;Object(f.setParserOpt)(r);var o=n.toLowerCase();if(a[o])return a[o](t.trim());throw new Error("".concat(n," is not supported currently"))}},{key:"whiteListCheck",value:function(t,r){var e=arguments.length>2&&void 0!==arguments[2]?arguments[2]:f.DEFAULT_OPT;if(r&&0!==r.length){var n=e.type,o=void 0===n?"table":n;if(!this["".concat(o,"List")]||"function"!=typeof this["".concat(o,"List")])throw new Error("".concat(o," is not valid check mode"));var u,a=this["".concat(o,"List")].bind(this),i=a(t,e),s=!0,c="",l=p(i);try{for(l.s();!(u=l.n()).done;){var b,v=u.value,y=!1,d=p(r);try{for(d.s();!(b=d.n()).done;){var h=b.value,m=new RegExp(h,"i");if(m.test(v)){y=!0;break}}}catch(t){d.e(t)}finally{d.f()}if(!y){c=v,s=!1;break}}}catch(t){l.e(t)}finally{l.f()}if(!s)throw new Error("authority = '".concat(c,"' is required in ").concat(o," whiteList to execute SQL = '").concat(t,"'"))}}},{key:"tableList",value:function(t,r){var e=this.parse(t,r);return e&&e.tableList}},{key:"columnList",value:function(t,r){var e=this.parse(t,r);return e&&e.columnList}}])&&v(r.prototype,e),t}();r.a=y},function(t,r,e){"use strict";var n=e(19);function o(t,r,e,n){this.message=t,this.expected=r,this.found=e,this.location=n,this.name="SyntaxError","function"==typeof Error.captureStackTrace&&Error.captureStackTrace(this,o)}!function(t,r){function e(){this.constructor=t}e.prototype=r.prototype,t.prototype=new e}(o,Error),o.buildMessage=function(t,r){var e={literal:function(t){return'"'+o(t.text)+'"'},class:function(t){var r,e="";for(r=0;r<t.parts.length;r++)e+=t.parts[r]instanceof Array?u(t.parts[r][0])+"-"+u(t.parts[r][1]):u(t.parts[r]);return"["+(t.inverted?"^":"")+e+"]"},any:function(t){return"any character"},end:function(t){return"end of input"},other:function(t){return t.description}};function n(t){return t.charCodeAt(0).toString(16).toUpperCase()}function o(t){return t.replace(/\\/g,"\\\\").replace(/"/g,'\\"').replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(t){return"\\x0"+n(t)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(t){return"\\x"+n(t)}))}function u(t){return t.replace(/\\/g,"\\\\").replace(/\]/g,"\\]").replace(/\^/g,"\\^").replace(/-/g,"\\-").replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(t){return"\\x0"+n(t)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(t){return"\\x"+n(t)}))}return"Expected "+function(t){var r,n,o,u=new Array(t.length);for(r=0;r<t.length;r++)u[r]=(o=t[r],e[o.type](o));if(u.sort(),u.length>0){for(r=1,n=1;r<u.length;r++)u[r-1]!==u[r]&&(u[n]=u[r],n++);u.length=n}switch(u.length){case 1:return u[0];case 2:return u[0]+" or "+u[1];default:return u.slice(0,-1).join(", ")+", or "+u[u.length-1]}}(t)+" but "+function(t){return t?'"'+o(t)+'"':"end of input"}(r)+" found."},t.exports={SyntaxError:o,parse:function(t,r){r=void 0!==r?r:{};var e,u={},a={start:go},i=go,s=function(t,r){return xi(t,r)},c=ho("AUTO_INCREMENT",!0),l=ho("UNIQUE",!0),f=ho("PRIMARY",!0),p=ho("KEY",!0),b=ho("COLUMN_FORMAT",!0),v=ho("FIXED",!0),y=ho("DYNAMIC",!0),d=ho("DEFAULT",!0),h=ho("STORAGE",!0),m=ho("DISK",!0),w=ho("MEMORY",!0),L=ho("ALGORITHM",!0),C=ho("INSTANT",!0),g=ho("INPLACE",!0),O=ho("COPY",!0),E=ho("LOCK",!0),A=ho("NONE",!0),S=ho("SHARED",!0),j=ho("EXCLUSIVE",!0),T=ho("CHECK",!0),I=ho("NOCHECK",!0),N=ho("NOT",!0),_=ho("FOR",!0),U=ho("REPLICATION",!0),R=ho("FOREIGN KEY",!0),x=ho("MATCH FULL",!0),k=ho("MATCH PARTIAL",!0),M=ho("MATCH SIMPLE",!0),q=ho("ON DELETE",!0),P=ho("ON UPDATE",!0),D=ho("RESTRICT",!0),V=ho("CASCADE",!0),$=ho("SET NULL",!0),B=ho("NO ACTION",!0),F=ho("SET DEFAULT",!0),H=ho("AVG_ROW_LENGTH",!0),Q=ho("KEY_BLOCK_SIZE",!0),G=ho("MAX_ROWS",!0),W=ho("MIN_ROWS",!0),Y=ho("STATS_SAMPLE_PAGES",!0),Z=ho("CHARACTER SET",!0),J=ho("CHARSET",!0),X=ho("COLLATE",!0),K=ho("CONNECTION",!0),z=ho("COMPRESSION",!0),tt=ho("'",!1),rt=ho("ZLIB",!0),et=ho("LZ4",!0),nt=ho("ENGINE",!0),ot=ho("READ",!0),ut=ho("LOCAL",!0),at=ho("LOW_PRIORITY",!0),it=ho("WRITE",!0),st=ho("(",!1),ct=ho(")",!1),lt=ho("BTREE",!0),ft=ho("HASH",!0),pt=ho("WITH",!0),bt=ho("PARSER",!0),vt=ho("VISIBLE",!0),yt=ho("INVISIBLE",!0),dt=ho("=",!1),ht=ho("DUPLICATE",!0),mt=function(t,r){return ki(t,r)},wt=ho("!",!1),Lt=function(t){return t[0]+" "+t[2]},Ct=ho(">=",!1),gt=ho(">",!1),Ot=ho("<=",!1),Et=ho("<>",!1),At=ho("<",!1),St=ho("!=",!1),jt=ho("+",!1),Tt=ho("-",!1),It=ho("*",!1),Nt=ho("/",!1),_t=ho("%",!1),Ut=function(t){return t.parentheses=!0,t},Rt=ho("?",!1),xt=function(t){return!0===Ni[t.toUpperCase()]},kt=ho('"',!1),Mt=/^[^"]/,qt=mo(['"'],!0,!1),Pt=function(t){return t.join("")},Dt=/^[^']/,Vt=mo(["'"],!0,!1),$t=ho("`",!1),Bt=/^[^`]/,Ft=mo(["`"],!0,!1),Ht=function(t,r){return t+r.join("")},Qt=/^[A-Za-z_]/,Gt=mo([["A","Z"],["a","z"],"_"],!1,!1),Wt=/^[A-Za-z0-9_]/,Yt=mo([["A","Z"],["a","z"],["0","9"],"_"],!1,!1),Zt=/^[A-Za-z0-9_:]/,Jt=mo([["A","Z"],["a","z"],["0","9"],"_",":"],!1,!1),Xt=ho(":",!1),Kt=function(t){return{type:"string",value:t[1].join("")}},zt=ho("ON UPDATE CURRENT_TIMESTAMP",!0),tr=/^[^"\\\0-\x1F\x7F]/,rr=mo(['"',"\\",["\0",""],""],!0,!1),er=/^[^'\\]/,nr=mo(["'","\\"],!0,!1),or=ho("\\'",!1),ur=ho('\\"',!1),ar=ho("\\\\",!1),ir=ho("\\/",!1),sr=ho("\\b",!1),cr=ho("\\f",!1),lr=ho("\\n",!1),fr=ho("\\r",!1),pr=ho("\\t",!1),br=ho("\\u",!1),vr=ho("\\",!1),yr=/^[\n\r]/,dr=mo(["\n","\r"],!1,!1),hr=ho(".",!1),mr=/^[0-9]/,wr=mo([["0","9"]],!1,!1),Lr=/^[0-9a-fA-F]/,Cr=mo([["0","9"],["a","f"],["A","F"]],!1,!1),gr=/^[eE]/,Or=mo(["e","E"],!1,!1),Er=/^[+\-]/,Ar=mo(["+","-"],!1,!1),Sr=ho("NULL",!0),jr=ho("NOT NULL",!0),Tr=ho("TRUE",!0),Ir=ho("TO",!0),Nr=ho("FALSE",!0),_r=(ho("SHOW",!0),ho("DROP",!0)),Ur=ho("USE",!0),Rr=ho("ALTER",!0),xr=ho("SELECT",!0),kr=ho("UPDATE",!0),Mr=ho("CREATE",!0),qr=ho("TEMPORARY",!0),Pr=ho("IF NOT EXISTS",!0),Dr=ho("DELETE",!0),Vr=ho("INSERT",!0),$r=ho("RECURSIVE",!1),Br=ho("REPLACE",!0),Fr=ho("RENAME",!0),Hr=ho("IGNORE",!0),Qr=(ho("EXPLAIN",!0),ho("PARTITION",!0)),Gr=ho("INTO",!0),Wr=ho("FROM",!0),Yr=ho("SET",!0),Zr=ho("UNLOCK",!0),Jr=ho("AS",!0),Xr=ho("TABLE",!0),Kr=ho("TABLES",!0),zr=ho("ON",!0),te=ho("LEFT",!0),re=ho("RIGHT",!0),ee=ho("FULL",!0),ne=ho("INNER",!0),oe=ho("JOIN",!0),ue=ho("OUTER",!0),ae=ho("OVER",!0),ie=ho("UNION",!0),se=ho("VALUES",!0),ce=ho("USING",!0),le=ho("WHERE",!0),fe=ho("GROUP",!0),pe=ho("BY",!0),be=ho("ORDER",!0),ve=ho("HAVING",!0),ye=ho("LIMIT",!0),de=ho("OFFSET",!0),he=ho("ASC",!0),me=ho("DESC",!0),we=ho("ALL",!0),Le=ho("DISTINCT",!0),Ce=ho("BETWEEN",!0),ge=ho("IN",!0),Oe=ho("IS",!0),Ee=ho("LIKE",!0),Ae=ho("EXISTS",!0),Se=ho("AND",!0),je=ho("OR",!0),Te=ho("COUNT",!0),Ie=ho("MAX",!0),Ne=ho("MIN",!0),_e=ho("SUM",!0),Ue=ho("AVG",!0),Re=ho("CALL",!0),xe=ho("CASE",!0),ke=ho("WHEN",!0),Me=ho("THEN",!0),qe=ho("ELSE",!0),Pe=ho("END",!0),De=ho("CAST",!0),Ve=ho("CHAR",!0),$e=ho("VARCHAR",!0),Be=ho("NUMERIC",!0),Fe=ho("DECIMAL",!0),He=ho("SIGNED",!0),Qe=ho("UNSIGNED",!0),Ge=ho("INT",!0),We=ho("ZEROFILL",!0),Ye=ho("INTEGER",!0),Ze=ho("JSON",!0),Je=ho("SMALLINT",!0),Xe=ho("TINYINT",!0),Ke=ho("TINYTEXT",!0),ze=ho("TEXT",!0),tn=ho("MEDIUMTEXT",!0),rn=ho("LONGTEXT",!0),en=ho("BIGINT",!0),nn=ho("FLOAT",!0),on=ho("DOUBLE",!0),un=ho("DATE",!0),an=ho("DATETIME",!0),sn=ho("TIME",!0),cn=ho("TIMESTAMP",!0),ln=ho("TRUNCATE",!0),fn=ho("USER",!0),pn=ho("CURRENT_DATE",!0),bn=(ho("ADDDATE",!0),ho("INTERVAL",!0)),vn=ho("YEAR",!0),yn=ho("MONTH",!0),dn=ho("DAY",!0),hn=ho("HOUR",!0),mn=ho("MINUTE",!0),wn=ho("SECOND",!0),Ln=ho("CURRENT_TIME",!0),Cn=ho("CURRENT_TIMESTAMP",!0),gn=ho("CURRENT_USER",!0),On=ho("SESSION_USER",!0),En=ho("SYSTEM_USER",!0),An=ho("GLOBAL",!0),Sn=ho("SESSION",!0),jn=ho("PERSIST",!0),Tn=ho("PERSIST_ONLY",!0),In=ho("@",!1),Nn=ho("@@",!1),_n=ho("$",!1),Un=ho("return",!0),Rn=ho(":=",!1),xn=ho("DUAL",!0),kn=ho("ADD",!0),Mn=ho("COLUMN",!0),qn=ho("INDEX",!0),Pn=ho("FULLTEXT",!0),Dn=ho("SPATIAL",!0),Vn=ho("COMMENT",!0),$n=ho("CONSTRAINT",!0),Bn=ho("REFERENCES",!0),Fn=ho("SQL_CALC_FOUND_ROWS",!0),Hn=ho("SQL_CACHE",!0),Qn=ho("SQL_NO_CACHE",!0),Gn=ho("SQL_SMALL_RESULT",!0),Wn=ho("SQL_BIG_RESULT",!0),Yn=ho("SQL_BUFFER_RESULT",!0),Zn=ho(",",!1),Jn=ho("[",!1),Xn=ho("]",!1),Kn=ho(";",!1),zn=ho("->",!1),to=ho("->>",!1),ro=ho("||",!1),eo=ho("&&",!1),no=ho("/*",!1),oo=ho("*/",!1),uo=ho("--",!1),ao=ho("#",!1),io={type:"any"},so=/^[ \t\n\r]/,co=mo([" ","\t","\n","\r"],!1,!1),lo=function(t){return{dataType:t}},fo=0,po=[{line:1,column:1}],bo=0,vo=[],yo=0;if("startRule"in r){if(!(r.startRule in a))throw new Error("Can't start parsing from rule \""+r.startRule+'".');i=a[r.startRule]}function ho(t,r){return{type:"literal",text:t,ignoreCase:r}}function mo(t,r,e){return{type:"class",parts:t,inverted:r,ignoreCase:e}}function wo(r){var e,n=po[r];if(n)return n;for(e=r-1;!po[e];)e--;for(n={line:(n=po[e]).line,column:n.column};e<r;)10===t.charCodeAt(e)?(n.line++,n.column=1):n.column++,e++;return po[r]=n,n}function Lo(t,r){var e=wo(t),n=wo(r);return{start:{offset:t,line:e.line,column:e.column},end:{offset:r,line:n.line,column:n.column}}}function Co(t){fo<bo||(fo>bo&&(bo=fo,vo=[]),vo.push(t))}function go(){var t,r;return t=fo,li()!==u?((r=function(){var t,r,e,n,o,a,i,s;if(t=fo,(r=Eo())!==u){if(e=[],n=fo,(o=li())!==u&&(a=si())!==u&&(i=li())!==u&&(s=Eo())!==u?n=o=[o,a,i,s]:(fo=n,n=u),n!==u)for(;n!==u;)e.push(n),n=fo,(o=li())!==u&&(a=si())!==u&&(i=li())!==u&&(s=Eo())!==u?n=o=[o,a,i,s]:(fo=n,n=u);else e=u;e!==u?(r=function(t,r){const e=[t&&t.ast||t];for(let t=0;t<r.length;t++)r[t][3]&&0!==r[t][3].length&&e.push(r[t][3]&&r[t][3].ast||r[t][3]);return{tableList:Array.from(Di),columnList:qi(Vi),ast:e}}(r,e),t=r):(fo=t,t=u)}else fo=t,t=u;return t}())===u&&(r=Oo())===u&&(r=Eo()),r!==u?t=r:(fo=t,t=u)):(fo=t,t=u),t}function Oo(){var r;return(r=function(){var t,r,e,n,o,a,i;return t=fo,(r=ta())!==u&&li()!==u&&(e=fa())!==u&&li()!==u&&(n=Ko())!==u?(o=r,a=e,(i=n)&&i.forEach(t=>Di.add(`${o}::${t.db}::${t.table}`)),t=r={tableList:Array.from(Di),columnList:qi(Vi),ast:{type:o.toLowerCase(),keyword:a.toLowerCase(),name:i}}):(fo=t,t=u),t}())===u&&(r=function(){var r,e,n,o,a,i,c,l,f,p,b,v,y,d,h,m,w,L,C;return r=fo,(e=ea())!==u&&li()!==u?((n=na())===u&&(n=null),n!==u&&li()!==u&&fa()!==u&&li()!==u?((o=oa())===u&&(o=null),o!==u&&li()!==u&&(a=Ko())!==u&&li()!==u&&(i=function(){var t,r,e,n,o,a,i,c;if(t=fo,ai()!==u)if(li()!==u)if((r=So())!==u){for(e=[],n=fo,(o=li())!==u&&(a=oi())!==u&&(i=li())!==u&&(c=So())!==u?n=o=[o,a,i,c]:(fo=n,n=u);n!==u;)e.push(n),n=fo,(o=li())!==u&&(a=oi())!==u&&(i=li())!==u&&(c=So())!==u?n=o=[o,a,i,c]:(fo=n,n=u);e!==u&&(n=li())!==u&&(o=ii())!==u?t=s(r,e):(fo=t,t=u)}else fo=t,t=u;else fo=t,t=u;else fo=t,t=u;return t}())!==u&&li()!==u?((c=function(){var t,r,e,n,o,a,i,s;if(t=fo,(r=Mo())!==u){for(e=[],n=fo,(o=li())!==u?((a=oi())===u&&(a=null),a!==u&&(i=li())!==u&&(s=Mo())!==u?n=o=[o,a,i,s]:(fo=n,n=u)):(fo=n,n=u);n!==u;)e.push(n),n=fo,(o=li())!==u?((a=oi())===u&&(a=null),a!==u&&(i=li())!==u&&(s=Mo())!==u?n=o=[o,a,i,s]:(fo=n,n=u)):(fo=n,n=u);e!==u?t=r=xi(r,e):(fo=t,t=u)}else fo=t,t=u;return t}())===u&&(c=null),c!==u&&li()!==u?((l=function(){var r,e,n,o;return r=fo,"ignore"===t.substr(fo,6).toLowerCase()?(e=t.substr(fo,6),fo+=6):(e=u,0===yo&&Co(Hr)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e=[e,n]:(fo=r,r=u)):(fo=r,r=u),r}())===u&&(l=ua()),l===u&&(l=null),l!==u&&li()!==u?((f=la())===u&&(f=null),f!==u&&li()!==u?((p=Ao())===u&&(p=null),p!==u?(b=e,v=n,y=o,h=i,m=c,w=l,L=f,C=p,(d=a)&&d.forEach(t=>Di.add(`create::${t.db}::${t.table}`)),r=e={tableList:Array.from(Di),columnList:qi(Vi),ast:{type:b[0].toLowerCase(),keyword:"table",temporary:v&&v[0].toLowerCase(),if_not_exists:y&&y[0].toLowerCase(),table:d,ignore_replace:w&&w[0].toLowerCase(),as:L&&L[0].toLowerCase(),query_expr:C&&C.ast,create_definitions:h,table_options:m}}):(fo=r,r=u)):(fo=r,r=u)):(fo=r,r=u)):(fo=r,r=u)):(fo=r,r=u)):(fo=r,r=u)):(fo=r,r=u),r===u&&(r=fo,(e=ea())!==u&&li()!==u?((n=na())===u&&(n=null),n!==u&&li()!==u&&fa()!==u&&li()!==u?((o=oa())===u&&(o=null),o!==u&&li()!==u&&(a=Ko())!==u&&li()!==u&&(i=function t(){var r,e,n;return(r=function(){var t,r;return t=fo,Aa()!==u&&li()!==u&&(r=Ko())!==u?t={type:"like",table:r}:(fo=t,t=u),t}())===u&&(r=fo,ai()!==u&&li()!==u&&(e=t())!==u&&li()!==u&&ii()!==u?((n=e).parentheses=!0,r=n):(fo=r,r=u)),r}())!==u?(e=function(t,r,e,n,o){return n&&n.forEach(t=>Di.add(`create::${t.db}::${t.table}`)),{tableList:Array.from(Di),columnList:qi(Vi),ast:{type:t[0].toLowerCase(),keyword:"table",temporary:r&&r[0].toLowerCase(),if_not_exists:e&&e[0].toLowerCase(),table:n,like:o}}}(e,n,o,a,i),r=e):(fo=r,r=u)):(fo=r,r=u)):(fo=r,r=u)),r}())===u&&(r=function(){var r,e,n,o,a,i,s;return r=fo,(e=function(){var r,e,n,o;return r=fo,"truncate"===t.substr(fo,8).toLowerCase()?(e=t.substr(fo,8),fo+=8):(e=u,0===yo&&Co(ln)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e="TRUNCATE":(fo=r,r=u)):(fo=r,r=u),r}())!==u&&li()!==u?((n=fa())===u&&(n=null),n!==u&&li()!==u&&(o=Ko())!==u?(a=e,i=n,(s=o)&&s.forEach(t=>Di.add(`${a}::${t.db}::${t.table}`)),r=e={tableList:Array.from(Di),columnList:qi(Vi),ast:{type:a.toLowerCase(),keyword:i&&i.toLowerCase()||"table",name:s}}):(fo=r,r=u)):(fo=r,r=u),r}())===u&&(r=function(){var t,r,e;return t=fo,aa()!==u&&li()!==u&&fa()!==u&&li()!==u&&(r=function(){var t,r,e,n,o,a,i,c;if(t=fo,(r=Yo())!==u){for(e=[],n=fo,(o=li())!==u&&(a=oi())!==u&&(i=li())!==u&&(c=Yo())!==u?n=o=[o,a,i,c]:(fo=n,n=u);n!==u;)e.push(n),n=fo,(o=li())!==u&&(a=oi())!==u&&(i=li())!==u&&(c=Yo())!==u?n=o=[o,a,i,c]:(fo=n,n=u);e!==u?t=r=s(r,e):(fo=t,t=u)}else fo=t,t=u;return t}())!==u?((e=r).forEach(t=>t.forEach(t=>t.table&&Di.add(`rename::${t.db}::${t.table}`))),t={tableList:Array.from(Di),columnList:qi(Vi),ast:{type:"rename",table:e}}):(fo=t,t=u),t}())===u&&(r=function(){var r,e,n;return r=fo,function(){var r,e,n,o;return r=fo,"call"===t.substr(fo,4).toLowerCase()?(e=t.substr(fo,4),fo+=4):(e=u,0===yo&&Co(Re)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e="CALL":(fo=r,r=u)):(fo=r,r=u),r}()!==u&&li()!==u&&(e=Ei())!==u?(n=e,r={tableList:Array.from(Di),columnList:qi(Vi),ast:{type:"call",expr:n}}):(fo=r,r=u),r}())===u&&(r=function(){var r,e,n;return r=fo,function(){var r,e,n,o;return r=fo,"use"===t.substr(fo,3).toLowerCase()?(e=t.substr(fo,3),fo+=3):(e=u,0===yo&&Co(Ur)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e=[e,n]:(fo=r,r=u)):(fo=r,r=u),r}()!==u&&li()!==u&&(e=Iu())!==u?(n=e,Di.add(`use::${n}::null`),r={tableList:Array.from(Di),columnList:qi(Vi),ast:{type:"use",db:n}}):(fo=r,r=u),r}())===u&&(r=function(){var r,e,n,o,a;return r=fo,function(){var r,e,n,o;return r=fo,"alter"===t.substr(fo,5).toLowerCase()?(e=t.substr(fo,5),fo+=5):(e=u,0===yo&&Co(Rr)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e=[e,n]:(fo=r,r=u)):(fo=r,r=u),r}()!==u&&li()!==u&&fa()!==u&&li()!==u&&(e=Ko())!==u&&li()!==u&&(n=function(){var t,r,e,n,o,a,i,c;if(t=fo,(r=Io())!==u){for(e=[],n=fo,(o=li())!==u&&(a=oi())!==u&&(i=li())!==u&&(c=Io())!==u?n=o=[o,a,i,c]:(fo=n,n=u);n!==u;)e.push(n),n=fo,(o=li())!==u&&(a=oi())!==u&&(i=li())!==u&&(c=Io())!==u?n=o=[o,a,i,c]:(fo=n,n=u);e!==u?t=r=s(r,e):(fo=t,t=u)}else fo=t,t=u;return t}())!==u?(a=n,(o=e)&&o.length>0&&o.forEach(t=>Di.add(`alter::${t.db}::${t.table}`)),r={tableList:Array.from(Di),columnList:qi(Vi),ast:{type:"alter",table:o,expr:a}}):(fo=r,r=u),r}())===u&&(r=function(){var r,e,n,o,a;return r=fo,ca()!==u&&li()!==u?((e=function(){var r,e,n,o;return r=fo,"global"===t.substr(fo,6).toLowerCase()?(e=t.substr(fo,6),fo+=6):(e=u,0===yo&&Co(An)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e="GLOBAL":(fo=r,r=u)):(fo=r,r=u),r}())===u&&(e=function(){var r,e,n,o;return r=fo,"session"===t.substr(fo,7).toLowerCase()?(e=t.substr(fo,7),fo+=7):(e=u,0===yo&&Co(Sn)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e="SESSION":(fo=r,r=u)):(fo=r,r=u),r}())===u&&(e=function(){var r,e,n,o;return r=fo,"local"===t.substr(fo,5).toLowerCase()?(e=t.substr(fo,5),fo+=5):(e=u,0===yo&&Co(ut)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e="LOCAL":(fo=r,r=u)):(fo=r,r=u),r}())===u&&(e=function(){var r,e,n,o;return r=fo,"persist"===t.substr(fo,7).toLowerCase()?(e=t.substr(fo,7),fo+=7):(e=u,0===yo&&Co(jn)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e="PERSIST":(fo=r,r=u)):(fo=r,r=u),r}())===u&&(e=function(){var r,e,n,o;return r=fo,"persist_only"===t.substr(fo,12).toLowerCase()?(e=t.substr(fo,12),fo+=12):(e=u,0===yo&&Co(Tn)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e="PERSIST_ONLY":(fo=r,r=u)):(fo=r,r=u),r}()),e===u&&(e=null),e!==u&&li()!==u&&(n=mi())!==u?(o=e,(a=n).keyword=o,r={tableList:Array.from(Di),columnList:qi(Vi),ast:{type:"set",expr:a}}):(fo=r,r=u)):(fo=r,r=u),r}())===u&&(r=function(){var r,e,n;return r=fo,function(){var r,e,n,o;return r=fo,"lock"===t.substr(fo,4).toLowerCase()?(e=t.substr(fo,4),fo+=4):(e=u,0===yo&&Co(E)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e=[e,n]:(fo=r,r=u)):(fo=r,r=u),r}()!==u&&li()!==u&&pa()!==u&&li()!==u&&(e=function(){var t,r,e,n,o,a,i,s;if(t=fo,(r=qo())!==u){for(e=[],n=fo,(o=li())!==u&&(a=oi())!==u&&(i=li())!==u&&(s=qo())!==u?n=o=[o,a,i,s]:(fo=n,n=u);n!==u;)e.push(n),n=fo,(o=li())!==u&&(a=oi())!==u&&(i=li())!==u&&(s=qo())!==u?n=o=[o,a,i,s]:(fo=n,n=u);e!==u?t=r=xi(r,e):(fo=t,t=u)}else fo=t,t=u;return t}())!==u?(n=e,r={tableList:Array.from(Di),columnList:qi(Vi),ast:{type:"lock",keyword:"tables",tables:n}}):(fo=r,r=u),r}())===u&&(r=function(){var r;return r=fo,function(){var r,e,n,o;return r=fo,"unlock"===t.substr(fo,6).toLowerCase()?(e=t.substr(fo,6),fo+=6):(e=u,0===yo&&Co(Zr)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e=[e,n]:(fo=r,r=u)):(fo=r,r=u),r}()!==u&&li()!==u&&pa()!==u?r={tableList:Array.from(Di),columnList:qi(Vi),ast:{type:"unlock",keyword:"tables"}}:(fo=r,r=u),r}()),r}function Eo(){var r;return(r=Ao())===u&&(r=function(){var t,r,e,n,o,a,i,s,c,l,f;return t=fo,ra()!==u&&li()!==u&&(r=Ko())!==u&&li()!==u&&ca()!==u&&li()!==u&&(e=cu())!==u&&li()!==u?((n=ou())===u&&(n=null),n!==u&&li()!==u?((o=uu())===u&&(o=null),o!==u&&li()!==u?((a=su())===u&&(a=null),a!==u?(s=e,c=n,l=o,f=a,(i=r)&&i.forEach(t=>{const{db:r,as:e,table:n}=t;Di.add(`update::${r}::${n}`)}),s&&s.forEach(t=>Vi.add(`update::${t.table}::${t.column}`)),t={tableList:Array.from(Di),columnList:qi(Vi),ast:{type:"update",table:i,set:s,where:c,orderby:l,limit:f}}):(fo=t,t=u)):(fo=t,t=u)):(fo=t,t=u)):(fo=t,t=u),t}())===u&&(r=function(){var t,r,e,n,o,a,i,c;return t=fo,(r=vu())!==u&&li()!==u?((e=sa())===u&&(e=null),e!==u&&li()!==u&&(n=eu())!==u&&li()!==u?((o=pu())===u&&(o=null),o!==u&&li()!==u&&ai()!==u&&li()!==u&&(a=function(){var t,r,e,n,o,a,i,c;if(t=fo,(r=_u())!==u){for(e=[],n=fo,(o=li())!==u&&(a=oi())!==u&&(i=li())!==u&&(c=_u())!==u?n=o=[o,a,i,c]:(fo=n,n=u);n!==u;)e.push(n),n=fo,(o=li())!==u&&(a=oi())!==u&&(i=li())!==u&&(c=_u())!==u?n=o=[o,a,i,c]:(fo=n,n=u);e!==u?t=r=s(r,e):(fo=t,t=u)}else fo=t,t=u;return t}())!==u&&li()!==u&&ii()!==u&&li()!==u&&(i=fu())!==u&&li()!==u?((c=bu())===u&&(c=null),c!==u?t=r=function(t,r,e,n,o,u){if(r&&(Di.add(`insert::${r.db}::${r.table}`),r.as=null),n){let t=r&&r.table||null;n.forEach(r=>Vi.add(`insert::${t}::${r}`))}return{tableList:Array.from(Di),columnList:qi(Vi),ast:{type:t,table:[r],columns:n,values:o,partition:e,on_duplicate_update:u}}}(r,n,o,a,i,c):(fo=t,t=u)):(fo=t,t=u)):(fo=t,t=u)):(fo=t,t=u),t}())===u&&(r=function(){var t,r,e,n,o,a,i,s,c,l,f;return t=fo,(r=vu())!==u&&li()!==u&&sa()!==u&&li()!==u&&(e=eu())!==u&&li()!==u?((n=pu())===u&&(n=null),n!==u&&li()!==u&&(o=fu())!==u&&li()!==u?((a=bu())===u&&(a=null),a!==u?(i=r,c=n,l=o,f=a,(s=e)&&(Di.add(`insert::${s.db}::${s.table}`),Vi.add(`insert::${s.table}::(.*)`),s.as=null),t=r={tableList:Array.from(Di),columnList:qi(Vi),ast:{type:i,table:[s],columns:null,values:l,partition:c,on_duplicate_update:f}}):(fo=t,t=u)):(fo=t,t=u)):(fo=t,t=u),t}())===u&&(r=function(){var t,r,e,n,o,a,i,s,c,l,f;return t=fo,(r=vu())!==u&&li()!==u&&sa()!==u&&li()!==u&&(e=eu())!==u&&li()!==u?((n=pu())===u&&(n=null),n!==u&&li()!==u&&ca()!==u&&li()!==u&&(o=cu())!==u&&li()!==u?((a=bu())===u&&(a=null),a!==u?(i=r,c=n,l=o,f=a,(s=e)&&(Di.add(`insert::${s.db}::${s.table}`),Vi.add(`insert::${s.table}::(.*)`),s.as=null),t=r={tableList:Array.from(Di),columnList:qi(Vi),ast:{type:i,table:[s],columns:null,partition:c,set:l,on_duplicate_update:f}}):(fo=t,t=u)):(fo=t,t=u)):(fo=t,t=u),t}())===u&&(r=function(){var r,e,n,o,a,i,s;return r=fo,(e=function(){var r,e,n,o;return r=fo,"delete"===t.substr(fo,6).toLowerCase()?(e=t.substr(fo,6),fo+=6):(e=u,0===yo&&Co(Dr)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e=[e,n]:(fo=r,r=u)):(fo=r,r=u),r}())!==u&&li()!==u?((n=Ko())===u&&(n=null),n!==u&&li()!==u&&(o=Wo())!==u&&li()!==u?((a=ou())===u&&(a=null),a!==u&&li()!==u?((i=uu())===u&&(i=null),i!==u&&li()!==u?((s=su())===u&&(s=null),s!==u?(e=function(t,r,e,n,o){if(r&&r.forEach(t=>{t.table&&Di.add(`delete::${t.db}::${t.table}`),Vi.add(`delete::${t.table}::(.*)`)}),null===t&&1===r.length){const e=r[0];t=[{db:e.db,table:e.table,as:e.as,addition:!0}]}return{tableList:Array.from(Di),columnList:qi(Vi),ast:{type:"delete",table:t,from:r,where:e,orderby:n,limit:o}}}(n,o,a,i,s),r=e):(fo=r,r=u)):(fo=r,r=u)):(fo=r,r=u)):(fo=r,r=u)):(fo=r,r=u),r}())===u&&(r=Oo())===u&&(r=function(){var t,r;for(t=[],r=hi();r!==u;)t.push(r),r=hi();return t}()),r}function Ao(){var t,r,e,n,o,a,i,s,c,l;if(t=fo,(r=Po())!==u){for(e=[],n=fo,(o=li())!==u&&(a=da())!==u&&(i=li())!==u?((s=La())===u&&(s=null),s!==u&&(c=li())!==u&&(l=Po())!==u?n=o=[o,a,i,s,c,l]:(fo=n,n=u)):(fo=n,n=u);n!==u;)e.push(n),n=fo,(o=li())!==u&&(a=da())!==u&&(i=li())!==u?((s=La())===u&&(s=null),s!==u&&(c=li())!==u&&(l=Po())!==u?n=o=[o,a,i,s,c,l]:(fo=n,n=u)):(fo=n,n=u);e!==u&&(n=li())!==u?((o=uu())===u&&(o=null),o!==u&&(a=li())!==u?((i=su())===u&&(i=null),i!==u?t=r=function(t,r,e,n){let o=t;for(let t=0;t<r.length;t++)o._next=r[t][5],o.union=r[t][3]?"union all":"union",o=o._next;return e&&(t._orderby=e),n&&(t._limit=n),{tableList:Array.from(Di),columnList:qi(Vi),ast:t}}(r,e,o,i):(fo=t,t=u)):(fo=t,t=u)):(fo=t,t=u)}else fo=t,t=u;return t}function So(){var r;return(r=function(){var r;return(r=function(){var r,e,n,o,a,i,s,c,l,b,v,y,d;return r=fo,(e=Uo())===u&&(e=null),e!==u&&li()!==u?(n=fo,"primary"===t.substr(fo,7).toLowerCase()?(o=t.substr(fo,7),fo+=7):(o=u,0===yo&&Co(f)),o!==u&&(a=li())!==u?("key"===t.substr(fo,3).toLowerCase()?(i=t.substr(fo,3),fo+=3):(i=u,0===yo&&Co(p)),i!==u?n=o=[o,a,i]:(fo=n,n=u)):(fo=n,n=u),n!==u&&(o=li())!==u?((a=Zo())===u&&(a=null),a!==u&&(i=li())!==u&&(s=$o())!==u&&li()!==u?((c=Jo())===u&&(c=null),c!==u?(b=n,v=a,y=s,d=c,r=e={constraint:(l=e)&&l.constraint,definition:y,constraint_type:`${b[0].toLowerCase()} ${b[2].toLowerCase()}`,keyword:l&&l.keyword,index_type:v,resource:"constraint",index_options:d}):(fo=r,r=u)):(fo=r,r=u)):(fo=r,r=u)):(fo=r,r=u),r}())===u&&(r=function(){var r,e,n,o,a,i,s,c,f,p,b,v,y,d,h;return r=fo,(e=Uo())===u&&(e=null),e!==u&&li()!==u&&(n=function(){var r,e,n,o;return r=fo,"unique"===t.substr(fo,6).toLowerCase()?(e=t.substr(fo,6),fo+=6):(e=u,0===yo&&Co(l)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e="UNIQUE":(fo=r,r=u)):(fo=r,r=u),r}())!==u&&li()!==u?((o=za())===u&&(o=ti()),o===u&&(o=null),o!==u&&li()!==u?((a=_u())===u&&(a=null),a!==u&&li()!==u?((i=Zo())===u&&(i=null),i!==u&&li()!==u&&(s=$o())!==u&&li()!==u?((c=Jo())===u&&(c=null),c!==u?(p=n,b=o,v=a,y=i,d=s,h=c,r=e={constraint:(f=e)&&f.constraint,definition:d,constraint_type:b&&`${p.toLowerCase()} ${b.toLowerCase()}`||p.toLowerCase(),keyword:f&&f.keyword,index_type:y,index:v,resource:"constraint",index_options:h}):(fo=r,r=u)):(fo=r,r=u)):(fo=r,r=u)):(fo=r,r=u)):(fo=r,r=u),r}())===u&&(r=function(){var r,e,n,o,a,i,s,c,l,f,p;return r=fo,(e=Uo())===u&&(e=null),e!==u&&li()!==u?("foreign key"===t.substr(fo,11).toLowerCase()?(n=t.substr(fo,11),fo+=11):(n=u,0===yo&&Co(R)),n!==u&&li()!==u?((o=_u())===u&&(o=null),o!==u&&li()!==u&&(a=$o())!==u&&li()!==u?((i=xo())===u&&(i=null),i!==u?(c=n,l=o,f=a,p=i,r=e={constraint:(s=e)&&s.constraint,definition:f,constraint_type:c,keyword:s&&s.keyword,index:l,resource:"constraint",reference_definition:p}):(fo=r,r=u)):(fo=r,r=u)):(fo=r,r=u)):(fo=r,r=u),r}())===u&&(r=Ro()),r}())===u&&(r=jo())===u&&(r=No())===u&&(r=_o()),r}function jo(){var r,e,n,o,a,i,s,L,C,g,O,E,A,S,j,T,I,N,_,U,R,x,k,M,q;return r=fo,(e=Tu())!==u&&li()!==u&&(n=Ti())!==u&&li()!==u?((o=function(){var r;return fo,(r=function(){var r,e,n,o;return r=fo,"not null"===t.substr(fo,8).toLowerCase()?(e=t.substr(fo,8),fo+=8):(e=u,0===yo&&Co(jr)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e=[e,n]:(fo=r,r=u)):(fo=r,r=u),r}())!==u&&(r={type:"not null",value:"not null"}),r}())===u&&(o=Vu()),o===u&&(o=null),o!==u&&li()!==u?((a=function(){var t,r;return t=fo,Ku()!==u&&li()!==u?((r=Du())===u&&(r=mu()),r!==u?t={type:"default",value:r}:(fo=t,t=u)):(fo=t,t=u),t}())===u&&(a=null),a!==u&&li()!==u?("auto_increment"===t.substr(fo,14).toLowerCase()?(i=t.substr(fo,14),fo+=14):(i=u,0===yo&&Co(c)),i===u&&(i=null),i!==u&&li()!==u?(s=fo,"unique"===t.substr(fo,6).toLowerCase()?(L=t.substr(fo,6),fo+=6):(L=u,0===yo&&Co(l)),L===u&&("primary"===t.substr(fo,7).toLowerCase()?(L=t.substr(fo,7),fo+=7):(L=u,0===yo&&Co(f))),L===u&&(L=null),L!==u&&(C=li())!==u?("key"===t.substr(fo,3).toLowerCase()?(g=t.substr(fo,3),fo+=3):(g=u,0===yo&&Co(p)),g!==u?s=L=[L,C,g]:(fo=s,s=u)):(fo=s,s=u),s===u&&(s=null),s!==u&&(L=li())!==u?((C=bi())===u&&(C=null),C!==u&&(g=li())!==u?((O=To())===u&&(O=null),O!==u&&li()!==u?((E=function(){var r,e,n;return r=fo,"column_format"===t.substr(fo,13).toLowerCase()?(e=t.substr(fo,13),fo+=13):(e=u,0===yo&&Co(b)),e!==u&&li()!==u?("fixed"===t.substr(fo,5).toLowerCase()?(n=t.substr(fo,5),fo+=5):(n=u,0===yo&&Co(v)),n===u&&("dynamic"===t.substr(fo,7).toLowerCase()?(n=t.substr(fo,7),fo+=7):(n=u,0===yo&&Co(y)),n===u&&("default"===t.substr(fo,7).toLowerCase()?(n=t.substr(fo,7),fo+=7):(n=u,0===yo&&Co(d)))),n!==u?r=e={type:"column_format",value:n.toLowerCase()}:(fo=r,r=u)):(fo=r,r=u),r}())===u&&(E=null),E!==u&&li()!==u?((A=function(){var r,e,n;return r=fo,"storage"===t.substr(fo,7).toLowerCase()?(e=t.substr(fo,7),fo+=7):(e=u,0===yo&&Co(h)),e!==u&&li()!==u?("disk"===t.substr(fo,4).toLowerCase()?(n=t.substr(fo,4),fo+=4):(n=u,0===yo&&Co(m)),n===u&&("memory"===t.substr(fo,6).toLowerCase()?(n=t.substr(fo,6),fo+=6):(n=u,0===yo&&Co(w))),n!==u?r=e={type:"storage",value:n.toLowerCase()}:(fo=r,r=u)):(fo=r,r=u),r}())===u&&(A=null),A!==u&&li()!==u?((S=xo())===u&&(S=null),S!==u?(j=e,T=n,I=o,N=a,_=i,U=s,R=C,x=O,k=E,M=A,q=S,Vi.add(`create::${j.table}::${j.column}`),I&&!I.value&&(I.value="null"),r=e={column:j,definition:T,nullable:I,default_val:N,auto_increment:_&&_.toLowerCase(),unique_or_primary:U&&`${U[0].toLowerCase()} ${U[2].toLowerCase()}`,comment:R,collate:x,column_format:k,storage:M,reference_definition:q,resource:"column"}):(fo=r,r=u)):(fo=r,r=u)):(fo=r,r=u)):(fo=r,r=u)):(fo=r,r=u)):(fo=r,r=u)):(fo=r,r=u)):(fo=r,r=u)):(fo=r,r=u)):(fo=r,r=u),r}function To(){var r,e;return r=fo,function(){var r,e,n,o;return r=fo,"collate"===t.substr(fo,7).toLowerCase()?(e=t.substr(fo,7),fo+=7):(e=u,0===yo&&Co(X)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e="COLLATE":(fo=r,r=u)):(fo=r,r=u),r}()!==u&&li()!==u&&(e=Ru())!==u?r={type:"collate",value:e}:(fo=r,r=u),r}function Io(){var r;return(r=function(){var t,r,e;return t=fo,Xa()!==u&&li()!==u&&(r=Ro())!==u?(e=r,t={action:"add",...e,type:"alter"}):(fo=t,t=u),t}())===u&&(r=function(){var r,e,n;return r=fo,ta()!==u&&li()!==u?("check"===t.substr(fo,5).toLowerCase()?(e=t.substr(fo,5),fo+=5):(e=u,0===yo&&Co(T)),e!==u&&li()!==u&&(n=Ru())!==u?r={action:"drop",constraint:n,keyword:e.toLowerCase(),resource:"constraint",type:"alter"}:(fo=r,r=u)):(fo=r,r=u),r}())===u&&(r=function(){var r,e,n,o;return r=fo,ma()!==u&&li()!==u?("check"===t.substr(fo,5).toLowerCase()?(e=t.substr(fo,5),fo+=5):(e=u,0===yo&&Co(T)),e!==u&&li()!==u?("check"===t.substr(fo,5).toLowerCase()?(n=t.substr(fo,5),fo+=5):(n=u,0===yo&&Co(T)),n!==u&&li()!==u&&ei()!==u&&li()!==u&&(o=Ru())!==u?r={action:"with",constraint:o,keyword:"check check",resource:"constraint",type:"alter"}:(fo=r,r=u)):(fo=r,r=u)):(fo=r,r=u),r}())===u&&(r=function(){var r,e,n;return r=fo,"nocheck"===t.substr(fo,7).toLowerCase()?(e=t.substr(fo,7),fo+=7):(e=u,0===yo&&Co(I)),e!==u&&li()!==u&&ei()!==u&&li()!==u&&(n=Ru())!==u?r=e={action:"nocheck",constraint:n,resource:"constraint",type:"alter"}:(fo=r,r=u),r}())===u&&(r=function(){var t,r,e,n,o;return t=fo,Xa()!==u&&li()!==u?((r=Ka())===u&&(r=null),r!==u&&li()!==u&&(e=jo())!==u?(n=r,o=e,t={action:"add",...o,keyword:n,resource:"column",type:"alter"}):(fo=t,t=u)):(fo=t,t=u),t}())===u&&(r=function(){var t,r,e;return t=fo,ta()!==u&&li()!==u?((r=Ka())===u&&(r=null),r!==u&&li()!==u&&(e=Tu())!==u?t={action:"drop",column:e,keyword:r,resource:"column",type:"alter"}:(fo=t,t=u)):(fo=t,t=u),t}())===u&&(r=function(){var t,r,e;return t=fo,Xa()!==u&&li()!==u&&(r=No())!==u?(e=r,t={action:"add",type:"alter",...e}):(fo=t,t=u),t}())===u&&(r=function(){var t,r,e;return t=fo,Xa()!==u&&li()!==u&&(r=_o())!==u?(e=r,t={action:"add",type:"alter",...e}):(fo=t,t=u),t}())===u&&(r=function(){var t,r,e,n,o;return t=fo,aa()!==u&&li()!==u?((r=zu())===u&&(r=la()),r===u&&(r=null),r!==u&&li()!==u&&(e=Iu())!==u?(o=e,t={action:"rename",type:"alter",resource:"table",keyword:(n=r)&&n[0].toLowerCase(),table:o}):(fo=t,t=u)):(fo=t,t=u),t}())===u&&(r=function(){var r,e,n;return r=fo,"algorithm"===t.substr(fo,9).toLowerCase()?(e=t.substr(fo,9),fo+=9):(e=u,0===yo&&Co(L)),e!==u&&li()!==u&&Ja()!==u&&li()!==u?("default"===t.substr(fo,7).toLowerCase()?(n=t.substr(fo,7),fo+=7):(n=u,0===yo&&Co(d)),n===u&&("instant"===t.substr(fo,7).toLowerCase()?(n=t.substr(fo,7),fo+=7):(n=u,0===yo&&Co(C)),n===u&&("inplace"===t.substr(fo,7).toLowerCase()?(n=t.substr(fo,7),fo+=7):(n=u,0===yo&&Co(g)),n===u&&("copy"===t.substr(fo,4).toLowerCase()?(n=t.substr(fo,4),fo+=4):(n=u,0===yo&&Co(O))))),n!==u?r=e={type:"alter",keyword:"algorithm",resource:"algorithm",algorithm:n}:(fo=r,r=u)):(fo=r,r=u),r}())===u&&(r=function(){var r,e,n;return r=fo,"lock"===t.substr(fo,4).toLowerCase()?(e=t.substr(fo,4),fo+=4):(e=u,0===yo&&Co(E)),e!==u&&li()!==u&&Ja()!==u&&li()!==u?("default"===t.substr(fo,7).toLowerCase()?(n=t.substr(fo,7),fo+=7):(n=u,0===yo&&Co(d)),n===u&&("none"===t.substr(fo,4).toLowerCase()?(n=t.substr(fo,4),fo+=4):(n=u,0===yo&&Co(A)),n===u&&("shared"===t.substr(fo,6).toLowerCase()?(n=t.substr(fo,6),fo+=6):(n=u,0===yo&&Co(S)),n===u&&("exclusive"===t.substr(fo,9).toLowerCase()?(n=t.substr(fo,9),fo+=9):(n=u,0===yo&&Co(j))))),n!==u?r=e={type:"alter",keyword:"lock",resource:"lock",lock:n}:(fo=r,r=u)):(fo=r,r=u),r}()),r}function No(){var t,r,e,n,o,a,i,s;return t=fo,(r=za())===u&&(r=ti()),r!==u&&li()!==u?((e=_u())===u&&(e=null),e!==u&&li()!==u?((n=Zo())===u&&(n=null),n!==u&&li()!==u&&(o=$o())!==u&&li()!==u?((a=Jo())===u&&(a=null),a!==u&&li()!==u?(i=n,s=a,t=r={index:e,definition:o,keyword:r.toLowerCase(),index_type:i,resource:"index",index_options:s}):(fo=t,t=u)):(fo=t,t=u)):(fo=t,t=u)):(fo=t,t=u),t}function _o(){var r,e,n,o,a,i,s,c,l;return r=fo,(e=function(){var r,e,n,o;return r=fo,"fulltext"===t.substr(fo,8).toLowerCase()?(e=t.substr(fo,8),fo+=8):(e=u,0===yo&&Co(Pn)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e="FULLTEXT":(fo=r,r=u)):(fo=r,r=u),r}())===u&&(e=function(){var r,e,n,o;return r=fo,"spatial"===t.substr(fo,7).toLowerCase()?(e=t.substr(fo,7),fo+=7):(e=u,0===yo&&Co(Dn)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e="SPATIAL":(fo=r,r=u)):(fo=r,r=u),r}()),e!==u&&li()!==u?((n=za())===u&&(n=ti()),n===u&&(n=null),n!==u&&li()!==u?((o=_u())===u&&(o=null),o!==u&&li()!==u&&(a=$o())!==u&&li()!==u?((i=Jo())===u&&(i=null),i!==u&&li()!==u?(s=e,l=i,r=e={index:o,definition:a,keyword:(c=n)&&`${s.toLowerCase()} ${c.toLowerCase()}`||s.toLowerCase(),index_options:l,resource:"index"}):(fo=r,r=u)):(fo=r,r=u)):(fo=r,r=u)):(fo=r,r=u),r}function Uo(){var t,r,e,n;return t=fo,(r=ei())!==u&&li()!==u?((e=Iu())===u&&(e=null),e!==u?(n=e,t=r={keyword:r.toLowerCase(),constraint:n}):(fo=t,t=u)):(fo=t,t=u),t}function Ro(){var r,e,n,o,a,i,s,c,l,f,p,b,v;return r=fo,(e=Uo())===u&&(e=null),e!==u&&li()!==u?("check"===t.substr(fo,5).toLowerCase()?(n=t.substr(fo,5),fo+=5):(n=u,0===yo&&Co(T)),n!==u&&li()!==u?(o=fo,"not"===t.substr(fo,3).toLowerCase()?(a=t.substr(fo,3),fo+=3):(a=u,0===yo&&Co(N)),a!==u&&(i=li())!==u?("for"===t.substr(fo,3).toLowerCase()?(s=t.substr(fo,3),fo+=3):(s=u,0===yo&&Co(_)),s!==u&&(c=li())!==u?("replication"===t.substr(fo,11).toLowerCase()?(l=t.substr(fo,11),fo+=11):(l=u,0===yo&&Co(U)),l!==u&&(f=li())!==u?o=a=[a,i,s,c,l,f]:(fo=o,o=u)):(fo=o,o=u)):(fo=o,o=u),o===u&&(o=null),o!==u&&(a=ai())!==u&&(i=li())!==u&&(s=mu())!==u&&(c=li())!==u&&(l=ii())!==u?(p=e,b=o,v=s,r=e={constraint_type:n.toLowerCase(),keyword:p&&p.keyword,constraint:p&&p.constraint,index_type:b&&{keyword:"not for replication"},definition:[v],resource:"constraint"}):(fo=r,r=u)):(fo=r,r=u)):(fo=r,r=u),r}function xo(){var r,e,n,o,a,i,s,c,l,f;return r=fo,(e=function(){var r,e,n,o;return r=fo,"references"===t.substr(fo,10).toLowerCase()?(e=t.substr(fo,10),fo+=10):(e=u,0===yo&&Co(Bn)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e="REFERENCES":(fo=r,r=u)):(fo=r,r=u),r}())!==u&&li()!==u&&(n=Ko())!==u&&li()!==u&&(o=$o())!==u&&li()!==u?("match full"===t.substr(fo,10).toLowerCase()?(a=t.substr(fo,10),fo+=10):(a=u,0===yo&&Co(x)),a===u&&("match partial"===t.substr(fo,13).toLowerCase()?(a=t.substr(fo,13),fo+=13):(a=u,0===yo&&Co(k)),a===u&&("match simple"===t.substr(fo,12).toLowerCase()?(a=t.substr(fo,12),fo+=12):(a=u,0===yo&&Co(M)))),a===u&&(a=null),a!==u&&li()!==u?((i=ko())===u&&(i=null),i!==u&&li()!==u?((s=ko())===u&&(s=null),s!==u?(c=a,l=i,f=s,r=e={definition:o,table:n,keyword:e.toLowerCase(),match:c&&c.toLowerCase(),on_delete:l,on_update:f}):(fo=r,r=u)):(fo=r,r=u)):(fo=r,r=u)):(fo=r,r=u),r}function ko(){var r,e,n,o;return r=fo,"on delete"===t.substr(fo,9).toLowerCase()?(e=t.substr(fo,9),fo+=9):(e=u,0===yo&&Co(q)),e===u&&("on update"===t.substr(fo,9).toLowerCase()?(e=t.substr(fo,9),fo+=9):(e=u,0===yo&&Co(P))),e!==u&&li()!==u&&(n=function(){var r;return fo,"restrict"===t.substr(fo,8).toLowerCase()?(r=t.substr(fo,8),fo+=8):(r=u,0===yo&&Co(D)),r===u&&("cascade"===t.substr(fo,7).toLowerCase()?(r=t.substr(fo,7),fo+=7):(r=u,0===yo&&Co(V)),r===u&&("set null"===t.substr(fo,8).toLowerCase()?(r=t.substr(fo,8),fo+=8):(r=u,0===yo&&Co($)),r===u&&("no action"===t.substr(fo,9).toLowerCase()?(r=t.substr(fo,9),fo+=9):(r=u,0===yo&&Co(B)),r===u&&("set default"===t.substr(fo,11).toLowerCase()?(r=t.substr(fo,11),fo+=11):(r=u,0===yo&&Co(F)))))),r!==u&&(r=r.toLowerCase()),r}())!==u?(o=n,r=e={type:e.toLowerCase(),value:o}):(fo=r,r=u),r}function Mo(){var r,e,n,o,a,i,s,l,f;return r=fo,"auto_increment"===t.substr(fo,14).toLowerCase()?(e=t.substr(fo,14),fo+=14):(e=u,0===yo&&Co(c)),e===u&&("avg_row_length"===t.substr(fo,14).toLowerCase()?(e=t.substr(fo,14),fo+=14):(e=u,0===yo&&Co(H)),e===u&&("key_block_size"===t.substr(fo,14).toLowerCase()?(e=t.substr(fo,14),fo+=14):(e=u,0===yo&&Co(Q)),e===u&&("max_rows"===t.substr(fo,8).toLowerCase()?(e=t.substr(fo,8),fo+=8):(e=u,0===yo&&Co(G)),e===u&&("min_rows"===t.substr(fo,8).toLowerCase()?(e=t.substr(fo,8),fo+=8):(e=u,0===yo&&Co(W)),e===u&&("stats_sample_pages"===t.substr(fo,18).toLowerCase()?(e=t.substr(fo,18),fo+=18):(e=u,0===yo&&Co(Y))))))),e!==u&&li()!==u?((n=Ja())===u&&(n=null),n!==u&&li()!==u&&(o=Qu())!==u?(l=n,f=o,r=e={keyword:e.toLowerCase(),symbol:l,value:f.value}):(fo=r,r=u)):(fo=r,r=u),r===u&&(r=fo,(e=Ku())===u&&(e=null),e!==u&&li()!==u?("character set"===t.substr(fo,13).toLowerCase()?(n=t.substr(fo,13),fo+=13):(n=u,0===yo&&Co(Z)),n===u&&("charset"===t.substr(fo,7).toLowerCase()?(n=t.substr(fo,7),fo+=7):(n=u,0===yo&&Co(J)),n===u&&("collate"===t.substr(fo,7).toLowerCase()?(n=t.substr(fo,7),fo+=7):(n=u,0===yo&&Co(X)))),n!==u&&li()!==u?((o=Ja())===u&&(o=null),o!==u&&(a=li())!==u&&(i=Ru())!==u?r=e=function(t,r,e,n){return{keyword:t&&`${t[0].toLowerCase()} ${r.toLowerCase()}`||r.toLowerCase(),symbol:e,value:n}}(e,n,o,i):(fo=r,r=u)):(fo=r,r=u)):(fo=r,r=u),r===u&&(r=fo,(e=ri())===u&&("connection"===t.substr(fo,10).toLowerCase()?(e=t.substr(fo,10),fo+=10):(e=u,0===yo&&Co(K))),e!==u&&li()!==u?((n=Ja())===u&&(n=null),n!==u&&li()!==u&&(o=$u())!==u?r=e=function(t,r,e){return{keyword:t.toLowerCase(),symbol:r,value:`'${e.value}'`}}(e,n,o):(fo=r,r=u)):(fo=r,r=u),r===u&&(r=fo,"compression"===t.substr(fo,11).toLowerCase()?(e=t.substr(fo,11),fo+=11):(e=u,0===yo&&Co(z)),e!==u&&li()!==u?((n=Ja())===u&&(n=null),n!==u&&li()!==u?(o=fo,39===t.charCodeAt(fo)?(a="'",fo++):(a=u,0===yo&&Co(tt)),a!==u?("zlib"===t.substr(fo,4).toLowerCase()?(i=t.substr(fo,4),fo+=4):(i=u,0===yo&&Co(rt)),i===u&&("lz4"===t.substr(fo,3).toLowerCase()?(i=t.substr(fo,3),fo+=3):(i=u,0===yo&&Co(et)),i===u&&("none"===t.substr(fo,4).toLowerCase()?(i=t.substr(fo,4),fo+=4):(i=u,0===yo&&Co(A)))),i!==u?(39===t.charCodeAt(fo)?(s="'",fo++):(s=u,0===yo&&Co(tt)),s!==u?o=a=[a,i,s]:(fo=o,o=u)):(fo=o,o=u)):(fo=o,o=u),o!==u?r=e=function(t,r,e){return{keyword:t.toLowerCase(),symbol:r,value:e.join("").toUpperCase()}}(e,n,o):(fo=r,r=u)):(fo=r,r=u)):(fo=r,r=u),r===u&&(r=fo,"engine"===t.substr(fo,6).toLowerCase()?(e=t.substr(fo,6),fo+=6):(e=u,0===yo&&Co(nt)),e!==u&&li()!==u?((n=Ja())===u&&(n=null),n!==u&&li()!==u&&(o=Ru())!==u?r=e=function(t,r,e){return{keyword:t.toLowerCase(),symbol:r,value:e.toUpperCase()}}(e,n,o):(fo=r,r=u)):(fo=r,r=u))))),r}function qo(){var r,e,n,o,a;return r=fo,(e=tu())!==u&&li()!==u&&(n=function(){var r,e,n;return r=fo,"read"===t.substr(fo,4).toLowerCase()?(e=t.substr(fo,4),fo+=4):(e=u,0===yo&&Co(ot)),e!==u&&li()!==u?("local"===t.substr(fo,5).toLowerCase()?(n=t.substr(fo,5),fo+=5):(n=u,0===yo&&Co(ut)),n===u&&(n=null),n!==u?r=e={type:"read",suffix:n&&"local"}:(fo=r,r=u)):(fo=r,r=u),r===u&&(r=fo,"low_priority"===t.substr(fo,12).toLowerCase()?(e=t.substr(fo,12),fo+=12):(e=u,0===yo&&Co(at)),e===u&&(e=null),e!==u&&li()!==u?("write"===t.substr(fo,5).toLowerCase()?(n=t.substr(fo,5),fo+=5):(n=u,0===yo&&Co(it)),n!==u?r=e={type:"write",prefix:e&&"low_priority"}:(fo=r,r=u)):(fo=r,r=u)),r}())!==u?(o=e,a=n,Di.add(`lock::${o.db}::${o.table}`),r=e={table:o,lock_type:a}):(fo=r,r=u),r}function Po(){var r,e,n,o,a,i,s;return(r=Bo())===u&&(r=fo,e=fo,40===t.charCodeAt(fo)?(n="(",fo++):(n=u,0===yo&&Co(st)),n!==u&&(o=li())!==u&&(a=Po())!==u&&(i=li())!==u?(41===t.charCodeAt(fo)?(s=")",fo++):(s=u,0===yo&&Co(ct)),s!==u?e=n=[n,o,a,i,s]:(fo=e,e=u)):(fo=e,e=u),e!==u&&(e={...e[2],parentheses_symbol:!0}),r=e),r}function Do(){var r,e,n,o,a,i,c,l,f;if(r=fo,ma()!==u)if(li()!==u)if((e=Vo())!==u){for(n=[],o=fo,(a=li())!==u&&(i=oi())!==u&&(c=li())!==u&&(l=Vo())!==u?o=a=[a,i,c,l]:(fo=o,o=u);o!==u;)n.push(o),o=fo,(a=li())!==u&&(i=oi())!==u&&(c=li())!==u&&(l=Vo())!==u?o=a=[a,i,c,l]:(fo=o,o=u);n!==u?r=s(e,n):(fo=r,r=u)}else fo=r,r=u;else fo=r,r=u;else fo=r,r=u;return r===u&&(r=fo,li()!==u&&ma()!==u&&(e=li())!==u&&(n=function(){var r,e,n,o;return r=fo,"RECURSIVE"===t.substr(fo,9)?(e="RECURSIVE",fo+=9):(e=u,0===yo&&Co($r)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e=[e,n]:(fo=r,r=u)):(fo=r,r=u),r}())!==u&&(o=li())!==u&&(a=Vo())!==u?((f=a).recursive=!0,r=[f]):(fo=r,r=u)),r}function Vo(){var t,r,e,n;return t=fo,(r=Ru())!==u&&li()!==u?((e=$o())===u&&(e=null),e!==u&&li()!==u&&la()!==u&&li()!==u&&ai()!==u&&li()!==u&&(n=Ao())!==u&&li()!==u&&ii()!==u?t=r={name:r,stmt:n,columns:e}:(fo=t,t=u)):(fo=t,t=u),t}function $o(){var t,r,e,n,o,a,i,c;if(t=fo,ai()!==u)if(li()!==u)if((r=_u())!==u){for(e=[],n=fo,(o=li())!==u&&(a=oi())!==u&&(i=li())!==u&&(c=_u())!==u?n=o=[o,a,i,c]:(fo=n,n=u);n!==u;)e.push(n),n=fo,(o=li())!==u&&(a=oi())!==u&&(i=li())!==u&&(c=_u())!==u?n=o=[o,a,i,c]:(fo=n,n=u);e!==u&&(n=li())!==u&&(o=ii())!==u?t=s(r,e):(fo=t,t=u)}else fo=t,t=u;else fo=t,t=u;else fo=t,t=u;return t}function Bo(){var r,e,n,o,a,i,s,c,l,f,p,b,v,y,d,h,m,w,L,C,g,O,E,A,S,j;return r=fo,li()!==u?((e=Do())===u&&(e=null),e!==u&&li()!==u&&function(){var r,e,n,o;return r=fo,"select"===t.substr(fo,6).toLowerCase()?(e=t.substr(fo,6),fo+=6):(e=u,0===yo&&Co(xr)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e=[e,n]:(fo=r,r=u)):(fo=r,r=u),r}()!==u&&li()!==u?((n=function(){var t,r,e,n,o,a;if(t=fo,(r=Fo())!==u){for(e=[],n=fo,(o=li())!==u&&(a=Fo())!==u?n=o=[o,a]:(fo=n,n=u);n!==u;)e.push(n),n=fo,(o=li())!==u&&(a=Fo())!==u?n=o=[o,a]:(fo=n,n=u);e!==u?(r=function(t,r){const e=[t];for(let t=0,n=r.length;t<n;++t)e.push(r[t][1]);return e}(r,e),t=r):(fo=t,t=u)}else fo=t,t=u;return t}())===u&&(n=null),n!==u&&li()!==u?((o=Ca())===u&&(o=null),o!==u&&li()!==u&&(a=Ho())!==u&&li()!==u?((i=Wo())===u&&(i=null),i!==u&&li()!==u?((s=ou())===u&&(s=null),s!==u&&li()!==u?((c=function(){var r,e;return r=fo,function(){var r,e,n,o;return r=fo,"group"===t.substr(fo,5).toLowerCase()?(e=t.substr(fo,5),fo+=5):(e=u,0===yo&&Co(fe)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e=[e,n]:(fo=r,r=u)):(fo=r,r=u),r}()!==u&&li()!==u&&wa()!==u&&li()!==u&&(e=du())!==u?r=e.value:(fo=r,r=u),r}())===u&&(c=null),c!==u&&li()!==u?((l=function(){var r,e;return r=fo,function(){var r,e,n,o;return r=fo,"having"===t.substr(fo,6).toLowerCase()?(e=t.substr(fo,6),fo+=6):(e=u,0===yo&&Co(ve)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e=[e,n]:(fo=r,r=u)):(fo=r,r=u),r}()!==u&&li()!==u&&(e=mu())!==u?r=e:(fo=r,r=u),r}())===u&&(l=null),l!==u&&li()!==u?((f=uu())===u&&(f=null),f!==u&&li()!==u?((p=su())===u&&(p=null),p!==u?(b=fo,"for"===t.substr(fo,3).toLowerCase()?(v=t.substr(fo,3),fo+=3):(v=u,0===yo&&Co(_)),v!==u&&(y=li())!==u&&(d=ra())!==u?b=v=[v,y,d]:(fo=b,b=u),b===u&&(b=null),b!==u?(h=e,m=n,w=o,L=a,g=s,O=c,E=l,A=f,S=p,j=b,(C=i)&&C.forEach(t=>t.table&&Di.add(`select::${t.db}::${t.table}`)),r={with:h,type:"select",options:m,distinct:w,columns:L,from:C,where:g,groupby:O,having:E,orderby:A,limit:S,for_update:j&&`${j[0]} ${j[2][0]}`}):(fo=r,r=u)):(fo=r,r=u)):(fo=r,r=u)):(fo=r,r=u)):(fo=r,r=u)):(fo=r,r=u)):(fo=r,r=u)):(fo=r,r=u)):(fo=r,r=u)):(fo=r,r=u)):(fo=r,r=u),r}function Fo(){var r;return fo,(r=function(){var r;return"sql_calc_found_rows"===t.substr(fo,19).toLowerCase()?(r=t.substr(fo,19),fo+=19):(r=u,0===yo&&Co(Fn)),r}())===u&&((r=function(){var r;return"sql_cache"===t.substr(fo,9).toLowerCase()?(r=t.substr(fo,9),fo+=9):(r=u,0===yo&&Co(Hn)),r}())===u&&(r=function(){var r;return"sql_no_cache"===t.substr(fo,12).toLowerCase()?(r=t.substr(fo,12),fo+=12):(r=u,0===yo&&Co(Qn)),r}()),r===u&&(r=function(){var r;return"sql_big_result"===t.substr(fo,14).toLowerCase()?(r=t.substr(fo,14),fo+=14):(r=u,0===yo&&Co(Wn)),r}())===u&&(r=function(){var r;return"sql_small_result"===t.substr(fo,16).toLowerCase()?(r=t.substr(fo,16),fo+=16):(r=u,0===yo&&Co(Gn)),r}())===u&&(r=function(){var r;return"sql_buffer_result"===t.substr(fo,17).toLowerCase()?(r=t.substr(fo,17),fo+=17):(r=u,0===yo&&Co(Yn)),r}())),r!==u&&(r=r),r}function Ho(){var t,r,e,n,o,a,i,c,l,f;if(t=fo,(r=La())===u&&(r=fo,(e=ui())!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e=[e,n]:(fo=r,r=u)):(fo=r,r=u),r===u&&(r=ui())),r!==u){for(e=[],n=fo,(o=li())!==u&&(a=oi())!==u&&(i=li())!==u&&(c=Qo())!==u?n=o=[o,a,i,c]:(fo=n,n=u);n!==u;)e.push(n),n=fo,(o=li())!==u&&(a=oi())!==u&&(i=li())!==u&&(c=Qo())!==u?n=o=[o,a,i,c]:(fo=n,n=u);e!==u?(l=r,f=e,Vi.add("select::null::(.*)"),t=r=f&&f.length>0?(l[0]={expr:{type:"column_ref",table:null,column:"*"},as:null},xi(l[0],f)):l[0]):(fo=t,t=u)}else fo=t,t=u;if(t===u)if(t=fo,(r=Qo())!==u){for(e=[],n=fo,(o=li())!==u&&(a=oi())!==u&&(i=li())!==u&&(c=Qo())!==u?n=o=[o,a,i,c]:(fo=n,n=u);n!==u;)e.push(n),n=fo,(o=li())!==u&&(a=oi())!==u&&(i=li())!==u&&(c=Qo())!==u?n=o=[o,a,i,c]:(fo=n,n=u);e!==u?t=r=s(r,e):(fo=t,t=u)}else fo=t,t=u;return t}function Qo(){var t,r,e,n;return t=fo,(r=Iu())!==u&&li()!==u&&(e=ni())!==u&&li()!==u&&ui()!==u?(n=r,Vi.add(`select::${n}::(.*)`),t=r={expr:{type:"column_ref",table:n,column:"*"},as:null}):(fo=t,t=u),t===u&&(t=fo,(r=mu())!==u&&li()!==u?((e=Go())===u&&(e=null),e!==u?t=r={expr:r,as:e}:(fo=t,t=u)):(fo=t,t=u)),t}function Go(){var t,r,e;return t=fo,(r=la())!==u&&li()!==u&&(e=function(){var t,r;return t=fo,(r=Ru())!==u&&(function(t){if(!0===Ni[t.toUpperCase()])throw new Error("Error: "+JSON.stringify(t)+" is a reserved word, can not as alias clause");return!1}(r)?u:void 0)!==u?t=r=r:(fo=t,t=u),t===u&&(t=fo,(r=Nu())!==u&&(r=r),t=r),t}())!==u?t=r=e:(fo=t,t=u),t===u&&(t=fo,(r=la())===u&&(r=null),r!==u&&li()!==u&&(e=Iu())!==u?t=r=e:(fo=t,t=u)),t}function Wo(){var r,e;return r=fo,function(){var r,e,n,o;return r=fo,"from"===t.substr(fo,4).toLowerCase()?(e=t.substr(fo,4),fo+=4):(e=u,0===yo&&Co(Wr)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e=[e,n]:(fo=r,r=u)):(fo=r,r=u),r}()!==u&&li()!==u&&(e=Ko())!==u?r=e:(fo=r,r=u),r}function Yo(){var t,r,e;return t=fo,(r=eu())!==u&&li()!==u&&zu()!==u&&li()!==u&&(e=eu())!==u?t=r=[r,e]:(fo=t,t=u),t}function Zo(){var r,e;return r=fo,ha()!==u&&li()!==u?("btree"===t.substr(fo,5).toLowerCase()?(e=t.substr(fo,5),fo+=5):(e=u,0===yo&&Co(lt)),e===u&&("hash"===t.substr(fo,4).toLowerCase()?(e=t.substr(fo,4),fo+=4):(e=u,0===yo&&Co(ft))),e!==u?r={keyword:"using",type:e.toLowerCase()}:(fo=r,r=u)):(fo=r,r=u),r}function Jo(){var t,r,e,n,o,a;if(t=fo,(r=Xo())!==u){for(e=[],n=fo,(o=li())!==u&&(a=Xo())!==u?n=o=[o,a]:(fo=n,n=u);n!==u;)e.push(n),n=fo,(o=li())!==u&&(a=Xo())!==u?n=o=[o,a]:(fo=n,n=u);e!==u?t=r=function(t,r){const e=[t];for(let t=0;t<r.length;t++)e.push(r[t][1]);return e}(r,e):(fo=t,t=u)}else fo=t,t=u;return t}function Xo(){var r,e,n,o,a,i;return r=fo,(e=function(){var r,e,n,o;return r=fo,"key_block_size"===t.substr(fo,14).toLowerCase()?(e=t.substr(fo,14),fo+=14):(e=u,0===yo&&Co(Q)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e="KEY_BLOCK_SIZE":(fo=r,r=u)):(fo=r,r=u),r}())!==u&&li()!==u?((n=Ja())===u&&(n=null),n!==u&&li()!==u&&(o=Qu())!==u?(a=n,i=o,r=e={type:e.toLowerCase(),symbol:a,expr:i}):(fo=r,r=u)):(fo=r,r=u),r===u&&(r=Zo())===u&&(r=fo,"with"===t.substr(fo,4).toLowerCase()?(e=t.substr(fo,4),fo+=4):(e=u,0===yo&&Co(pt)),e!==u&&li()!==u?("parser"===t.substr(fo,6).toLowerCase()?(n=t.substr(fo,6),fo+=6):(n=u,0===yo&&Co(bt)),n!==u&&li()!==u&&(o=Ru())!==u?r=e={type:"with parser",expr:o}:(fo=r,r=u)):(fo=r,r=u),r===u&&(r=fo,"visible"===t.substr(fo,7).toLowerCase()?(e=t.substr(fo,7),fo+=7):(e=u,0===yo&&Co(vt)),e===u&&("invisible"===t.substr(fo,9).toLowerCase()?(e=t.substr(fo,9),fo+=9):(e=u,0===yo&&Co(yt))),e!==u&&(e=function(t){return{type:t.toLowerCase(),expr:t.toLowerCase()}}(e)),(r=e)===u&&(r=bi()))),r}function Ko(){var t,r,e,n,o,a;if(t=fo,(r=tu())!==u){for(e=[],n=zo();n!==u;)e.push(n),n=zo();e!==u?(o=r,(a=e).unshift(o),a.forEach(t=>{const{table:r,as:e}=t;$i[r]=r,e&&($i[e]=r)}),t=r=a):(fo=t,t=u)}else fo=t,t=u;return t}function zo(){var t,r,e;return t=fo,li()!==u&&(r=oi())!==u&&li()!==u&&(e=tu())!==u?t=e:(fo=t,t=u),t===u&&(t=fo,li()!==u&&(r=function(){var t,r,e,n,o,a,i,s,c,l,f,p,b,v,y;if(t=fo,(r=ru())!==u)if(li()!==u)if((e=tu())!==u)if(li()!==u)if((n=ha())!==u)if(li()!==u)if(ai()!==u)if(li()!==u)if((o=Ru())!==u){for(a=[],i=fo,(s=li())!==u&&(c=oi())!==u&&(l=li())!==u&&(f=Ru())!==u?i=s=[s,c,l,f]:(fo=i,i=u);i!==u;)a.push(i),i=fo,(s=li())!==u&&(c=oi())!==u&&(l=li())!==u&&(f=Ru())!==u?i=s=[s,c,l,f]:(fo=i,i=u);a!==u&&(i=li())!==u&&(s=ii())!==u?(p=r,v=o,y=a,(b=e).join=p,b.using=xi(v,y),t=r=b):(fo=t,t=u)}else fo=t,t=u;else fo=t,t=u;else fo=t,t=u;else fo=t,t=u;else fo=t,t=u;else fo=t,t=u;else fo=t,t=u;else fo=t,t=u;else fo=t,t=u;return t===u&&(t=fo,(r=ru())!==u&&li()!==u&&(e=tu())!==u&&li()!==u?((n=nu())===u&&(n=null),n!==u?t=r=function(t,r,e){return r.join=t,r.on=e,r}(r,e,n):(fo=t,t=u)):(fo=t,t=u),t===u&&(t=fo,(r=ru())!==u&&li()!==u&&(e=ai())!==u&&li()!==u&&(n=Ao())!==u&&li()!==u&&ii()!==u&&li()!==u?((o=Go())===u&&(o=null),o!==u&&(a=li())!==u?((i=nu())===u&&(i=null),i!==u?t=r=function(t,r,e,n){return r.parentheses=!0,{expr:r,as:e,join:t,on:n}}(r,n,o,i):(fo=t,t=u)):(fo=t,t=u)):(fo=t,t=u))),t}())!==u?t=r:(fo=t,t=u)),t}function tu(){var r,e,n,o,a,i;return r=fo,(e=function(){var r;return"dual"===t.substr(fo,4).toLowerCase()?(r=t.substr(fo,4),fo+=4):(r=u,0===yo&&Co(xn)),r}())!==u&&(e={type:"dual"}),(r=e)===u&&(r=fo,(e=eu())!==u&&li()!==u?((n=Go())===u&&(n=null),n!==u?(i=n,r=e="var"===(a=e).type?(a.as=i,a):{db:a.db,table:a.table,as:i}):(fo=r,r=u)):(fo=r,r=u),r===u&&(r=fo,(e=ai())!==u&&li()!==u&&(n=Ao())!==u&&li()!==u&&ii()!==u&&li()!==u?((o=Go())===u&&(o=null),o!==u?r=e=function(t,r){return t.parentheses=!0,{expr:t,as:r}}(n,o):(fo=r,r=u)):(fo=r,r=u))),r}function ru(){var r,e,n,o;return r=fo,(e=function(){var r,e,n,o;return r=fo,"left"===t.substr(fo,4).toLowerCase()?(e=t.substr(fo,4),fo+=4):(e=u,0===yo&&Co(te)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e=[e,n]:(fo=r,r=u)):(fo=r,r=u),r}())!==u&&(n=li())!==u?((o=ya())===u&&(o=null),o!==u&&li()!==u&&va()!==u?r=e="LEFT JOIN":(fo=r,r=u)):(fo=r,r=u),r===u&&(r=fo,(e=function(){var r,e,n,o;return r=fo,"right"===t.substr(fo,5).toLowerCase()?(e=t.substr(fo,5),fo+=5):(e=u,0===yo&&Co(re)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e=[e,n]:(fo=r,r=u)):(fo=r,r=u),r}())!==u&&(n=li())!==u?((o=ya())===u&&(o=null),o!==u&&li()!==u&&va()!==u?r=e="RIGHT JOIN":(fo=r,r=u)):(fo=r,r=u),r===u&&(r=fo,(e=function(){var r,e,n,o;return r=fo,"full"===t.substr(fo,4).toLowerCase()?(e=t.substr(fo,4),fo+=4):(e=u,0===yo&&Co(ee)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e=[e,n]:(fo=r,r=u)):(fo=r,r=u),r}())!==u&&(n=li())!==u?((o=ya())===u&&(o=null),o!==u&&li()!==u&&va()!==u?r=e="FULL JOIN":(fo=r,r=u)):(fo=r,r=u),r===u&&(r=fo,e=fo,(n=function(){var r,e,n,o;return r=fo,"inner"===t.substr(fo,5).toLowerCase()?(e=t.substr(fo,5),fo+=5):(e=u,0===yo&&Co(ne)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e=[e,n]:(fo=r,r=u)):(fo=r,r=u),r}())!==u&&(o=li())!==u?e=n=[n,o]:(fo=e,e=u),e===u&&(e=null),e!==u&&(n=va())!==u?r=e="INNER JOIN":(fo=r,r=u)))),r}function eu(){var t,r,e,n,o,a,i,s;return t=fo,(r=Iu())!==u?(e=fo,(n=li())!==u&&(o=ni())!==u&&(a=li())!==u&&(i=Iu())!==u?e=n=[n,o,a,i]:(fo=e,e=u),e===u&&(e=null),e!==u?t=r=function(t,r){const e={db:null,table:t};return null!==r&&(e.db=t,e.table=r[3]),e}(r,e):(fo=t,t=u)):(fo=t,t=u),t===u&&(t=fo,(r=Si())!==u&&((s=r).db=null,s.table=s.name,r=s),t=r),t}function nu(){var t,r;return t=fo,ba()!==u&&li()!==u&&(r=mu())!==u?t=r:(fo=t,t=u),t}function ou(){var r,e;return r=fo,function(){var r,e,n,o;return r=fo,"where"===t.substr(fo,5).toLowerCase()?(e=t.substr(fo,5),fo+=5):(e=u,0===yo&&Co(le)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e=[e,n]:(fo=r,r=u)):(fo=r,r=u),r}()!==u&&li()!==u&&(e=mu())!==u?r=e:(fo=r,r=u),r}function uu(){var r,e;return r=fo,function(){var r,e,n,o;return r=fo,"order"===t.substr(fo,5).toLowerCase()?(e=t.substr(fo,5),fo+=5):(e=u,0===yo&&Co(be)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e=[e,n]:(fo=r,r=u)):(fo=r,r=u),r}()!==u&&li()!==u&&wa()!==u&&li()!==u&&(e=function(){var t,r,e,n,o,a,i,c;if(t=fo,(r=au())!==u){for(e=[],n=fo,(o=li())!==u&&(a=oi())!==u&&(i=li())!==u&&(c=au())!==u?n=o=[o,a,i,c]:(fo=n,n=u);n!==u;)e.push(n),n=fo,(o=li())!==u&&(a=oi())!==u&&(i=li())!==u&&(c=au())!==u?n=o=[o,a,i,c]:(fo=n,n=u);e!==u?t=r=s(r,e):(fo=t,t=u)}else fo=t,t=u;return t}())!==u?r=e:(fo=r,r=u),r}function au(){var r,e,n;return r=fo,(e=mu())!==u&&li()!==u?((n=function(){var r,e,n,o;return r=fo,"desc"===t.substr(fo,4).toLowerCase()?(e=t.substr(fo,4),fo+=4):(e=u,0===yo&&Co(me)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e="DESC":(fo=r,r=u)):(fo=r,r=u),r}())===u&&(n=function(){var r,e,n,o;return r=fo,"asc"===t.substr(fo,3).toLowerCase()?(e=t.substr(fo,3),fo+=3):(e=u,0===yo&&Co(he)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e="ASC":(fo=r,r=u)):(fo=r,r=u),r}()),n===u&&(n=null),n!==u?r=e=function(t,r){const e={expr:t,type:"ASC"};return"DESC"===r&&(e.type="DESC"),e}(e,n):(fo=r,r=u)):(fo=r,r=u),r}function iu(){var t;return(t=Qu())===u&&(t=qu()),t}function su(){var r,e,n,o,a,i;return r=fo,function(){var r,e,n,o;return r=fo,"limit"===t.substr(fo,5).toLowerCase()?(e=t.substr(fo,5),fo+=5):(e=u,0===yo&&Co(ye)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e=[e,n]:(fo=r,r=u)):(fo=r,r=u),r}()!==u&&li()!==u&&(e=iu())!==u&&li()!==u?(n=fo,(o=oi())===u&&(o=function(){var r,e,n,o;return r=fo,"offset"===t.substr(fo,6).toLowerCase()?(e=t.substr(fo,6),fo+=6):(e=u,0===yo&&Co(de)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e="OFFSET":(fo=r,r=u)):(fo=r,r=u),r}()),o!==u&&(a=li())!==u&&(i=iu())!==u?n=o=[o,a,i]:(fo=n,n=u),n===u&&(n=null),n!==u?r=function(t,r){const e=[t];return r&&e.push(r[2]),{seperator:r&&r[0]&&r[0].toLowerCase()||"",value:e}}(e,n):(fo=r,r=u)):(fo=r,r=u),r}function cu(){var t,r,e,n,o,a,i,c;if(t=fo,(r=lu())!==u){for(e=[],n=fo,(o=li())!==u&&(a=oi())!==u&&(i=li())!==u&&(c=lu())!==u?n=o=[o,a,i,c]:(fo=n,n=u);n!==u;)e.push(n),n=fo,(o=li())!==u&&(a=oi())!==u&&(i=li())!==u&&(c=lu())!==u?n=o=[o,a,i,c]:(fo=n,n=u);e!==u?t=r=s(r,e):(fo=t,t=u)}else fo=t,t=u;return t}function lu(){var r,e,n,o,a,i,s,c;return r=fo,e=fo,(n=Iu())!==u&&(o=li())!==u&&(a=ni())!==u?e=n=[n,o,a]:(fo=e,e=u),e===u&&(e=null),e!==u&&(n=li())!==u&&(o=_u())!==u&&(a=li())!==u?(61===t.charCodeAt(fo)?(i="=",fo++):(i=u,0===yo&&Co(dt)),i!==u&&li()!==u&&(s=Ou())!==u?r=e={column:o,value:s,table:(c=e)&&c[0]}:(fo=r,r=u)):(fo=r,r=u),r}function fu(){var r;return(r=function(){var r,e;return r=fo,function(){var r,e,n,o;return r=fo,"values"===t.substr(fo,6).toLowerCase()?(e=t.substr(fo,6),fo+=6):(e=u,0===yo&&Co(se)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e=[e,n]:(fo=r,r=u)):(fo=r,r=u),r}()!==u&&li()!==u&&(e=function(){var t,r,e,n,o,a,i,c;if(t=fo,(r=yu())!==u){for(e=[],n=fo,(o=li())!==u&&(a=oi())!==u&&(i=li())!==u&&(c=yu())!==u?n=o=[o,a,i,c]:(fo=n,n=u);n!==u;)e.push(n),n=fo,(o=li())!==u&&(a=oi())!==u&&(i=li())!==u&&(c=yu())!==u?n=o=[o,a,i,c]:(fo=n,n=u);e!==u?t=r=s(r,e):(fo=t,t=u)}else fo=t,t=u;return t}())!==u?r=e:(fo=r,r=u),r}())===u&&(r=Bo()),r}function pu(){var t,r,e,n,o,a,i,s,c;if(t=fo,ia()!==u)if(li()!==u)if((r=ai())!==u)if(li()!==u)if((e=Ru())!==u){for(n=[],o=fo,(a=li())!==u&&(i=oi())!==u&&(s=li())!==u&&(c=Ru())!==u?o=a=[a,i,s,c]:(fo=o,o=u);o!==u;)n.push(o),o=fo,(a=li())!==u&&(i=oi())!==u&&(s=li())!==u&&(c=Ru())!==u?o=a=[a,i,s,c]:(fo=o,o=u);n!==u&&(o=li())!==u&&(a=ii())!==u?t=xi(e,n):(fo=t,t=u)}else fo=t,t=u;else fo=t,t=u;else fo=t,t=u;else fo=t,t=u;else fo=t,t=u;return t===u&&(t=fo,ia()!==u&&li()!==u&&(r=yu())!==u?t=r:(fo=t,t=u)),t}function bu(){var r,e,n;return r=fo,ba()!==u&&li()!==u?("duplicate"===t.substr(fo,9).toLowerCase()?(e=t.substr(fo,9),fo+=9):(e=u,0===yo&&Co(ht)),e!==u&&li()!==u&&ti()!==u&&li()!==u&&ra()!==u&&li()!==u&&(n=cu())!==u?r={keyword:"on duplicate key update",set:n}:(fo=r,r=u)):(fo=r,r=u),r}function vu(){var r,e;return r=fo,(e=function(){var r,e,n,o;return r=fo,"insert"===t.substr(fo,6).toLowerCase()?(e=t.substr(fo,6),fo+=6):(e=u,0===yo&&Co(Vr)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e=[e,n]:(fo=r,r=u)):(fo=r,r=u),r}())!==u&&(e="insert"),(r=e)===u&&(r=fo,(e=ua())!==u&&(e="replace"),r=e),r}function yu(){var t,r;return t=fo,ai()!==u&&li()!==u&&(r=du())!==u&&li()!==u&&ii()!==u?t=r:(fo=t,t=u),t}function du(){var t,r,e,n,o,a,i,s;if(t=fo,(r=mu())!==u){for(e=[],n=fo,(o=li())!==u&&(a=oi())!==u&&(i=li())!==u&&(s=mu())!==u?n=o=[o,a,i,s]:(fo=n,n=u);n!==u;)e.push(n),n=fo,(o=li())!==u&&(a=oi())!==u&&(i=li())!==u&&(s=mu())!==u?n=o=[o,a,i,s]:(fo=n,n=u);e!==u?t=r=function(t,r){const e={type:"expr_list"};return e.value=xi(t,r),e}(r,e):(fo=t,t=u)}else fo=t,t=u;return t}function hu(){var r,e,n;return r=fo,function(){var r,e,n,o;return r=fo,"when"===t.substr(fo,4).toLowerCase()?(e=t.substr(fo,4),fo+=4):(e=u,0===yo&&Co(ke)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e=[e,n]:(fo=r,r=u)):(fo=r,r=u),r}()!==u&&li()!==u&&(e=mu())!==u&&li()!==u&&function(){var r,e,n,o;return r=fo,"then"===t.substr(fo,4).toLowerCase()?(e=t.substr(fo,4),fo+=4):(e=u,0===yo&&Co(Me)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e=[e,n]:(fo=r,r=u)):(fo=r,r=u),r}()!==u&&li()!==u&&(n=mu())!==u?r={type:"when",cond:e,result:n}:(fo=r,r=u),r}function mu(){var t;return(t=function(){var t,r,e,n,o,a,i,s;if(t=fo,(r=ju())!==u){if(e=[],n=fo,(o=li())!==u&&(a=ci())!==u&&(i=li())!==u&&(s=ju())!==u?n=o=[o,a,i,s]:(fo=n,n=u),n!==u)for(;n!==u;)e.push(n),n=fo,(o=li())!==u&&(a=ci())!==u&&(i=li())!==u&&(s=ju())!==u?n=o=[o,a,i,s]:(fo=n,n=u);else e=u;e!==u?t=r=ki(r,e):(fo=t,t=u)}else fo=t,t=u;return t}())===u&&(t=function(){var t,r,e,n,o,a;if(t=fo,(r=Eu())!==u){if(e=[],n=fo,(o=li())!==u&&(a=ju())!==u?n=o=[o,a]:(fo=n,n=u),n!==u)for(;n!==u;)e.push(n),n=fo,(o=li())!==u&&(a=ju())!==u?n=o=[o,a]:(fo=n,n=u);else e=u;e!==u?t=r=_i(r,e[0][1]):(fo=t,t=u)}else fo=t,t=u;return t}())===u&&(t=function(){var t,r,e,n,o,a,i,s;if(t=fo,(r=wu())!==u){for(e=[],n=fo,(o=fi())!==u&&(a=Ia())!==u&&(i=li())!==u&&(s=wu())!==u?n=o=[o,a,i,s]:(fo=n,n=u);n!==u;)e.push(n),n=fo,(o=fi())!==u&&(a=Ia())!==u&&(i=li())!==u&&(s=wu())!==u?n=o=[o,a,i,s]:(fo=n,n=u);e!==u?t=r=mt(r,e):(fo=t,t=u)}else fo=t,t=u;return t}())===u&&(t=Po()),t}function wu(){var t,r,e,n,o,a,i,s;if(t=fo,(r=Lu())!==u){for(e=[],n=fo,(o=fi())!==u&&(a=Ta())!==u&&(i=li())!==u&&(s=Lu())!==u?n=o=[o,a,i,s]:(fo=n,n=u);n!==u;)e.push(n),n=fo,(o=fi())!==u&&(a=Ta())!==u&&(i=li())!==u&&(s=Lu())!==u?n=o=[o,a,i,s]:(fo=n,n=u);e!==u?t=r=mt(r,e):(fo=t,t=u)}else fo=t,t=u;return t}function Lu(){var r,e,n,o,a;return(r=function t(){var r,e,n,o,a,i,s;return r=fo,(e=Ou())!==u&&li()!==u?(n=fo,yo++,o=Ta(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u&&(o=li())!==u?((a=function(){var r;return(r=function(){var t,r,e,n,o,a;if(fo,t=[],r=fo,(e=li())!==u&&(n=Cu())!==u&&(o=li())!==u&&(a=Ou())!==u?r=e=[e,n,o,a]:(fo=r,r=u),r!==u)for(;r!==u;)t.push(r),r=fo,(e=li())!==u&&(n=Cu())!==u&&(o=li())!==u&&(a=Ou())!==u?r=e=[e,n,o,a]:(fo=r,r=u);else t=u;return t!==u&&(t={type:"arithmetic",tail:t}),t}())===u&&(r=function(){var t,r,e,n;return t=fo,(r=gu())!==u&&li()!==u&&(e=ai())!==u&&li()!==u&&(n=du())!==u&&li()!==u&&ii()!==u?t=r={op:r,right:n}:(fo=t,t=u),t===u&&(t=fo,(r=gu())!==u&&li()!==u?((e=Si())===u&&(e=$u()),e!==u?t=r=function(t,r){return{op:t,right:r}}(r,e):(fo=t,t=u)):(fo=t,t=u)),t}())===u&&(r=function(){var t,r,e,n;return t=fo,(r=function(){var t,r,e,n,o;return t=fo,r=fo,(e=ja())!==u&&(n=li())!==u&&(o=ga())!==u?r=e=[e,n,o]:(fo=r,r=u),r!==u&&(r=Lt(r)),(t=r)===u&&(t=ga()),t}())!==u&&li()!==u&&(e=Ou())!==u&&li()!==u&&Ta()!==u&&li()!==u&&(n=Ou())!==u?t=r={op:r,right:{type:"expr_list",value:[e,n]}}:(fo=t,t=u),t}())===u&&(r=function(){var t,r,e,n,o;return t=fo,(r=Ea())!==u&&(e=li())!==u&&(n=Ou())!==u?t=r={op:"IS",right:n}:(fo=t,t=u),t===u&&(t=fo,r=fo,(e=Ea())!==u&&(n=li())!==u&&(o=ja())!==u?r=e=[e,n,o]:(fo=r,r=u),r!==u&&(e=li())!==u&&(n=Ou())!==u?t=r=function(t){return{op:"IS NOT",right:t}}(n):(fo=t,t=u)),t}())===u&&(r=function(){var r,e,n;return r=fo,(e=function(){var t,r,e,n,o;return t=fo,r=fo,(e=ja())!==u&&(n=li())!==u&&(o=Aa())!==u?r=e=[e,n,o]:(fo=r,r=u),r!==u&&(r=Lt(r)),(t=r)===u&&(t=Aa()),t}())!==u&&li()!==u&&(n=t())!==u?r=e={op:e,right:n}:(fo=r,r=u),r}()),r}())===u&&(a=null),a!==u?(i=e,r=e=null===(s=a)?i:"arithmetic"===s.type?ki(i,s.tail):Ui(s.op,i,s.right)):(fo=r,r=u)):(fo=r,r=u)):(fo=r,r=u),r===u&&(r=$u())===u&&(r=Tu()),r}())===u&&(r=function(){var t,r,e,n,o;return t=fo,(r=function(){var t,r,e,n,o;return t=fo,r=fo,(e=ja())!==u&&(n=li())!==u&&(o=Sa())!==u?r=e=[e,n,o]:(fo=r,r=u),r!==u&&(r=Lt(r)),(t=r)===u&&(t=Sa()),t}())!==u&&li()!==u&&ai()!==u&&li()!==u&&(e=Ao())!==u&&li()!==u&&ii()!==u?(n=r,(o=e).parentheses=!0,t=r=_i(n,o)):(fo=t,t=u),t}())===u&&(r=fo,(e=ja())===u&&(e=fo,33===t.charCodeAt(fo)?(n="!",fo++):(n=u,0===yo&&Co(wt)),n!==u?(o=fo,yo++,61===t.charCodeAt(fo)?(a="=",fo++):(a=u,0===yo&&Co(dt)),yo--,a===u?o=void 0:(fo=o,o=u),o!==u?e=n=[n,o]:(fo=e,e=u)):(fo=e,e=u)),e!==u&&(n=li())!==u&&(o=Lu())!==u?r=e=_i("NOT",o):(fo=r,r=u)),r}function Cu(){var r;return">="===t.substr(fo,2)?(r=">=",fo+=2):(r=u,0===yo&&Co(Ct)),r===u&&(62===t.charCodeAt(fo)?(r=">",fo++):(r=u,0===yo&&Co(gt)),r===u&&("<="===t.substr(fo,2)?(r="<=",fo+=2):(r=u,0===yo&&Co(Ot)),r===u&&("<>"===t.substr(fo,2)?(r="<>",fo+=2):(r=u,0===yo&&Co(Et)),r===u&&(60===t.charCodeAt(fo)?(r="<",fo++):(r=u,0===yo&&Co(At)),r===u&&(61===t.charCodeAt(fo)?(r="=",fo++):(r=u,0===yo&&Co(dt)),r===u&&("!="===t.substr(fo,2)?(r="!=",fo+=2):(r=u,0===yo&&Co(St)))))))),r}function gu(){var t,r,e,n,o;return t=fo,r=fo,(e=ja())!==u&&(n=li())!==u&&(o=Oa())!==u?r=e=[e,n,o]:(fo=r,r=u),r!==u&&(r=Lt(r)),(t=r)===u&&(t=Oa()),t}function Ou(){var t,r,e,n,o,a,i,s;if(t=fo,(r=Au())!==u){for(e=[],n=fo,(o=li())!==u&&(a=Eu())!==u&&(i=li())!==u&&(s=Au())!==u?n=o=[o,a,i,s]:(fo=n,n=u);n!==u;)e.push(n),n=fo,(o=li())!==u&&(a=Eu())!==u&&(i=li())!==u&&(s=Au())!==u?n=o=[o,a,i,s]:(fo=n,n=u);e!==u?t=r=mt(r,e):(fo=t,t=u)}else fo=t,t=u;return t}function Eu(){var r;return 43===t.charCodeAt(fo)?(r="+",fo++):(r=u,0===yo&&Co(jt)),r===u&&(45===t.charCodeAt(fo)?(r="-",fo++):(r=u,0===yo&&Co(Tt))),r}function Au(){var t,r,e,n,o,a,i,s;if(t=fo,(r=ju())!==u){for(e=[],n=fo,(o=li())!==u&&(a=Su())!==u&&(i=li())!==u&&(s=ju())!==u?n=o=[o,a,i,s]:(fo=n,n=u);n!==u;)e.push(n),n=fo,(o=li())!==u&&(a=Su())!==u&&(i=li())!==u&&(s=ju())!==u?n=o=[o,a,i,s]:(fo=n,n=u);e!==u?t=r=ki(r,e):(fo=t,t=u)}else fo=t,t=u;return t}function Su(){var r;return 42===t.charCodeAt(fo)?(r="*",fo++):(r=u,0===yo&&Co(It)),r===u&&(47===t.charCodeAt(fo)?(r="/",fo++):(r=u,0===yo&&Co(Nt)),r===u&&(37===t.charCodeAt(fo)?(r="%",fo++):(r=u,0===yo&&Co(_t)))),r}function ju(){var r,e,n,o;return(r=function(){var r,e,n,o,a,i;return r=fo,_a()!==u&&li()!==u&&ai()!==u&&li()!==u&&(e=mu())!==u&&li()!==u&&la()!==u&&li()!==u&&(n=Ti())!==u&&li()!==u&&(o=ii())!==u?r={type:"cast",expr:e,symbol:"as",target:n}:(fo=r,r=u),r===u&&(r=fo,_a()!==u&&li()!==u&&ai()!==u&&li()!==u&&(e=mu())!==u&&li()!==u&&la()!==u&&li()!==u&&(n=ka())!==u&&li()!==u&&(o=ai())!==u&&li()!==u&&(a=Gu())!==u&&li()!==u&&ii()!==u&&li()!==u&&(i=ii())!==u?r=function(t,r){return{type:"cast",expr:t,symbol:"as",target:{dataType:"DECIMAL("+r+")"}}}(e,a):(fo=r,r=u),r===u&&(r=fo,_a()!==u&&li()!==u&&ai()!==u&&li()!==u&&(e=mu())!==u&&li()!==u&&la()!==u&&li()!==u&&(n=ka())!==u&&li()!==u&&(o=ai())!==u&&li()!==u&&(a=Gu())!==u&&li()!==u&&oi()!==u&&li()!==u&&(i=Gu())!==u&&li()!==u&&ii()!==u&&li()!==u&&ii()!==u?r=function(t,r,e){return{type:"cast",expr:t,symbol:"as",target:{dataType:"DECIMAL("+r+", "+e+")"}}}(e,a,i):(fo=r,r=u),r===u&&(r=fo,_a()!==u&&li()!==u&&ai()!==u&&li()!==u&&(e=mu())!==u&&li()!==u&&la()!==u&&li()!==u&&(n=function(){var r;return(r=function(){var r,e,n,o;return r=fo,"signed"===t.substr(fo,6).toLowerCase()?(e=t.substr(fo,6),fo+=6):(e=u,0===yo&&Co(He)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e="SIGNED":(fo=r,r=u)):(fo=r,r=u),r}())===u&&(r=Ma()),r}())!==u&&li()!==u?((o=Pa())===u&&(o=null),o!==u&&li()!==u&&(a=ii())!==u?r=function(t,r,e){return{type:"cast",expr:t,symbol:"as",target:{dataType:r+(e?" "+e:"")}}}(e,n,o):(fo=r,r=u)):(fo=r,r=u)))),r}())===u&&(r=Du())===u&&(r=function(){var r;return(r=function(){var r,e,n,o;return r=fo,(e=function(){var r,e,n,o;return r=fo,"count"===t.substr(fo,5).toLowerCase()?(e=t.substr(fo,5),fo+=5):(e=u,0===yo&&Co(Te)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e="COUNT":(fo=r,r=u)):(fo=r,r=u),r}())!==u&&li()!==u&&ai()!==u&&li()!==u&&(n=function(){var r,e,n;return r=fo,(e=function(){var r;return fo,42===t.charCodeAt(fo)?(r="*",fo++):(r=u,0===yo&&Co(It)),r!==u&&(r={type:"star",value:"*"}),r}())!==u&&(e={expr:e}),(r=e)===u&&(r=fo,(e=Ca())===u&&(e=null),e!==u&&li()!==u&&(n=Tu())!==u?r=e={distinct:e,expr:n}:(fo=r,r=u)),r}())!==u&&li()!==u&&ii()!==u&&li()!==u?((o=Pu())===u&&(o=null),o!==u?r=e={type:"aggr_func",name:e,args:n,over:o}:(fo=r,r=u)):(fo=r,r=u),r}())===u&&(r=function(){var r,e,n;return r=fo,(e=function(){var r;return(r=function(){var r,e,n,o;return r=fo,"sum"===t.substr(fo,3).toLowerCase()?(e=t.substr(fo,3),fo+=3):(e=u,0===yo&&Co(_e)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e="SUM":(fo=r,r=u)):(fo=r,r=u),r}())===u&&(r=function(){var r,e,n,o;return r=fo,"max"===t.substr(fo,3).toLowerCase()?(e=t.substr(fo,3),fo+=3):(e=u,0===yo&&Co(Ie)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e="MAX":(fo=r,r=u)):(fo=r,r=u),r}())===u&&(r=function(){var r,e,n,o;return r=fo,"min"===t.substr(fo,3).toLowerCase()?(e=t.substr(fo,3),fo+=3):(e=u,0===yo&&Co(Ne)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e="MIN":(fo=r,r=u)):(fo=r,r=u),r}())===u&&(r=function(){var r,e,n,o;return r=fo,"avg"===t.substr(fo,3).toLowerCase()?(e=t.substr(fo,3),fo+=3):(e=u,0===yo&&Co(Ue)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e="AVG":(fo=r,r=u)):(fo=r,r=u),r}()),r}())!==u&&li()!==u&&ai()!==u&&li()!==u&&(n=Ou())!==u&&li()!==u&&ii()!==u?r=e={type:"aggr_func",name:e,args:{expr:n}}:(fo=r,r=u),r}()),r}())===u&&(r=function(){var r,e,n,o,a;return r=fo,(e=Oi())!==u&&li()!==u&&ai()!==u&&li()!==u?((n=du())===u&&(n=null),n!==u&&li()!==u&&(o=ii())!==u&&li()!==u?((a=Pu())===u&&(a=null),a!==u?r=e={type:"function",name:e,args:n||{type:"expr_list",value:[]},over:a}:(fo=r,r=u)):(fo=r,r=u)):(fo=r,r=u),r===u&&(r=fo,(e=function(){var r;return(r=function(){var r,e,n,o;return r=fo,"current_date"===t.substr(fo,12).toLowerCase()?(e=t.substr(fo,12),fo+=12):(e=u,0===yo&&Co(pn)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e="CURRENT_DATE":(fo=r,r=u)):(fo=r,r=u),r}())===u&&(r=function(){var r,e,n,o;return r=fo,"current_time"===t.substr(fo,12).toLowerCase()?(e=t.substr(fo,12),fo+=12):(e=u,0===yo&&Co(Ln)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e="CURRENT_TIME":(fo=r,r=u)):(fo=r,r=u),r}())===u&&(r=Ya())===u&&(r=function(){var r,e,n,o;return r=fo,"current_user"===t.substr(fo,12).toLowerCase()?(e=t.substr(fo,12),fo+=12):(e=u,0===yo&&Co(gn)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e="CURRENT_USER":(fo=r,r=u)):(fo=r,r=u),r}())===u&&(r=function(){var r,e,n,o;return r=fo,"user"===t.substr(fo,4).toLowerCase()?(e=t.substr(fo,4),fo+=4):(e=u,0===yo&&Co(fn)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e="USER":(fo=r,r=u)):(fo=r,r=u),r}())===u&&(r=function(){var r,e,n,o;return r=fo,"session_user"===t.substr(fo,12).toLowerCase()?(e=t.substr(fo,12),fo+=12):(e=u,0===yo&&Co(On)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e="SESSION_USER":(fo=r,r=u)):(fo=r,r=u),r}())===u&&(r=function(){var r,e,n,o;return r=fo,"system_user"===t.substr(fo,11).toLowerCase()?(e=t.substr(fo,11),fo+=11):(e=u,0===yo&&Co(En)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e="SYSTEM_USER":(fo=r,r=u)):(fo=r,r=u),r}()),r}())!==u&&li()!==u&&ai()!==u&&li()!==u&&(n=ii())!==u&&li()!==u?((o=Pu())===u&&(o=null),o!==u?r=e=function(t,r){return{type:"function",name:t,args:{type:"expr_list",value:[]},over:r}}(e,o):(fo=r,r=u)):(fo=r,r=u)),r}())===u&&(r=function(){var r,e,n,o,a,i,s,c,l;if(r=fo,Na()!==u)if(li()!==u)if((e=mu())===u&&(e=null),e!==u)if(li()!==u){if(n=[],(o=hu())!==u)for(;o!==u;)n.push(o),o=hu();else n=u;n!==u&&(o=li())!==u?((a=function(){var r,e;return r=fo,function(){var r,e,n,o;return r=fo,"else"===t.substr(fo,4).toLowerCase()?(e=t.substr(fo,4),fo+=4):(e=u,0===yo&&Co(qe)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e=[e,n]:(fo=r,r=u)):(fo=r,r=u),r}()!==u&&li()!==u&&(e=mu())!==u?r={type:"else",result:e}:(fo=r,r=u),r}())===u&&(a=null),a!==u&&li()!==u&&function(){var r,e,n,o;return r=fo,"end"===t.substr(fo,3).toLowerCase()?(e=t.substr(fo,3),fo+=3):(e=u,0===yo&&Co(Pe)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e=[e,n]:(fo=r,r=u)):(fo=r,r=u),r}()!==u&&li()!==u?((i=Na())===u&&(i=null),i!==u?(s=e,c=n,(l=a)&&c.push(l),r={type:"case",expr:s||null,args:c}):(fo=r,r=u)):(fo=r,r=u)):(fo=r,r=u)}else fo=r,r=u;else fo=r,r=u;else fo=r,r=u;else fo=r,r=u;return r}())===u&&(r=function(){var r,e,n;return r=fo,function(){var r,e,n,o;return r=fo,"interval"===t.substr(fo,8).toLowerCase()?(e=t.substr(fo,8),fo+=8):(e=u,0===yo&&Co(bn)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e="INTERVAL":(fo=r,r=u)):(fo=r,r=u),r}()!==u&&li()!==u&&(e=mu())!==u&&li()!==u&&(n=function(){var r;return(r=function(){var r,e,n,o;return r=fo,"year"===t.substr(fo,4).toLowerCase()?(e=t.substr(fo,4),fo+=4):(e=u,0===yo&&Co(vn)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e="YEAR":(fo=r,r=u)):(fo=r,r=u),r}())===u&&(r=function(){var r,e,n,o;return r=fo,"month"===t.substr(fo,5).toLowerCase()?(e=t.substr(fo,5),fo+=5):(e=u,0===yo&&Co(yn)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e="MONTH":(fo=r,r=u)):(fo=r,r=u),r}())===u&&(r=function(){var r,e,n,o;return r=fo,"day"===t.substr(fo,3).toLowerCase()?(e=t.substr(fo,3),fo+=3):(e=u,0===yo&&Co(dn)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e="DAY":(fo=r,r=u)):(fo=r,r=u),r}())===u&&(r=function(){var r,e,n,o;return r=fo,"hour"===t.substr(fo,4).toLowerCase()?(e=t.substr(fo,4),fo+=4):(e=u,0===yo&&Co(hn)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e="HOUR":(fo=r,r=u)):(fo=r,r=u),r}())===u&&(r=function(){var r,e,n,o;return r=fo,"minute"===t.substr(fo,6).toLowerCase()?(e=t.substr(fo,6),fo+=6):(e=u,0===yo&&Co(mn)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e="MINUTE":(fo=r,r=u)):(fo=r,r=u),r}())===u&&(r=function(){var r,e,n,o;return r=fo,"second"===t.substr(fo,6).toLowerCase()?(e=t.substr(fo,6),fo+=6):(e=u,0===yo&&Co(wn)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e="SECOND":(fo=r,r=u)):(fo=r,r=u),r}()),r}())!==u?r={type:"interval",expr:e,unit:n.toLowerCase()}:(fo=r,r=u),r}())===u&&(r=Tu())===u&&(r=qu())===u&&(r=fo,ai()!==u&&(e=li())!==u&&(n=mu())!==u&&li()!==u&&ii()!==u?r=Ut(n):(fo=r,r=u),r===u&&(r=fo,ai()!==u&&(e=li())!==u&&(n=du())!==u&&li()!==u&&ii()!==u?((o=n).parentheses=!0,r=o):(fo=r,r=u),r===u&&(r=Si())===u&&(r=fo,li()!==u?(63===t.charCodeAt(fo)?(e="?",fo++):(e=u,0===yo&&Co(Rt)),e!==u?r={type:"origin",value:e}:(fo=r,r=u)):(fo=r,r=u)))),r}function Tu(){var r,e,n,o,a,i,s,c,l,f;return r=fo,e=fo,(n=Iu())!==u&&(o=li())!==u&&(a=ni())!==u&&(i=li())!==u?e=n=[n,o,a,i]:(fo=e,e=u),e===u&&(e=null),e!==u&&(n=_u())!==u&&(o=li())!==u?((a=function(){var r;return"->>"===t.substr(fo,3)?(r="->>",fo+=3):(r=u,0===yo&&Co(to)),r}())===u&&(a=function(){var r;return"->"===t.substr(fo,2)?(r="->",fo+=2):(r=u,0===yo&&Co(zn)),r}()),a!==u&&(i=li())!==u?((s=$u())===u&&(s=Qu()),s!==u&&li()!==u?((c=To())===u&&(c=null),c!==u?r=e=function(t,r,e,n,o){const u=t&&t[0]||null;return Vi.add(`select::${u}::${r}`),{type:"column_ref",table:u,column:r,collate:o,arrow:e,property:n}}(e,n,a,s,c):(fo=r,r=u)):(fo=r,r=u)):(fo=r,r=u)):(fo=r,r=u),r===u&&(r=fo,(e=Iu())!==u&&(n=li())!==u&&(o=ni())!==u&&(a=li())!==u&&(i=function(){var t,r;return t=fo,(r=Uu())!==u&&(r=r),(t=r)===u&&(t=Nu()),t}())!==u?(l=e,f=i,Vi.add(`select::${l}::${f}`),r=e={type:"column_ref",table:l,column:f}):(fo=r,r=u),r===u&&(r=fo,(e=_u())!==u&&(e=function(t){return Vi.add("select::null::"+t),{type:"column_ref",table:null,column:t}}(e)),r=e)),r}function Iu(){var t,r;return t=fo,(r=Ru())!==u&&(xt(r)?u:void 0)!==u?t=r=r:(fo=t,t=u),t===u&&(t=fo,(r=Nu())!==u&&(r=r),t=r),t}function Nu(){var r;return(r=function(){var r,e,n,o;if(r=fo,34===t.charCodeAt(fo)?(e='"',fo++):(e=u,0===yo&&Co(kt)),e!==u){if(n=[],Mt.test(t.charAt(fo))?(o=t.charAt(fo),fo++):(o=u,0===yo&&Co(qt)),o!==u)for(;o!==u;)n.push(o),Mt.test(t.charAt(fo))?(o=t.charAt(fo),fo++):(o=u,0===yo&&Co(qt));else n=u;n!==u?(34===t.charCodeAt(fo)?(o='"',fo++):(o=u,0===yo&&Co(kt)),o!==u?r=e=Pt(n):(fo=r,r=u)):(fo=r,r=u)}else fo=r,r=u;return r}())===u&&(r=function(){var r,e,n,o;if(r=fo,39===t.charCodeAt(fo)?(e="'",fo++):(e=u,0===yo&&Co(tt)),e!==u){if(n=[],Dt.test(t.charAt(fo))?(o=t.charAt(fo),fo++):(o=u,0===yo&&Co(Vt)),o!==u)for(;o!==u;)n.push(o),Dt.test(t.charAt(fo))?(o=t.charAt(fo),fo++):(o=u,0===yo&&Co(Vt));else n=u;n!==u?(39===t.charCodeAt(fo)?(o="'",fo++):(o=u,0===yo&&Co(tt)),o!==u?r=e=Pt(n):(fo=r,r=u)):(fo=r,r=u)}else fo=r,r=u;return r}())===u&&(r=function(){var r,e,n,o;if(r=fo,96===t.charCodeAt(fo)?(e="`",fo++):(e=u,0===yo&&Co($t)),e!==u){if(n=[],Bt.test(t.charAt(fo))?(o=t.charAt(fo),fo++):(o=u,0===yo&&Co(Ft)),o!==u)for(;o!==u;)n.push(o),Bt.test(t.charAt(fo))?(o=t.charAt(fo),fo++):(o=u,0===yo&&Co(Ft));else n=u;n!==u?(96===t.charCodeAt(fo)?(o="`",fo++):(o=u,0===yo&&Co($t)),o!==u?r=e=Pt(n):(fo=r,r=u)):(fo=r,r=u)}else fo=r,r=u;return r}()),r}function _u(){var t,r;return t=fo,(r=Uu())!==u&&(xt(r)?u:void 0)!==u?t=r=r:(fo=t,t=u),t===u&&(t=Nu()),t}function Uu(){var t,r,e,n;if(t=fo,(r=xu())!==u){for(e=[],n=Mu();n!==u;)e.push(n),n=Mu();e!==u?t=r=Ht(r,e):(fo=t,t=u)}else fo=t,t=u;return t}function Ru(){var t,r,e,n;if(t=fo,(r=xu())!==u){for(e=[],n=ku();n!==u;)e.push(n),n=ku();e!==u?t=r=Ht(r,e):(fo=t,t=u)}else fo=t,t=u;return t}function xu(){var r;return Qt.test(t.charAt(fo))?(r=t.charAt(fo),fo++):(r=u,0===yo&&Co(Gt)),r}function ku(){var r;return Wt.test(t.charAt(fo))?(r=t.charAt(fo),fo++):(r=u,0===yo&&Co(Yt)),r}function Mu(){var r;return Zt.test(t.charAt(fo))?(r=t.charAt(fo),fo++):(r=u,0===yo&&Co(Jt)),r}function qu(){var r,e,n;return fo,r=fo,58===t.charCodeAt(fo)?(e=":",fo++):(e=u,0===yo&&Co(Xt)),e!==u&&(n=Ru())!==u?r=e=[e,n]:(fo=r,r=u),r!==u&&(r={type:"param",value:r[1]}),r}function Pu(){var r,e,n;return r=fo,function(){var r,e,n,o;return r=fo,"over"===t.substr(fo,4).toLowerCase()?(e=t.substr(fo,4),fo+=4):(e=u,0===yo&&Co(ae)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e=[e,n]:(fo=r,r=u)):(fo=r,r=u),r}()!==u&&li()!==u&&ai()!==u&&li()!==u&&ia()!==u&&li()!==u&&wa()!==u&&li()!==u&&(e=Ho())!==u&&li()!==u?((n=uu())===u&&(n=null),n!==u&&li()!==u&&ii()!==u?r={partitionby:e,orderby:n}:(fo=r,r=u)):(fo=r,r=u),r}function Du(){var r;return(r=$u())===u&&(r=Qu())===u&&(r=function(){var r,e;return r=fo,(e=function(){var r,e,n,o;return r=fo,"true"===t.substr(fo,4).toLowerCase()?(e=t.substr(fo,4),fo+=4):(e=u,0===yo&&Co(Tr)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e=[e,n]:(fo=r,r=u)):(fo=r,r=u),r}())!==u&&(e={type:"bool",value:!0}),(r=e)===u&&(r=fo,(e=function(){var r,e,n,o;return r=fo,"false"===t.substr(fo,5).toLowerCase()?(e=t.substr(fo,5),fo+=5):(e=u,0===yo&&Co(Nr)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e=[e,n]:(fo=r,r=u)):(fo=r,r=u),r}())!==u&&(e={type:"bool",value:!1}),r=e),r}())===u&&(r=Vu())===u&&(r=function(){var r,e,n,o,a,i,s,c;if(r=fo,(e=Ga())===u&&(e=Ha())===u&&(e=Wa())===u&&(e=Qa()),e!==u)if(li()!==u){if(n=fo,39===t.charCodeAt(fo)?(o="'",fo++):(o=u,0===yo&&Co(tt)),o!==u){for(a=[],i=Fu();i!==u;)a.push(i),i=Fu();a!==u?(39===t.charCodeAt(fo)?(i="'",fo++):(i=u,0===yo&&Co(tt)),i!==u?n=o=[o,a,i]:(fo=n,n=u)):(fo=n,n=u)}else fo=n,n=u;n!==u?(c=n,r=e={type:e.toLowerCase(),value:c[1].join("")}):(fo=r,r=u)}else fo=r,r=u;else fo=r,r=u;return r===u&&(r=fo,(e=Ya())!==u&&li()!==u?((n=ai())===u&&(n=null),n!==u&&(o=li())!==u?((a=ii())===u&&(a=null),a!==u&&(i=(i=function(t,r,e){if(r&&e)return!0}(0,n,a))?u:void 0)!==u&&li()!==u?("on update current_timestamp"===t.substr(fo,27).toLowerCase()?(s=t.substr(fo,27),fo+=27):(s=u,0===yo&&Co(zt)),s===u&&(s=null),s!==u?r=e=function(t,r,e,n){return{type:"origin",value:(n?`${t} ${n}`:t).toLowerCase()}}(e,0,0,s):(fo=r,r=u)):(fo=r,r=u)):(fo=r,r=u)):(fo=r,r=u)),r}()),r}function Vu(){var r;return fo,(r=function(){var r,e,n,o;return r=fo,"null"===t.substr(fo,4).toLowerCase()?(e=t.substr(fo,4),fo+=4):(e=u,0===yo&&Co(Sr)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e=[e,n]:(fo=r,r=u)):(fo=r,r=u),r}())!==u&&(r={type:"null",value:null}),r}function $u(){var r,e,n,o,a;if(r=fo,e=fo,39===t.charCodeAt(fo)?(n="'",fo++):(n=u,0===yo&&Co(tt)),n!==u){for(o=[],a=Fu();a!==u;)o.push(a),a=Fu();o!==u?(39===t.charCodeAt(fo)?(a="'",fo++):(a=u,0===yo&&Co(tt)),a!==u?e=n=[n,o,a]:(fo=e,e=u)):(fo=e,e=u)}else fo=e,e=u;if(e!==u&&(e=Kt(e)),(r=e)===u){if(r=fo,e=fo,34===t.charCodeAt(fo)?(n='"',fo++):(n=u,0===yo&&Co(kt)),n!==u){for(o=[],a=Bu();a!==u;)o.push(a),a=Bu();o!==u?(34===t.charCodeAt(fo)?(a='"',fo++):(a=u,0===yo&&Co(kt)),a!==u?e=n=[n,o,a]:(fo=e,e=u)):(fo=e,e=u)}else fo=e,e=u;e!==u&&(e=Kt(e)),r=e}return r}function Bu(){var r;return tr.test(t.charAt(fo))?(r=t.charAt(fo),fo++):(r=u,0===yo&&Co(rr)),r===u&&(r=Hu()),r}function Fu(){var r;return er.test(t.charAt(fo))?(r=t.charAt(fo),fo++):(r=u,0===yo&&Co(nr)),r===u&&(r=Hu()),r}function Hu(){var r,e,n,o,a,i,s,c,l,f;return r=fo,"\\'"===t.substr(fo,2)?(e="\\'",fo+=2):(e=u,0===yo&&Co(or)),e!==u&&(e="'"),(r=e)===u&&(r=fo,'\\"'===t.substr(fo,2)?(e='\\"',fo+=2):(e=u,0===yo&&Co(ur)),e!==u&&(e='"'),(r=e)===u&&(r=fo,"\\\\"===t.substr(fo,2)?(e="\\\\",fo+=2):(e=u,0===yo&&Co(ar)),e!==u&&(e="\\"),(r=e)===u&&(r=fo,"\\/"===t.substr(fo,2)?(e="\\/",fo+=2):(e=u,0===yo&&Co(ir)),e!==u&&(e="/"),(r=e)===u&&(r=fo,"\\b"===t.substr(fo,2)?(e="\\b",fo+=2):(e=u,0===yo&&Co(sr)),e!==u&&(e="\b"),(r=e)===u&&(r=fo,"\\f"===t.substr(fo,2)?(e="\\f",fo+=2):(e=u,0===yo&&Co(cr)),e!==u&&(e="\f"),(r=e)===u&&(r=fo,"\\n"===t.substr(fo,2)?(e="\\n",fo+=2):(e=u,0===yo&&Co(lr)),e!==u&&(e="\n"),(r=e)===u&&(r=fo,"\\r"===t.substr(fo,2)?(e="\\r",fo+=2):(e=u,0===yo&&Co(fr)),e!==u&&(e="\r"),(r=e)===u&&(r=fo,"\\t"===t.substr(fo,2)?(e="\\t",fo+=2):(e=u,0===yo&&Co(pr)),e!==u&&(e="\t"),(r=e)===u&&(r=fo,"\\u"===t.substr(fo,2)?(e="\\u",fo+=2):(e=u,0===yo&&Co(br)),e!==u&&(n=Xu())!==u&&(o=Xu())!==u&&(a=Xu())!==u&&(i=Xu())!==u?(s=n,c=o,l=a,f=i,r=e=String.fromCharCode(parseInt("0x"+s+c+l+f))):(fo=r,r=u),r===u&&(r=fo,92===t.charCodeAt(fo)?(e="\\",fo++):(e=u,0===yo&&Co(vr)),e!==u&&(e="\\"),r=e)))))))))),r}function Qu(){var t,r;return fo,(t=function(){var t,r,e,n;return t=fo,(r=Gu())!==u&&(e=Wu())!==u&&(n=Yu())!==u?t=r={type:"bigint",value:r+e+n}:(fo=t,t=u),t===u&&(t=fo,(r=Gu())!==u&&(e=Wu())!==u?t=r=function(t,r){const e=t+r;return Ri(t)?{type:"bigint",value:e}:parseFloat(e)}(r,e):(fo=t,t=u),t===u&&(t=fo,(r=Gu())!==u&&(e=Yu())!==u?t=r=function(t,r){return{type:"bigint",value:t+r}}(r,e):(fo=t,t=u),t===u&&(t=fo,(r=Gu())!==u&&(r=function(t){return Ri(t)?{type:"bigint",value:t}:parseFloat(t)}(r)),t=r))),t}())!==u&&(t=(r=t)&&"bigint"===r.type?r:{type:"number",value:r}),t}function Gu(){var r,e,n;return(r=Zu())===u&&(r=Ju())===u&&(r=fo,45===t.charCodeAt(fo)?(e="-",fo++):(e=u,0===yo&&Co(Tt)),e===u&&(43===t.charCodeAt(fo)?(e="+",fo++):(e=u,0===yo&&Co(jt))),e!==u&&(n=Zu())!==u?r=e="-"+n:(fo=r,r=u),r===u&&(r=fo,45===t.charCodeAt(fo)?(e="-",fo++):(e=u,0===yo&&Co(Tt)),e===u&&(43===t.charCodeAt(fo)?(e="+",fo++):(e=u,0===yo&&Co(jt))),e!==u&&(n=Ju())!==u?r=e="-"+n:(fo=r,r=u))),r}function Wu(){var r,e,n;return r=fo,46===t.charCodeAt(fo)?(e=".",fo++):(e=u,0===yo&&Co(hr)),e!==u&&(n=Zu())!==u?r=e="."+n:(fo=r,r=u),r}function Yu(){var r,e,n;return r=fo,(e=function(){var r,e,n,o;return r=fo,gr.test(t.charAt(fo))?(e=t.charAt(fo),fo++):(e=u,0===yo&&Co(Or)),e!==u?(Er.test(t.charAt(fo))?(n=t.charAt(fo),fo++):(n=u,0===yo&&Co(Ar)),n===u&&(n=null),n!==u?r=e+=null!==(o=n)?o:"":(fo=r,r=u)):(fo=r,r=u),r}())!==u&&(n=Zu())!==u?r=e+=n:(fo=r,r=u),r}function Zu(){var t,r;if(fo,t=[],(r=Ju())!==u)for(;r!==u;)t.push(r),r=Ju();else t=u;return t!==u&&(t=t.join("")),t}function Ju(){var r;return mr.test(t.charAt(fo))?(r=t.charAt(fo),fo++):(r=u,0===yo&&Co(wr)),r}function Xu(){var r;return Lr.test(t.charAt(fo))?(r=t.charAt(fo),fo++):(r=u,0===yo&&Co(Cr)),r}function Ku(){var r,e,n,o;return r=fo,"default"===t.substr(fo,7).toLowerCase()?(e=t.substr(fo,7),fo+=7):(e=u,0===yo&&Co(d)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e=[e,n]:(fo=r,r=u)):(fo=r,r=u),r}function zu(){var r,e,n,o;return r=fo,"to"===t.substr(fo,2).toLowerCase()?(e=t.substr(fo,2),fo+=2):(e=u,0===yo&&Co(Ir)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e=[e,n]:(fo=r,r=u)):(fo=r,r=u),r}function ta(){var r,e,n,o;return r=fo,"drop"===t.substr(fo,4).toLowerCase()?(e=t.substr(fo,4),fo+=4):(e=u,0===yo&&Co(_r)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e="DROP":(fo=r,r=u)):(fo=r,r=u),r}function ra(){var r,e,n,o;return r=fo,"update"===t.substr(fo,6).toLowerCase()?(e=t.substr(fo,6),fo+=6):(e=u,0===yo&&Co(kr)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e=[e,n]:(fo=r,r=u)):(fo=r,r=u),r}function ea(){var r,e,n,o;return r=fo,"create"===t.substr(fo,6).toLowerCase()?(e=t.substr(fo,6),fo+=6):(e=u,0===yo&&Co(Mr)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e=[e,n]:(fo=r,r=u)):(fo=r,r=u),r}function na(){var r,e,n,o;return r=fo,"temporary"===t.substr(fo,9).toLowerCase()?(e=t.substr(fo,9),fo+=9):(e=u,0===yo&&Co(qr)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e=[e,n]:(fo=r,r=u)):(fo=r,r=u),r}function oa(){var r,e,n,o;return r=fo,"if not exists"===t.substr(fo,13).toLowerCase()?(e=t.substr(fo,13),fo+=13):(e=u,0===yo&&Co(Pr)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e=[e,n]:(fo=r,r=u)):(fo=r,r=u),r}function ua(){var r,e,n,o;return r=fo,"replace"===t.substr(fo,7).toLowerCase()?(e=t.substr(fo,7),fo+=7):(e=u,0===yo&&Co(Br)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e=[e,n]:(fo=r,r=u)):(fo=r,r=u),r}function aa(){var r,e,n,o;return r=fo,"rename"===t.substr(fo,6).toLowerCase()?(e=t.substr(fo,6),fo+=6):(e=u,0===yo&&Co(Fr)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e=[e,n]:(fo=r,r=u)):(fo=r,r=u),r}function ia(){var r,e,n,o;return r=fo,"partition"===t.substr(fo,9).toLowerCase()?(e=t.substr(fo,9),fo+=9):(e=u,0===yo&&Co(Qr)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e="PARTITION":(fo=r,r=u)):(fo=r,r=u),r}function sa(){var r,e,n,o;return r=fo,"into"===t.substr(fo,4).toLowerCase()?(e=t.substr(fo,4),fo+=4):(e=u,0===yo&&Co(Gr)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e=[e,n]:(fo=r,r=u)):(fo=r,r=u),r}function ca(){var r,e,n,o;return r=fo,"set"===t.substr(fo,3).toLowerCase()?(e=t.substr(fo,3),fo+=3):(e=u,0===yo&&Co(Yr)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e=[e,n]:(fo=r,r=u)):(fo=r,r=u),r}function la(){var r,e,n,o;return r=fo,"as"===t.substr(fo,2).toLowerCase()?(e=t.substr(fo,2),fo+=2):(e=u,0===yo&&Co(Jr)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e=[e,n]:(fo=r,r=u)):(fo=r,r=u),r}function fa(){var r,e,n,o;return r=fo,"table"===t.substr(fo,5).toLowerCase()?(e=t.substr(fo,5),fo+=5):(e=u,0===yo&&Co(Xr)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e="TABLE":(fo=r,r=u)):(fo=r,r=u),r}function pa(){var r,e,n,o;return r=fo,"tables"===t.substr(fo,6).toLowerCase()?(e=t.substr(fo,6),fo+=6):(e=u,0===yo&&Co(Kr)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e="TABLES":(fo=r,r=u)):(fo=r,r=u),r}function ba(){var r,e,n,o;return r=fo,"on"===t.substr(fo,2).toLowerCase()?(e=t.substr(fo,2),fo+=2):(e=u,0===yo&&Co(zr)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e=[e,n]:(fo=r,r=u)):(fo=r,r=u),r}function va(){var r,e,n,o;return r=fo,"join"===t.substr(fo,4).toLowerCase()?(e=t.substr(fo,4),fo+=4):(e=u,0===yo&&Co(oe)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e=[e,n]:(fo=r,r=u)):(fo=r,r=u),r}function ya(){var r,e,n,o;return r=fo,"outer"===t.substr(fo,5).toLowerCase()?(e=t.substr(fo,5),fo+=5):(e=u,0===yo&&Co(ue)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e=[e,n]:(fo=r,r=u)):(fo=r,r=u),r}function da(){var r,e,n,o;return r=fo,"union"===t.substr(fo,5).toLowerCase()?(e=t.substr(fo,5),fo+=5):(e=u,0===yo&&Co(ie)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e=[e,n]:(fo=r,r=u)):(fo=r,r=u),r}function ha(){var r,e,n,o;return r=fo,"using"===t.substr(fo,5).toLowerCase()?(e=t.substr(fo,5),fo+=5):(e=u,0===yo&&Co(ce)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e=[e,n]:(fo=r,r=u)):(fo=r,r=u),r}function ma(){var r,e,n,o;return r=fo,"with"===t.substr(fo,4).toLowerCase()?(e=t.substr(fo,4),fo+=4):(e=u,0===yo&&Co(pt)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e=[e,n]:(fo=r,r=u)):(fo=r,r=u),r}function wa(){var r,e,n,o;return r=fo,"by"===t.substr(fo,2).toLowerCase()?(e=t.substr(fo,2),fo+=2):(e=u,0===yo&&Co(pe)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e=[e,n]:(fo=r,r=u)):(fo=r,r=u),r}function La(){var r,e,n,o;return r=fo,"all"===t.substr(fo,3).toLowerCase()?(e=t.substr(fo,3),fo+=3):(e=u,0===yo&&Co(we)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e="ALL":(fo=r,r=u)):(fo=r,r=u),r}function Ca(){var r,e,n,o;return r=fo,"distinct"===t.substr(fo,8).toLowerCase()?(e=t.substr(fo,8),fo+=8):(e=u,0===yo&&Co(Le)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e="DISTINCT":(fo=r,r=u)):(fo=r,r=u),r}function ga(){var r,e,n,o;return r=fo,"between"===t.substr(fo,7).toLowerCase()?(e=t.substr(fo,7),fo+=7):(e=u,0===yo&&Co(Ce)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e="BETWEEN":(fo=r,r=u)):(fo=r,r=u),r}function Oa(){var r,e,n,o;return r=fo,"in"===t.substr(fo,2).toLowerCase()?(e=t.substr(fo,2),fo+=2):(e=u,0===yo&&Co(ge)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e="IN":(fo=r,r=u)):(fo=r,r=u),r}function Ea(){var r,e,n,o;return r=fo,"is"===t.substr(fo,2).toLowerCase()?(e=t.substr(fo,2),fo+=2):(e=u,0===yo&&Co(Oe)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e="IS":(fo=r,r=u)):(fo=r,r=u),r}function Aa(){var r,e,n,o;return r=fo,"like"===t.substr(fo,4).toLowerCase()?(e=t.substr(fo,4),fo+=4):(e=u,0===yo&&Co(Ee)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e="LIKE":(fo=r,r=u)):(fo=r,r=u),r}function Sa(){var r,e,n,o;return r=fo,"exists"===t.substr(fo,6).toLowerCase()?(e=t.substr(fo,6),fo+=6):(e=u,0===yo&&Co(Ae)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e="EXISTS":(fo=r,r=u)):(fo=r,r=u),r}function ja(){var r,e,n,o;return r=fo,"not"===t.substr(fo,3).toLowerCase()?(e=t.substr(fo,3),fo+=3):(e=u,0===yo&&Co(N)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e="NOT":(fo=r,r=u)):(fo=r,r=u),r}function Ta(){var r,e,n,o;return r=fo,"and"===t.substr(fo,3).toLowerCase()?(e=t.substr(fo,3),fo+=3):(e=u,0===yo&&Co(Se)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e="AND":(fo=r,r=u)):(fo=r,r=u),r}function Ia(){var r,e,n,o;return r=fo,"or"===t.substr(fo,2).toLowerCase()?(e=t.substr(fo,2),fo+=2):(e=u,0===yo&&Co(je)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e="OR":(fo=r,r=u)):(fo=r,r=u),r}function Na(){var r,e,n,o;return r=fo,"case"===t.substr(fo,4).toLowerCase()?(e=t.substr(fo,4),fo+=4):(e=u,0===yo&&Co(xe)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e=[e,n]:(fo=r,r=u)):(fo=r,r=u),r}function _a(){var r,e,n,o;return r=fo,"cast"===t.substr(fo,4).toLowerCase()?(e=t.substr(fo,4),fo+=4):(e=u,0===yo&&Co(De)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e=[e,n]:(fo=r,r=u)):(fo=r,r=u),r}function Ua(){var r,e,n,o;return r=fo,"char"===t.substr(fo,4).toLowerCase()?(e=t.substr(fo,4),fo+=4):(e=u,0===yo&&Co(Ve)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e="CHAR":(fo=r,r=u)):(fo=r,r=u),r}function Ra(){var r,e,n,o;return r=fo,"varchar"===t.substr(fo,7).toLowerCase()?(e=t.substr(fo,7),fo+=7):(e=u,0===yo&&Co($e)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e="VARCHAR":(fo=r,r=u)):(fo=r,r=u),r}function xa(){var r,e,n,o;return r=fo,"numeric"===t.substr(fo,7).toLowerCase()?(e=t.substr(fo,7),fo+=7):(e=u,0===yo&&Co(Be)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e="NUMERIC":(fo=r,r=u)):(fo=r,r=u),r}function ka(){var r,e,n,o;return r=fo,"decimal"===t.substr(fo,7).toLowerCase()?(e=t.substr(fo,7),fo+=7):(e=u,0===yo&&Co(Fe)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e="DECIMAL":(fo=r,r=u)):(fo=r,r=u),r}function Ma(){var r,e,n,o;return r=fo,"unsigned"===t.substr(fo,8).toLowerCase()?(e=t.substr(fo,8),fo+=8):(e=u,0===yo&&Co(Qe)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e="UNSIGNED":(fo=r,r=u)):(fo=r,r=u),r}function qa(){var r,e,n,o;return r=fo,"int"===t.substr(fo,3).toLowerCase()?(e=t.substr(fo,3),fo+=3):(e=u,0===yo&&Co(Ge)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e="INT":(fo=r,r=u)):(fo=r,r=u),r}function Pa(){var r,e,n,o;return r=fo,"integer"===t.substr(fo,7).toLowerCase()?(e=t.substr(fo,7),fo+=7):(e=u,0===yo&&Co(Ye)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e="INTEGER":(fo=r,r=u)):(fo=r,r=u),r}function Da(){var r,e,n,o;return r=fo,"smallint"===t.substr(fo,8).toLowerCase()?(e=t.substr(fo,8),fo+=8):(e=u,0===yo&&Co(Je)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e="SMALLINT":(fo=r,r=u)):(fo=r,r=u),r}function Va(){var r,e,n,o;return r=fo,"tinyint"===t.substr(fo,7).toLowerCase()?(e=t.substr(fo,7),fo+=7):(e=u,0===yo&&Co(Xe)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e="TINYINT":(fo=r,r=u)):(fo=r,r=u),r}function $a(){var r,e,n,o;return r=fo,"bigint"===t.substr(fo,6).toLowerCase()?(e=t.substr(fo,6),fo+=6):(e=u,0===yo&&Co(en)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e="BIGINT":(fo=r,r=u)):(fo=r,r=u),r}function Ba(){var r,e,n,o;return r=fo,"float"===t.substr(fo,5).toLowerCase()?(e=t.substr(fo,5),fo+=5):(e=u,0===yo&&Co(nn)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e="FLOAT":(fo=r,r=u)):(fo=r,r=u),r}function Fa(){var r,e,n,o;return r=fo,"double"===t.substr(fo,6).toLowerCase()?(e=t.substr(fo,6),fo+=6):(e=u,0===yo&&Co(on)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e="DOUBLE":(fo=r,r=u)):(fo=r,r=u),r}function Ha(){var r,e,n,o;return r=fo,"date"===t.substr(fo,4).toLowerCase()?(e=t.substr(fo,4),fo+=4):(e=u,0===yo&&Co(un)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e="DATE":(fo=r,r=u)):(fo=r,r=u),r}function Qa(){var r,e,n,o;return r=fo,"datetime"===t.substr(fo,8).toLowerCase()?(e=t.substr(fo,8),fo+=8):(e=u,0===yo&&Co(an)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e="DATETIME":(fo=r,r=u)):(fo=r,r=u),r}function Ga(){var r,e,n,o;return r=fo,"time"===t.substr(fo,4).toLowerCase()?(e=t.substr(fo,4),fo+=4):(e=u,0===yo&&Co(sn)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e="TIME":(fo=r,r=u)):(fo=r,r=u),r}function Wa(){var r,e,n,o;return r=fo,"timestamp"===t.substr(fo,9).toLowerCase()?(e=t.substr(fo,9),fo+=9):(e=u,0===yo&&Co(cn)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e="TIMESTAMP":(fo=r,r=u)):(fo=r,r=u),r}function Ya(){var r,e,n,o;return r=fo,"current_timestamp"===t.substr(fo,17).toLowerCase()?(e=t.substr(fo,17),fo+=17):(e=u,0===yo&&Co(Cn)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e="CURRENT_TIMESTAMP":(fo=r,r=u)):(fo=r,r=u),r}function Za(){var r;return(r=function(){var r;return"@@"===t.substr(fo,2)?(r="@@",fo+=2):(r=u,0===yo&&Co(Nn)),r}())===u&&(r=function(){var r;return 64===t.charCodeAt(fo)?(r="@",fo++):(r=u,0===yo&&Co(In)),r}())===u&&(r=function(){var r;return 36===t.charCodeAt(fo)?(r="$",fo++):(r=u,0===yo&&Co(_n)),r}()),r}function Ja(){var r;return 61===t.charCodeAt(fo)?(r="=",fo++):(r=u,0===yo&&Co(dt)),r}function Xa(){var r,e,n,o;return r=fo,"add"===t.substr(fo,3).toLowerCase()?(e=t.substr(fo,3),fo+=3):(e=u,0===yo&&Co(kn)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e="ADD":(fo=r,r=u)):(fo=r,r=u),r}function Ka(){var r,e,n,o;return r=fo,"column"===t.substr(fo,6).toLowerCase()?(e=t.substr(fo,6),fo+=6):(e=u,0===yo&&Co(Mn)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e="COLUMN":(fo=r,r=u)):(fo=r,r=u),r}function za(){var r,e,n,o;return r=fo,"index"===t.substr(fo,5).toLowerCase()?(e=t.substr(fo,5),fo+=5):(e=u,0===yo&&Co(qn)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e="INDEX":(fo=r,r=u)):(fo=r,r=u),r}function ti(){var r,e,n,o;return r=fo,"key"===t.substr(fo,3).toLowerCase()?(e=t.substr(fo,3),fo+=3):(e=u,0===yo&&Co(p)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e="KEY":(fo=r,r=u)):(fo=r,r=u),r}function ri(){var r,e,n,o;return r=fo,"comment"===t.substr(fo,7).toLowerCase()?(e=t.substr(fo,7),fo+=7):(e=u,0===yo&&Co(Vn)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e="COMMENT":(fo=r,r=u)):(fo=r,r=u),r}function ei(){var r,e,n,o;return r=fo,"constraint"===t.substr(fo,10).toLowerCase()?(e=t.substr(fo,10),fo+=10):(e=u,0===yo&&Co($n)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e="CONSTRAINT":(fo=r,r=u)):(fo=r,r=u),r}function ni(){var r;return 46===t.charCodeAt(fo)?(r=".",fo++):(r=u,0===yo&&Co(hr)),r}function oi(){var r;return 44===t.charCodeAt(fo)?(r=",",fo++):(r=u,0===yo&&Co(Zn)),r}function ui(){var r;return 42===t.charCodeAt(fo)?(r="*",fo++):(r=u,0===yo&&Co(It)),r}function ai(){var r;return 40===t.charCodeAt(fo)?(r="(",fo++):(r=u,0===yo&&Co(st)),r}function ii(){var r;return 41===t.charCodeAt(fo)?(r=")",fo++):(r=u,0===yo&&Co(ct)),r}function si(){var r;return 59===t.charCodeAt(fo)?(r=";",fo++):(r=u,0===yo&&Co(Kn)),r}function ci(){var r;return(r=function(){var r;return"||"===t.substr(fo,2)?(r="||",fo+=2):(r=u,0===yo&&Co(ro)),r}())===u&&(r=function(){var r;return"&&"===t.substr(fo,2)?(r="&&",fo+=2):(r=u,0===yo&&Co(eo)),r}()),r}function li(){var t,r;for(t=[],(r=yi())===u&&(r=pi());r!==u;)t.push(r),(r=yi())===u&&(r=pi());return t}function fi(){var t,r;if(t=[],(r=yi())===u&&(r=pi()),r!==u)for(;r!==u;)t.push(r),(r=yi())===u&&(r=pi());else t=u;return t}function pi(){var r;return(r=function(){var r,e,n,o,a,i;if(r=fo,"/*"===t.substr(fo,2)?(e="/*",fo+=2):(e=u,0===yo&&Co(no)),e!==u){for(n=[],o=fo,a=fo,yo++,"*/"===t.substr(fo,2)?(i="*/",fo+=2):(i=u,0===yo&&Co(oo)),yo--,i===u?a=void 0:(fo=a,a=u),a!==u&&(i=vi())!==u?o=a=[a,i]:(fo=o,o=u);o!==u;)n.push(o),o=fo,a=fo,yo++,"*/"===t.substr(fo,2)?(i="*/",fo+=2):(i=u,0===yo&&Co(oo)),yo--,i===u?a=void 0:(fo=a,a=u),a!==u&&(i=vi())!==u?o=a=[a,i]:(fo=o,o=u);n!==u?("*/"===t.substr(fo,2)?(o="*/",fo+=2):(o=u,0===yo&&Co(oo)),o!==u?r=e=[e,n,o]:(fo=r,r=u)):(fo=r,r=u)}else fo=r,r=u;return r}())===u&&(r=function(){var r,e,n,o,a,i;if(r=fo,"--"===t.substr(fo,2)?(e="--",fo+=2):(e=u,0===yo&&Co(uo)),e!==u){for(n=[],o=fo,a=fo,yo++,i=di(),yo--,i===u?a=void 0:(fo=a,a=u),a!==u&&(i=vi())!==u?o=a=[a,i]:(fo=o,o=u);o!==u;)n.push(o),o=fo,a=fo,yo++,i=di(),yo--,i===u?a=void 0:(fo=a,a=u),a!==u&&(i=vi())!==u?o=a=[a,i]:(fo=o,o=u);n!==u?r=e=[e,n]:(fo=r,r=u)}else fo=r,r=u;return r}())===u&&(r=function(){var r,e,n,o,a,i;if(r=fo,35===t.charCodeAt(fo)?(e="#",fo++):(e=u,0===yo&&Co(ao)),e!==u){for(n=[],o=fo,a=fo,yo++,i=di(),yo--,i===u?a=void 0:(fo=a,a=u),a!==u&&(i=vi())!==u?o=a=[a,i]:(fo=o,o=u);o!==u;)n.push(o),o=fo,a=fo,yo++,i=di(),yo--,i===u?a=void 0:(fo=a,a=u),a!==u&&(i=vi())!==u?o=a=[a,i]:(fo=o,o=u);n!==u?r=e=[e,n]:(fo=r,r=u)}else fo=r,r=u;return r}()),r}function bi(){var t,r,e,n,o,a,i;return t=fo,(r=ri())!==u&&li()!==u?((e=Ja())===u&&(e=null),e!==u&&li()!==u&&(n=$u())!==u?(a=e,i=n,t=r={type:(o=r).toLowerCase(),keyword:o.toLowerCase(),symbol:a,value:i}):(fo=t,t=u)):(fo=t,t=u),t}function vi(){var r;return t.length>fo?(r=t.charAt(fo),fo++):(r=u,0===yo&&Co(io)),r}function yi(){var r;return so.test(t.charAt(fo))?(r=t.charAt(fo),fo++):(r=u,0===yo&&Co(co)),r}function di(){var r,e;if((r=function(){var r,e;return r=fo,yo++,t.length>fo?(e=t.charAt(fo),fo++):(e=u,0===yo&&Co(io)),yo--,e===u?r=void 0:(fo=r,r=u),r}())===u)if(r=[],yr.test(t.charAt(fo))?(e=t.charAt(fo),fo++):(e=u,0===yo&&Co(dr)),e!==u)for(;e!==u;)r.push(e),yr.test(t.charAt(fo))?(e=t.charAt(fo),fo++):(e=u,0===yo&&Co(dr));else r=u;return r}function hi(){var r,e;return r=fo,Pi=[],void 0!==u&&li()!==u?((e=mi())===u&&(e=function(){var r,e;return r=fo,function(){var r;return"return"===t.substr(fo,6).toLowerCase()?(r=t.substr(fo,6),fo+=6):(r=u,0===yo&&Co(Un)),r}()!==u&&li()!==u&&(e=wi())!==u?r={type:"return",expr:e}:(fo=r,r=u),r}()),e!==u?r={stmt:e,vars:Pi}:(fo=r,r=u)):(fo=r,r=u),r}function mi(){var r,e,n,o;return r=fo,(e=Si())===u&&(e=ji()),e!==u&&li()!==u?((n=function(){var r;return":="===t.substr(fo,2)?(r=":=",fo+=2):(r=u,0===yo&&Co(Rn)),r}())===u&&(n=Ja()),n!==u&&li()!==u&&(o=wi())!==u?r=e={type:"assign",left:e,symbol:n,right:o}:(fo=r,r=u)):(fo=r,r=u),r}function wi(){var r;return(r=Po())===u&&(r=function(){var t,r,e,n,o;return t=fo,(r=Si())!==u&&li()!==u&&(e=ru())!==u&&li()!==u&&(n=Si())!==u&&li()!==u&&(o=nu())!==u?t=r={type:"join",ltable:r,rtable:n,op:e,on:o}:(fo=t,t=u),t}())===u&&(r=Li())===u&&(r=function(){var r,e;return r=fo,function(){var r;return 91===t.charCodeAt(fo)?(r="[",fo++):(r=u,0===yo&&Co(Jn)),r}()!==u&&li()!==u&&(e=Ai())!==u&&li()!==u&&function(){var r;return 93===t.charCodeAt(fo)?(r="]",fo++):(r=u,0===yo&&Co(Xn)),r}()!==u?r={type:"array",value:e}:(fo=r,r=u),r}()),r}function Li(){var t,r,e,n,o,a,i,s;if(t=fo,(r=Ci())!==u){for(e=[],n=fo,(o=li())!==u&&(a=Eu())!==u&&(i=li())!==u&&(s=Ci())!==u?n=o=[o,a,i,s]:(fo=n,n=u);n!==u;)e.push(n),n=fo,(o=li())!==u&&(a=Eu())!==u&&(i=li())!==u&&(s=Ci())!==u?n=o=[o,a,i,s]:(fo=n,n=u);e!==u?t=r=mt(r,e):(fo=t,t=u)}else fo=t,t=u;return t}function Ci(){var t,r,e,n,o,a,i,s;if(t=fo,(r=gi())!==u){for(e=[],n=fo,(o=li())!==u&&(a=Su())!==u&&(i=li())!==u&&(s=gi())!==u?n=o=[o,a,i,s]:(fo=n,n=u);n!==u;)e.push(n),n=fo,(o=li())!==u&&(a=Su())!==u&&(i=li())!==u&&(s=gi())!==u?n=o=[o,a,i,s]:(fo=n,n=u);e!==u?t=r=mt(r,e):(fo=t,t=u)}else fo=t,t=u;return t}function gi(){var t,r;return(t=Du())===u&&(t=Si())===u&&(t=Ei())===u&&(t=qu())===u&&(t=fo,ai()!==u&&li()!==u&&(r=Li())!==u&&li()!==u&&ii()!==u?t=Ut(r):(fo=t,t=u)),t}function Oi(){var t,r,e,n,o,a,i;return t=fo,(r=Iu())!==u?(e=fo,(n=li())!==u&&(o=ni())!==u&&(a=li())!==u&&(i=Iu())!==u?e=n=[n,o,a,i]:(fo=e,e=u),e===u&&(e=null),e!==u?t=r=function(t,r){let e=t;return null!==r&&(e=`${t}.${r[3]}`),e}(r,e):(fo=t,t=u)):(fo=t,t=u),t}function Ei(){var t,r,e;return t=fo,(r=Oi())!==u&&li()!==u&&ai()!==u&&li()!==u?((e=Ai())===u&&(e=null),e!==u&&li()!==u&&ii()!==u?t=r={type:"function",name:r,args:{type:"expr_list",value:e}}:(fo=t,t=u)):(fo=t,t=u),t===u&&(t=fo,(r=Oi())!==u&&(r=function(t){return{type:"function",name:t,args:null}}(r)),t=r),t}function Ai(){var t,r,e,n,o,a,i,c;if(t=fo,(r=gi())!==u){for(e=[],n=fo,(o=li())!==u&&(a=oi())!==u&&(i=li())!==u&&(c=gi())!==u?n=o=[o,a,i,c]:(fo=n,n=u);n!==u;)e.push(n),n=fo,(o=li())!==u&&(a=oi())!==u&&(i=li())!==u&&(c=gi())!==u?n=o=[o,a,i,c]:(fo=n,n=u);e!==u?t=r=s(r,e):(fo=t,t=u)}else fo=t,t=u;return t}function Si(){var t,r,e,n,o;return t=fo,(r=Za())!==u&&(e=ji())!==u?(n=r,o=e,t=r={type:"var",...o,prefix:n}):(fo=t,t=u),t}function ji(){var r,e,n,o,a;return r=fo,(e=Ru())!==u&&(n=function(){var r,e,n,o;for(fo,r=[],e=fo,46===t.charCodeAt(fo)?(n=".",fo++):(n=u,0===yo&&Co(hr)),n!==u&&(o=Ru())!==u?e=n=[n,o]:(fo=e,e=u);e!==u;)r.push(e),e=fo,46===t.charCodeAt(fo)?(n=".",fo++):(n=u,0===yo&&Co(hr)),n!==u&&(o=Ru())!==u?e=n=[n,o]:(fo=e,e=u);return r!==u&&(r=function(t){const r=[];for(let e=0;e<t.length;e++)r.push(t[e][1]);return r}(r)),r}())!==u?(o=e,a=n,Pi.push(o),r=e={type:"var",name:o,members:a,prefix:null}):(fo=r,r=u),r}function Ti(){var r;return(r=function(){var r,e,n,o;if(r=fo,(e=Ua())===u&&(e=Ra()),e!==u)if(li()!==u)if(ai()!==u)if(li()!==u){if(n=[],mr.test(t.charAt(fo))?(o=t.charAt(fo),fo++):(o=u,0===yo&&Co(wr)),o!==u)for(;o!==u;)n.push(o),mr.test(t.charAt(fo))?(o=t.charAt(fo),fo++):(o=u,0===yo&&Co(wr));else n=u;n!==u&&(o=li())!==u&&ii()!==u?r=e={dataType:e,length:parseInt(n.join(""),10)}:(fo=r,r=u)}else fo=r,r=u;else fo=r,r=u;else fo=r,r=u;else fo=r,r=u;return r===u&&(r=fo,(e=Ua())!==u&&(e=lo(e)),(r=e)===u&&(r=fo,(e=Ra())!==u&&(e=lo(e)),r=e)),r}())===u&&(r=function(){var r,e,n,o,a,i,s,c,l,f,p,b,v,y;if(r=fo,(e=xa())===u&&(e=ka())===u&&(e=qa())===u&&(e=Pa())===u&&(e=Da())===u&&(e=Va())===u&&(e=$a())===u&&(e=Ba())===u&&(e=Fa()),e!==u)if((n=li())!==u)if((o=ai())!==u)if((a=li())!==u){if(i=[],mr.test(t.charAt(fo))?(s=t.charAt(fo),fo++):(s=u,0===yo&&Co(wr)),s!==u)for(;s!==u;)i.push(s),mr.test(t.charAt(fo))?(s=t.charAt(fo),fo++):(s=u,0===yo&&Co(wr));else i=u;if(i!==u)if((s=li())!==u){if(c=fo,(l=oi())!==u)if((f=li())!==u){if(p=[],mr.test(t.charAt(fo))?(b=t.charAt(fo),fo++):(b=u,0===yo&&Co(wr)),b!==u)for(;b!==u;)p.push(b),mr.test(t.charAt(fo))?(b=t.charAt(fo),fo++):(b=u,0===yo&&Co(wr));else p=u;p!==u?c=l=[l,f,p]:(fo=c,c=u)}else fo=c,c=u;else fo=c,c=u;c===u&&(c=null),c!==u&&(l=li())!==u&&(f=ii())!==u&&(p=li())!==u?((b=Ii())===u&&(b=null),b!==u?(v=c,y=b,r=e={dataType:e,length:parseInt(i.join(""),10),scale:v&&parseInt(v[2].join(""),10),parentheses:!0,suffix:y}):(fo=r,r=u)):(fo=r,r=u)}else fo=r,r=u;else fo=r,r=u}else fo=r,r=u;else fo=r,r=u;else fo=r,r=u;else fo=r,r=u;if(r===u){if(r=fo,(e=xa())===u&&(e=ka())===u&&(e=qa())===u&&(e=Pa())===u&&(e=Da())===u&&(e=Va())===u&&(e=$a())===u&&(e=Ba())===u&&(e=Fa()),e!==u){if(n=[],mr.test(t.charAt(fo))?(o=t.charAt(fo),fo++):(o=u,0===yo&&Co(wr)),o!==u)for(;o!==u;)n.push(o),mr.test(t.charAt(fo))?(o=t.charAt(fo),fo++):(o=u,0===yo&&Co(wr));else n=u;n!==u&&(o=li())!==u?((a=Ii())===u&&(a=null),a!==u?(e=function(t,r,e){return{dataType:t,length:parseInt(r.join(""),10),suffix:e}}(e,n,a),r=e):(fo=r,r=u)):(fo=r,r=u)}else fo=r,r=u;r===u&&(r=fo,(e=xa())===u&&(e=ka())===u&&(e=qa())===u&&(e=Pa())===u&&(e=Da())===u&&(e=Va())===u&&(e=$a())===u&&(e=Ba())===u&&(e=Fa()),e!==u&&(n=li())!==u?((o=Ii())===u&&(o=null),o!==u&&(a=li())!==u?r=e=function(t,r){return{dataType:t,suffix:r}}(e,o):(fo=r,r=u)):(fo=r,r=u))}return r}())===u&&(r=function(){var t;return fo,(t=Ha())===u&&(t=Qa())===u&&(t=Ga())===u&&(t=Wa()),t!==u&&(t=lo(t)),t}())===u&&(r=function(){var r;return fo,(r=function(){var r,e,n,o;return r=fo,"json"===t.substr(fo,4).toLowerCase()?(e=t.substr(fo,4),fo+=4):(e=u,0===yo&&Co(Ze)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e="JSON":(fo=r,r=u)):(fo=r,r=u),r}())!==u&&(r=lo(r)),r}())===u&&(r=function(){var r;return fo,(r=function(){var r,e,n,o;return r=fo,"tinytext"===t.substr(fo,8).toLowerCase()?(e=t.substr(fo,8),fo+=8):(e=u,0===yo&&Co(Ke)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e="TINYTEXT":(fo=r,r=u)):(fo=r,r=u),r}())===u&&(r=function(){var r,e,n,o;return r=fo,"text"===t.substr(fo,4).toLowerCase()?(e=t.substr(fo,4),fo+=4):(e=u,0===yo&&Co(ze)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e="TEXT":(fo=r,r=u)):(fo=r,r=u),r}())===u&&(r=function(){var r,e,n,o;return r=fo,"mediumtext"===t.substr(fo,10).toLowerCase()?(e=t.substr(fo,10),fo+=10):(e=u,0===yo&&Co(tn)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e="MEDIUMTEXT":(fo=r,r=u)):(fo=r,r=u),r}())===u&&(r=function(){var r,e,n,o;return r=fo,"longtext"===t.substr(fo,8).toLowerCase()?(e=t.substr(fo,8),fo+=8):(e=u,0===yo&&Co(rn)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e="LONGTEXT":(fo=r,r=u)):(fo=r,r=u),r}()),r!==u&&(r={dataType:r}),r}()),r}function Ii(){var r,e,n;return r=fo,(e=Ma())===u&&(e=null),e!==u&&li()!==u?((n=function(){var r,e,n,o;return r=fo,"zerofill"===t.substr(fo,8).toLowerCase()?(e=t.substr(fo,8),fo+=8):(e=u,0===yo&&Co(We)),e!==u?(n=fo,yo++,o=xu(),yo--,o===u?n=void 0:(fo=n,n=u),n!==u?r=e="ZEROFILL":(fo=r,r=u)):(fo=r,r=u),r}())===u&&(n=null),n!==u?r=e=function(t,r){const e=[];return t&&e.push(t),r&&e.push(r),e}(e,n):(fo=r,r=u)):(fo=r,r=u),r}const Ni={ALTER:!0,ALL:!0,ADD:!0,AND:!0,AS:!0,ASC:!0,BETWEEN:!0,BY:!0,CALL:!0,CASE:!0,CREATE:!0,CONTAINS:!0,CURRENT_DATE:!0,CURRENT_TIME:!0,CURRENT_TIMESTAMP:!0,CURRENT_USER:!0,DELETE:!0,DESC:!0,DISTINCT:!0,DROP:!0,ELSE:!0,END:!0,EXISTS:!0,EXPLAIN:!0,FALSE:!0,FROM:!0,FULL:!0,GROUP:!0,HAVING:!0,IN:!0,INNER:!0,INSERT:!0,INTO:!0,IS:!0,JOIN:!0,JSON:!0,KEY:!0,LEFT:!0,LIKE:!0,LIMIT:!0,LOW_PRIORITY:!0,NOT:!0,NULL:!0,ON:!0,OR:!0,ORDER:!0,OUTER:!0,RECURSIVE:!0,RENAME:!0,READ:!0,RIGHT:!0,SELECT:!0,SESSION_USER:!0,SET:!0,SHOW:!0,SYSTEM_USER:!0,TABLE:!0,THEN:!0,TRUE:!0,TRUNCATE:!0,UNION:!0,UPDATE:!0,USING:!0,VALUES:!0,WITH:!0,WHEN:!0,WHERE:!0,WRITE:!0,GLOBAL:!0,SESSION:!0,LOCAL:!0,PERSIST:!0,PERSIST_ONLY:!0};function _i(t,r){return{type:"unary_expr",operator:t,expr:r}}function Ui(t,r,e){return{type:"binary_expr",operator:t,left:r,right:e}}function Ri(t){const r=n(Number.MAX_SAFE_INTEGER);return!(n(t)<r)}function xi(t,r){const e=[t];for(let t=0;t<r.length;t++)e.push(r[t][3]);return e}function ki(t,r){let e=t;for(let t=0;t<r.length;t++)e=Ui(r[t][1],e,r[t][3]);return e}function Mi(t){return $i[t]||t||null}function qi(t){const r=[];for(let e of t.keys()){const t=e.split("::");if(!t){r.push(e);break}t&&t[1]&&(t[1]=Mi(t[1])),r.push(t.join("::"))}return r}let Pi=[];const Di=new Set,Vi=new Set,$i={};if((e=i())!==u&&fo===t.length)return e;throw e!==u&&fo<t.length&&Co({type:"end"}),function(t,r,e){return new o(o.buildMessage(t,r),t,r,e)}(vo,bo<t.length?t.charAt(bo):null,bo<t.length?Lo(bo,bo+1):Lo(bo,bo))}}},function(t,r,e){t.exports=e(17)},function(t,r,e){"use strict";e.r(r),function(t){var n=e(14);e.d(r,"Parser",(function(){return n.a}));var o=e(0);e.d(r,"util",(function(){return o})),t&&t.window&&(t.window.NodeSQLParser={Parser:n.a,util:o})}.call(this,e(18))},function(t,r){var e;e=function(){return this}();try{e=e||new Function("return this")()}catch(t){"object"==typeof window&&(e=window)}t.exports=e},function(t,r,e){(function(t){var n,o=function(t){"use strict";var r=1e7,e=9007199254740992,n=f(e),u="function"==typeof BigInt;function a(t,r,e,n){return void 0===t?a[0]:void 0===r||10==+r&&!e?Q(t):V(t,r,e,n)}function i(t,r){this.value=t,this.sign=r,this.isSmall=!1}function s(t){this.value=t,this.sign=t<0,this.isSmall=!0}function c(t){this.value=t}function l(t){return-e<t&&t<e}function f(t){return t<1e7?[t]:t<1e14?[t%1e7,Math.floor(t/1e7)]:[t%1e7,Math.floor(t/1e7)%1e7,Math.floor(t/1e14)]}function p(t){b(t);var e=t.length;if(e<4&&T(t,n)<0)switch(e){case 0:return 0;case 1:return t[0];case 2:return t[0]+t[1]*r;default:return t[0]+(t[1]+t[2]*r)*r}return t}function b(t){for(var r=t.length;0===t[--r];);t.length=r+1}function v(t){for(var r=new Array(t),e=-1;++e<t;)r[e]=0;return r}function y(t){return t>0?Math.floor(t):Math.ceil(t)}function d(t,e){var n,o,u=t.length,a=e.length,i=new Array(u),s=0,c=r;for(o=0;o<a;o++)s=(n=t[o]+e[o]+s)>=c?1:0,i[o]=n-s*c;for(;o<u;)s=(n=t[o]+s)===c?1:0,i[o++]=n-s*c;return s>0&&i.push(s),i}function h(t,r){return t.length>=r.length?d(t,r):d(r,t)}function m(t,e){var n,o,u=t.length,a=new Array(u),i=r;for(o=0;o<u;o++)n=t[o]-i+e,e=Math.floor(n/i),a[o]=n-e*i,e+=1;for(;e>0;)a[o++]=e%i,e=Math.floor(e/i);return a}function w(t,r){var e,n,o=t.length,u=r.length,a=new Array(o),i=0;for(e=0;e<u;e++)(n=t[e]-i-r[e])<0?(n+=1e7,i=1):i=0,a[e]=n;for(e=u;e<o;e++){if(!((n=t[e]-i)<0)){a[e++]=n;break}n+=1e7,a[e]=n}for(;e<o;e++)a[e]=t[e];return b(a),a}function L(t,r,e){var n,o,u=t.length,a=new Array(u),c=-r;for(n=0;n<u;n++)o=t[n]+c,c=Math.floor(o/1e7),o%=1e7,a[n]=o<0?o+1e7:o;return"number"==typeof(a=p(a))?(e&&(a=-a),new s(a)):new i(a,e)}function C(t,r){var e,n,o,u,a=t.length,i=r.length,s=v(a+i);for(o=0;o<a;++o){u=t[o];for(var c=0;c<i;++c)e=u*r[c]+s[o+c],n=Math.floor(e/1e7),s[o+c]=e-1e7*n,s[o+c+1]+=n}return b(s),s}function g(t,e){var n,o,u=t.length,a=new Array(u),i=r,s=0;for(o=0;o<u;o++)n=t[o]*e+s,s=Math.floor(n/i),a[o]=n-s*i;for(;s>0;)a[o++]=s%i,s=Math.floor(s/i);return a}function O(t,r){for(var e=[];r-- >0;)e.push(0);return e.concat(t)}function E(t,e,n){return new i(t<r?g(e,t):C(e,f(t)),n)}function A(t){var r,e,n,o,u=t.length,a=v(u+u);for(n=0;n<u;n++){e=0-(o=t[n])*o;for(var i=n;i<u;i++)r=o*t[i]*2+a[n+i]+e,e=Math.floor(r/1e7),a[n+i]=r-1e7*e;a[n+u]=e}return b(a),a}function S(t,r){var e,n,o,u,a=t.length,i=v(a);for(o=0,e=a-1;e>=0;--e)o=(u=1e7*o+t[e])-(n=y(u/r))*r,i[e]=0|n;return[i,0|o]}function j(t,e){var n,o=Q(e);if(u)return[new c(t.value/o.value),new c(t.value%o.value)];var l,d=t.value,h=o.value;if(0===h)throw new Error("Cannot divide by zero");if(t.isSmall)return o.isSmall?[new s(y(d/h)),new s(d%h)]:[a[0],t];if(o.isSmall){if(1===h)return[t,a[0]];if(-1==h)return[t.negate(),a[0]];var m=Math.abs(h);if(m<r){l=p((n=S(d,m))[0]);var L=n[1];return t.sign&&(L=-L),"number"==typeof l?(t.sign!==o.sign&&(l=-l),[new s(l),new s(L)]):[new i(l,t.sign!==o.sign),new s(L)]}h=f(m)}var C=T(d,h);if(-1===C)return[a[0],t];if(0===C)return[a[t.sign===o.sign?1:-1],a[0]];l=(n=d.length+h.length<=200?function(t,e){var n,o,u,a,i,s,c,l=t.length,f=e.length,b=r,y=v(e.length),d=e[f-1],h=Math.ceil(b/(2*d)),m=g(t,h),w=g(e,h);for(m.length<=l&&m.push(0),w.push(0),d=w[f-1],o=l-f;o>=0;o--){for(n=b-1,m[o+f]!==d&&(n=Math.floor((m[o+f]*b+m[o+f-1])/d)),u=0,a=0,s=w.length,i=0;i<s;i++)u+=n*w[i],c=Math.floor(u/b),a+=m[o+i]-(u-c*b),u=c,a<0?(m[o+i]=a+b,a=-1):(m[o+i]=a,a=0);for(;0!==a;){for(n-=1,u=0,i=0;i<s;i++)(u+=m[o+i]-b+w[i])<0?(m[o+i]=u+b,u=0):(m[o+i]=u,u=1);a+=u}y[o]=n}return m=S(m,h)[0],[p(y),p(m)]}(d,h):function(t,r){for(var e,n,o,u,a,i=t.length,s=r.length,c=[],l=[];i;)if(l.unshift(t[--i]),b(l),T(l,r)<0)c.push(0);else{o=1e7*l[(n=l.length)-1]+l[n-2],u=1e7*r[s-1]+r[s-2],n>s&&(o=1e7*(o+1)),e=Math.ceil(o/u);do{if(T(a=g(r,e),l)<=0)break;e--}while(e);c.push(e),l=w(l,a)}return c.reverse(),[p(c),p(l)]}(d,h))[0];var O=t.sign!==o.sign,E=n[1],A=t.sign;return"number"==typeof l?(O&&(l=-l),l=new s(l)):l=new i(l,O),"number"==typeof E?(A&&(E=-E),E=new s(E)):E=new i(E,A),[l,E]}function T(t,r){if(t.length!==r.length)return t.length>r.length?1:-1;for(var e=t.length-1;e>=0;e--)if(t[e]!==r[e])return t[e]>r[e]?1:-1;return 0}function I(t){var r=t.abs();return!r.isUnit()&&(!!(r.equals(2)||r.equals(3)||r.equals(5))||!(r.isEven()||r.isDivisibleBy(3)||r.isDivisibleBy(5))&&(!!r.lesser(49)||void 0))}function N(t,r){for(var e,n,u,a=t.prev(),i=a,s=0;i.isEven();)i=i.divide(2),s++;t:for(n=0;n<r.length;n++)if(!t.lesser(r[n])&&!(u=o(r[n]).modPow(i,t)).isUnit()&&!u.equals(a)){for(e=s-1;0!=e;e--){if((u=u.square().mod(t)).isUnit())return!1;if(u.equals(a))continue t}return!1}return!0}i.prototype=Object.create(a.prototype),s.prototype=Object.create(a.prototype),c.prototype=Object.create(a.prototype),i.prototype.add=function(t){var r=Q(t);if(this.sign!==r.sign)return this.subtract(r.negate());var e=this.value,n=r.value;return r.isSmall?new i(m(e,Math.abs(n)),this.sign):new i(h(e,n),this.sign)},i.prototype.plus=i.prototype.add,s.prototype.add=function(t){var r=Q(t),e=this.value;if(e<0!==r.sign)return this.subtract(r.negate());var n=r.value;if(r.isSmall){if(l(e+n))return new s(e+n);n=f(Math.abs(n))}return new i(m(n,Math.abs(e)),e<0)},s.prototype.plus=s.prototype.add,c.prototype.add=function(t){return new c(this.value+Q(t).value)},c.prototype.plus=c.prototype.add,i.prototype.subtract=function(t){var r=Q(t);if(this.sign!==r.sign)return this.add(r.negate());var e=this.value,n=r.value;return r.isSmall?L(e,Math.abs(n),this.sign):function(t,r,e){var n;return T(t,r)>=0?n=w(t,r):(n=w(r,t),e=!e),"number"==typeof(n=p(n))?(e&&(n=-n),new s(n)):new i(n,e)}(e,n,this.sign)},i.prototype.minus=i.prototype.subtract,s.prototype.subtract=function(t){var r=Q(t),e=this.value;if(e<0!==r.sign)return this.add(r.negate());var n=r.value;return r.isSmall?new s(e-n):L(n,Math.abs(e),e>=0)},s.prototype.minus=s.prototype.subtract,c.prototype.subtract=function(t){return new c(this.value-Q(t).value)},c.prototype.minus=c.prototype.subtract,i.prototype.negate=function(){return new i(this.value,!this.sign)},s.prototype.negate=function(){var t=this.sign,r=new s(-this.value);return r.sign=!t,r},c.prototype.negate=function(){return new c(-this.value)},i.prototype.abs=function(){return new i(this.value,!1)},s.prototype.abs=function(){return new s(Math.abs(this.value))},c.prototype.abs=function(){return new c(this.value>=0?this.value:-this.value)},i.prototype.multiply=function(t){var e,n,o,u=Q(t),s=this.value,c=u.value,l=this.sign!==u.sign;if(u.isSmall){if(0===c)return a[0];if(1===c)return this;if(-1===c)return this.negate();if((e=Math.abs(c))<r)return new i(g(s,e),l);c=f(e)}return new i(-.012*(n=s.length)-.012*(o=c.length)+15e-6*n*o>0?function t(r,e){var n=Math.max(r.length,e.length);if(n<=30)return C(r,e);n=Math.ceil(n/2);var o=r.slice(n),u=r.slice(0,n),a=e.slice(n),i=e.slice(0,n),s=t(u,i),c=t(o,a),l=t(h(u,o),h(i,a)),f=h(h(s,O(w(w(l,s),c),n)),O(c,2*n));return b(f),f}(s,c):C(s,c),l)},i.prototype.times=i.prototype.multiply,s.prototype._multiplyBySmall=function(t){return l(t.value*this.value)?new s(t.value*this.value):E(Math.abs(t.value),f(Math.abs(this.value)),this.sign!==t.sign)},i.prototype._multiplyBySmall=function(t){return 0===t.value?a[0]:1===t.value?this:-1===t.value?this.negate():E(Math.abs(t.value),this.value,this.sign!==t.sign)},s.prototype.multiply=function(t){return Q(t)._multiplyBySmall(this)},s.prototype.times=s.prototype.multiply,c.prototype.multiply=function(t){return new c(this.value*Q(t).value)},c.prototype.times=c.prototype.multiply,i.prototype.square=function(){return new i(A(this.value),!1)},s.prototype.square=function(){var t=this.value*this.value;return l(t)?new s(t):new i(A(f(Math.abs(this.value))),!1)},c.prototype.square=function(t){return new c(this.value*this.value)},i.prototype.divmod=function(t){var r=j(this,t);return{quotient:r[0],remainder:r[1]}},c.prototype.divmod=s.prototype.divmod=i.prototype.divmod,i.prototype.divide=function(t){return j(this,t)[0]},c.prototype.over=c.prototype.divide=function(t){return new c(this.value/Q(t).value)},s.prototype.over=s.prototype.divide=i.prototype.over=i.prototype.divide,i.prototype.mod=function(t){return j(this,t)[1]},c.prototype.mod=c.prototype.remainder=function(t){return new c(this.value%Q(t).value)},s.prototype.remainder=s.prototype.mod=i.prototype.remainder=i.prototype.mod,i.prototype.pow=function(t){var r,e,n,o=Q(t),u=this.value,i=o.value;if(0===i)return a[1];if(0===u)return a[0];if(1===u)return a[1];if(-1===u)return o.isEven()?a[1]:a[-1];if(o.sign)return a[0];if(!o.isSmall)throw new Error("The exponent "+o.toString()+" is too large.");if(this.isSmall&&l(r=Math.pow(u,i)))return new s(y(r));for(e=this,n=a[1];!0&i&&(n=n.times(e),--i),0!==i;)i/=2,e=e.square();return n},s.prototype.pow=i.prototype.pow,c.prototype.pow=function(t){var r=Q(t),e=this.value,n=r.value,o=BigInt(0),u=BigInt(1),i=BigInt(2);if(n===o)return a[1];if(e===o)return a[0];if(e===u)return a[1];if(e===BigInt(-1))return r.isEven()?a[1]:a[-1];if(r.isNegative())return new c(o);for(var s=this,l=a[1];(n&u)===u&&(l=l.times(s),--n),n!==o;)n/=i,s=s.square();return l},i.prototype.modPow=function(t,r){if(t=Q(t),(r=Q(r)).isZero())throw new Error("Cannot take modPow with modulus 0");var e=a[1],n=this.mod(r);for(t.isNegative()&&(t=t.multiply(a[-1]),n=n.modInv(r));t.isPositive();){if(n.isZero())return a[0];t.isOdd()&&(e=e.multiply(n).mod(r)),t=t.divide(2),n=n.square().mod(r)}return e},c.prototype.modPow=s.prototype.modPow=i.prototype.modPow,i.prototype.compareAbs=function(t){var r=Q(t),e=this.value,n=r.value;return r.isSmall?1:T(e,n)},s.prototype.compareAbs=function(t){var r=Q(t),e=Math.abs(this.value),n=r.value;return r.isSmall?e===(n=Math.abs(n))?0:e>n?1:-1:-1},c.prototype.compareAbs=function(t){var r=this.value,e=Q(t).value;return(r=r>=0?r:-r)===(e=e>=0?e:-e)?0:r>e?1:-1},i.prototype.compare=function(t){if(t===1/0)return-1;if(t===-1/0)return 1;var r=Q(t),e=this.value,n=r.value;return this.sign!==r.sign?r.sign?1:-1:r.isSmall?this.sign?-1:1:T(e,n)*(this.sign?-1:1)},i.prototype.compareTo=i.prototype.compare,s.prototype.compare=function(t){if(t===1/0)return-1;if(t===-1/0)return 1;var r=Q(t),e=this.value,n=r.value;return r.isSmall?e==n?0:e>n?1:-1:e<0!==r.sign?e<0?-1:1:e<0?1:-1},s.prototype.compareTo=s.prototype.compare,c.prototype.compare=function(t){if(t===1/0)return-1;if(t===-1/0)return 1;var r=this.value,e=Q(t).value;return r===e?0:r>e?1:-1},c.prototype.compareTo=c.prototype.compare,i.prototype.equals=function(t){return 0===this.compare(t)},c.prototype.eq=c.prototype.equals=s.prototype.eq=s.prototype.equals=i.prototype.eq=i.prototype.equals,i.prototype.notEquals=function(t){return 0!==this.compare(t)},c.prototype.neq=c.prototype.notEquals=s.prototype.neq=s.prototype.notEquals=i.prototype.neq=i.prototype.notEquals,i.prototype.greater=function(t){return this.compare(t)>0},c.prototype.gt=c.prototype.greater=s.prototype.gt=s.prototype.greater=i.prototype.gt=i.prototype.greater,i.prototype.lesser=function(t){return this.compare(t)<0},c.prototype.lt=c.prototype.lesser=s.prototype.lt=s.prototype.lesser=i.prototype.lt=i.prototype.lesser,i.prototype.greaterOrEquals=function(t){return this.compare(t)>=0},c.prototype.geq=c.prototype.greaterOrEquals=s.prototype.geq=s.prototype.greaterOrEquals=i.prototype.geq=i.prototype.greaterOrEquals,i.prototype.lesserOrEquals=function(t){return this.compare(t)<=0},c.prototype.leq=c.prototype.lesserOrEquals=s.prototype.leq=s.prototype.lesserOrEquals=i.prototype.leq=i.prototype.lesserOrEquals,i.prototype.isEven=function(){return 0==(1&this.value[0])},s.prototype.isEven=function(){return 0==(1&this.value)},c.prototype.isEven=function(){return(this.value&BigInt(1))===BigInt(0)},i.prototype.isOdd=function(){return 1==(1&this.value[0])},s.prototype.isOdd=function(){return 1==(1&this.value)},c.prototype.isOdd=function(){return(this.value&BigInt(1))===BigInt(1)},i.prototype.isPositive=function(){return!this.sign},s.prototype.isPositive=function(){return this.value>0},c.prototype.isPositive=s.prototype.isPositive,i.prototype.isNegative=function(){return this.sign},s.prototype.isNegative=function(){return this.value<0},c.prototype.isNegative=s.prototype.isNegative,i.prototype.isUnit=function(){return!1},s.prototype.isUnit=function(){return 1===Math.abs(this.value)},c.prototype.isUnit=function(){return this.abs().value===BigInt(1)},i.prototype.isZero=function(){return!1},s.prototype.isZero=function(){return 0===this.value},c.prototype.isZero=function(){return this.value===BigInt(0)},i.prototype.isDivisibleBy=function(t){var r=Q(t);return!r.isZero()&&(!!r.isUnit()||(0===r.compareAbs(2)?this.isEven():this.mod(r).isZero()))},c.prototype.isDivisibleBy=s.prototype.isDivisibleBy=i.prototype.isDivisibleBy,i.prototype.isPrime=function(t){var r=I(this);if(void 0!==r)return r;var e=this.abs(),n=e.bitLength();if(n<=64)return N(e,[2,3,5,7,11,13,17,19,23,29,31,37]);for(var u=Math.log(2)*n.toJSNumber(),a=Math.ceil(!0===t?2*Math.pow(u,2):u),i=[],s=0;s<a;s++)i.push(o(s+2));return N(e,i)},c.prototype.isPrime=s.prototype.isPrime=i.prototype.isPrime,i.prototype.isProbablePrime=function(t,r){var e=I(this);if(void 0!==e)return e;for(var n=this.abs(),u=void 0===t?5:t,a=[],i=0;i<u;i++)a.push(o.randBetween(2,n.minus(2),r));return N(n,a)},c.prototype.isProbablePrime=s.prototype.isProbablePrime=i.prototype.isProbablePrime,i.prototype.modInv=function(t){for(var r,e,n,u=o.zero,a=o.one,i=Q(t),s=this.abs();!s.isZero();)r=i.divide(s),e=u,n=i,u=a,i=s,a=e.subtract(r.multiply(a)),s=n.subtract(r.multiply(s));if(!i.isUnit())throw new Error(this.toString()+" and "+t.toString()+" are not co-prime");return-1===u.compare(0)&&(u=u.add(t)),this.isNegative()?u.negate():u},c.prototype.modInv=s.prototype.modInv=i.prototype.modInv,i.prototype.next=function(){var t=this.value;return this.sign?L(t,1,this.sign):new i(m(t,1),this.sign)},s.prototype.next=function(){var t=this.value;return t+1<e?new s(t+1):new i(n,!1)},c.prototype.next=function(){return new c(this.value+BigInt(1))},i.prototype.prev=function(){var t=this.value;return this.sign?new i(m(t,1),!0):L(t,1,this.sign)},s.prototype.prev=function(){var t=this.value;return t-1>-e?new s(t-1):new i(n,!0)},c.prototype.prev=function(){return new c(this.value-BigInt(1))};for(var _=[1];2*_[_.length-1]<=r;)_.push(2*_[_.length-1]);var U=_.length,R=_[U-1];function x(t){return Math.abs(t)<=r}function k(t,r,e){r=Q(r);for(var n=t.isNegative(),u=r.isNegative(),a=n?t.not():t,i=u?r.not():r,s=0,c=0,l=null,f=null,p=[];!a.isZero()||!i.isZero();)s=(l=j(a,R))[1].toJSNumber(),n&&(s=R-1-s),c=(f=j(i,R))[1].toJSNumber(),u&&(c=R-1-c),a=l[0],i=f[0],p.push(e(s,c));for(var b=0!==e(n?1:0,u?1:0)?o(-1):o(0),v=p.length-1;v>=0;v-=1)b=b.multiply(R).add(o(p[v]));return b}function M(t){var e=t.value,n="number"==typeof e?e|1<<30:"bigint"==typeof e?e|BigInt(1<<30):e[0]+e[1]*r|1073758208;return n&-n}function q(t,r){return t=Q(t),r=Q(r),t.greater(r)?t:r}function P(t,r){return t=Q(t),r=Q(r),t.lesser(r)?t:r}function D(t,r){if(t=Q(t).abs(),r=Q(r).abs(),t.equals(r))return t;if(t.isZero())return r;if(r.isZero())return t;for(var e,n,o=a[1];t.isEven()&&r.isEven();)e=P(M(t),M(r)),t=t.divide(e),r=r.divide(e),o=o.multiply(e);for(;t.isEven();)t=t.divide(M(t));do{for(;r.isEven();)r=r.divide(M(r));t.greater(r)&&(n=r,r=t,t=n),r=r.subtract(t)}while(!r.isZero());return o.isUnit()?t:t.multiply(o)}i.prototype.shiftLeft=function(t){var r=Q(t).toJSNumber();if(!x(r))throw new Error(String(r)+" is too large for shifting.");if(r<0)return this.shiftRight(-r);var e=this;if(e.isZero())return e;for(;r>=U;)e=e.multiply(R),r-=U-1;return e.multiply(_[r])},c.prototype.shiftLeft=s.prototype.shiftLeft=i.prototype.shiftLeft,i.prototype.shiftRight=function(t){var r,e=Q(t).toJSNumber();if(!x(e))throw new Error(String(e)+" is too large for shifting.");if(e<0)return this.shiftLeft(-e);for(var n=this;e>=U;){if(n.isZero()||n.isNegative()&&n.isUnit())return n;n=(r=j(n,R))[1].isNegative()?r[0].prev():r[0],e-=U-1}return(r=j(n,_[e]))[1].isNegative()?r[0].prev():r[0]},c.prototype.shiftRight=s.prototype.shiftRight=i.prototype.shiftRight,i.prototype.not=function(){return this.negate().prev()},c.prototype.not=s.prototype.not=i.prototype.not,i.prototype.and=function(t){return k(this,t,(function(t,r){return t&r}))},c.prototype.and=s.prototype.and=i.prototype.and,i.prototype.or=function(t){return k(this,t,(function(t,r){return t|r}))},c.prototype.or=s.prototype.or=i.prototype.or,i.prototype.xor=function(t){return k(this,t,(function(t,r){return t^r}))},c.prototype.xor=s.prototype.xor=i.prototype.xor,i.prototype.bitLength=function(){var t=this;return t.compareTo(o(0))<0&&(t=t.negate().subtract(o(1))),0===t.compareTo(o(0))?o(0):o(function t(r,e){if(e.compareTo(r)<=0){var n=t(r,e.square(e)),u=n.p,a=n.e,i=u.multiply(e);return i.compareTo(r)<=0?{p:i,e:2*a+1}:{p:u,e:2*a}}return{p:o(1),e:0}}(t,o(2)).e).add(o(1))},c.prototype.bitLength=s.prototype.bitLength=i.prototype.bitLength;var V=function(t,r,e,n){e=e||"0123456789abcdefghijklmnopqrstuvwxyz",t=String(t),n||(t=t.toLowerCase(),e=e.toLowerCase());var o,u=t.length,a=Math.abs(r),i={};for(o=0;o<e.length;o++)i[e[o]]=o;for(o=0;o<u;o++)if("-"!==(l=t[o])&&l in i&&i[l]>=a){if("1"===l&&1===a)continue;throw new Error(l+" is not a valid digit in base "+r+".")}r=Q(r);var s=[],c="-"===t[0];for(o=c?1:0;o<t.length;o++){var l;if((l=t[o])in i)s.push(Q(i[l]));else{if("<"!==l)throw new Error(l+" is not a valid character");var f=o;do{o++}while(">"!==t[o]&&o<t.length);s.push(Q(t.slice(f+1,o)))}}return $(s,r,c)};function $(t,r,e){var n,o=a[0],u=a[1];for(n=t.length-1;n>=0;n--)o=o.add(t[n].times(u)),u=u.times(r);return e?o.negate():o}function B(t,r){if((r=o(r)).isZero()){if(t.isZero())return{value:[0],isNegative:!1};throw new Error("Cannot convert nonzero numbers to base 0.")}if(r.equals(-1)){if(t.isZero())return{value:[0],isNegative:!1};if(t.isNegative())return{value:[].concat.apply([],Array.apply(null,Array(-t.toJSNumber())).map(Array.prototype.valueOf,[1,0])),isNegative:!1};var e=Array.apply(null,Array(t.toJSNumber()-1)).map(Array.prototype.valueOf,[0,1]);return e.unshift([1]),{value:[].concat.apply([],e),isNegative:!1}}var n=!1;if(t.isNegative()&&r.isPositive()&&(n=!0,t=t.abs()),r.isUnit())return t.isZero()?{value:[0],isNegative:!1}:{value:Array.apply(null,Array(t.toJSNumber())).map(Number.prototype.valueOf,1),isNegative:n};for(var u,a=[],i=t;i.isNegative()||i.compareAbs(r)>=0;){u=i.divmod(r),i=u.quotient;var s=u.remainder;s.isNegative()&&(s=r.minus(s).abs(),i=i.next()),a.push(s.toJSNumber())}return a.push(i.toJSNumber()),{value:a.reverse(),isNegative:n}}function F(t,r,e){var n=B(t,r);return(n.isNegative?"-":"")+n.value.map((function(t){return function(t,r){return t<(r=r||"0123456789abcdefghijklmnopqrstuvwxyz").length?r[t]:"<"+t+">"}(t,e)})).join("")}function H(t){if(l(+t)){var r=+t;if(r===y(r))return u?new c(BigInt(r)):new s(r);throw new Error("Invalid integer: "+t)}var e="-"===t[0];e&&(t=t.slice(1));var n=t.split(/e/i);if(n.length>2)throw new Error("Invalid integer: "+n.join("e"));if(2===n.length){var o=n[1];if("+"===o[0]&&(o=o.slice(1)),(o=+o)!==y(o)||!l(o))throw new Error("Invalid integer: "+o+" is not a valid exponent.");var a=n[0],f=a.indexOf(".");if(f>=0&&(o-=a.length-f-1,a=a.slice(0,f)+a.slice(f+1)),o<0)throw new Error("Cannot include negative exponent part for integers");t=a+=new Array(o+1).join("0")}if(!/^([0-9][0-9]*)$/.test(t))throw new Error("Invalid integer: "+t);if(u)return new c(BigInt(e?"-"+t:t));for(var p=[],v=t.length,d=v-7;v>0;)p.push(+t.slice(d,v)),(d-=7)<0&&(d=0),v-=7;return b(p),new i(p,e)}function Q(t){return"number"==typeof t?function(t){if(u)return new c(BigInt(t));if(l(t)){if(t!==y(t))throw new Error(t+" is not an integer.");return new s(t)}return H(t.toString())}(t):"string"==typeof t?H(t):"bigint"==typeof t?new c(t):t}i.prototype.toArray=function(t){return B(this,t)},s.prototype.toArray=function(t){return B(this,t)},c.prototype.toArray=function(t){return B(this,t)},i.prototype.toString=function(t,r){if(void 0===t&&(t=10),10!==t)return F(this,t,r);for(var e,n=this.value,o=n.length,u=String(n[--o]);--o>=0;)e=String(n[o]),u+="0000000".slice(e.length)+e;return(this.sign?"-":"")+u},s.prototype.toString=function(t,r){return void 0===t&&(t=10),10!=t?F(this,t,r):String(this.value)},c.prototype.toString=s.prototype.toString,c.prototype.toJSON=i.prototype.toJSON=s.prototype.toJSON=function(){return this.toString()},i.prototype.valueOf=function(){return parseInt(this.toString(),10)},i.prototype.toJSNumber=i.prototype.valueOf,s.prototype.valueOf=function(){return this.value},s.prototype.toJSNumber=s.prototype.valueOf,c.prototype.valueOf=c.prototype.toJSNumber=function(){return parseInt(this.toString(),10)};for(var G=0;G<1e3;G++)a[G]=Q(G),G>0&&(a[-G]=Q(-G));return a.one=a[1],a.zero=a[0],a.minusOne=a[-1],a.max=q,a.min=P,a.gcd=D,a.lcm=function(t,r){return t=Q(t).abs(),r=Q(r).abs(),t.divide(D(t,r)).multiply(r)},a.isInstance=function(t){return t instanceof i||t instanceof s||t instanceof c},a.randBetween=function(t,e,n){t=Q(t),e=Q(e);var o=n||Math.random,u=P(t,e),i=q(t,e).subtract(u).add(1);if(i.isSmall)return u.add(Math.floor(o()*i));for(var s=B(i,r).value,c=[],l=!0,f=0;f<s.length;f++){var p=l?s[f]:r,b=y(o()*p);c.push(b),b<p&&(l=!1)}return u.add(a.fromArray(c,r,!1))},a.fromArray=function(t,r,e){return $(t.map(Q),Q(r||10),e)},a}();t.hasOwnProperty("exports")&&(t.exports=o),void 0===(n=function(){return o}.call(r,e,r,t))||(t.exports=n)}).call(this,e(20)(t))},function(t,r){t.exports=function(t){return t.webpackPolyfill||(t.deprecate=function(){},t.paths=[],t.children||(t.children=[]),Object.defineProperty(t,"loaded",{enumerable:!0,get:function(){return t.l}}),Object.defineProperty(t,"id",{enumerable:!0,get:function(){return t.i}}),t.webpackPolyfill=1),t}}])}));
!function(n,r,t){var e,o=256,i="random",u=t.pow(o,6),f=t.pow(2,52),a=2*f,c=255;function s(c,s,y){function h(){for(var n=j.g(6),r=u,t=0;n<f;)n=(n+t)*o,r*=o,t=j.g(1);for(;a<=n;)n/=2,r/=2,t>>>=1;return(n+t)/r}var m=[],v=p(function n(r,t){var e,o=[],i=typeof r;if(t&&"object"==i)for(e in r)try{o.push(n(r[e],t-1))}catch(n){}return o.length?o:"string"==i?r:r+"\0"}((s=1==s?{entropy:!0}:s||{}).entropy?[c,g(r)]:null==c?function(){try{var t;return e&&(t=e.randomBytes)?t=t(o):(t=new Uint8Array(o),(n.crypto||n.msCrypto).getRandomValues(t)),g(t)}catch(t){var i=n.navigator,u=i&&i.plugins;return[+new Date,n,u,n.screen,g(r)]}}():c,3),m),j=new l(m);return h.int32=function(){return 0|j.g(4)},h.quick=function(){return j.g(4)/4294967296},h.double=h,p(g(j.S),r),(s.pass||y||function(n,r,e,o){return o&&(o.S&&d(o,j),n.state=function(){return d(j,{})}),e?(t[i]=n,r):n})(h,v,"global"in s?s.global:this==t,s.state)}function l(n){var r,t=n.length,e=this,i=0,u=e.i=e.j=0,f=e.S=[];for(t||(n=[t++]);i<o;)f[i]=i++;for(i=0;i<o;i++)f[i]=f[u=c&u+n[i%t]+(r=f[i])],f[u]=r;(e.g=function(n){for(var r,t=0,i=e.i,u=e.j,f=e.S;n--;)r=f[i=c&i+1],t=t*o+f[c&(f[i]=f[u=c&u+r])+(f[u]=r)];return e.i=i,e.j=u,t})(o)}function d(n,r){return r.i=n.i,r.j=n.j,r.S=n.S.slice(),r}function p(n,r){for(var t,e=n+"",o=0;o<e.length;)r[c&o]=c&(t^=19*r[c&o])+e.charCodeAt(o++);return g(r)}function g(n){return String.fromCharCode.apply(0,n)}if(p(t.random(),r),"object"==typeof module&&module.exports){module.exports=s;try{e=require("crypto")}catch(s){}}else"function"==typeof define&&define.amd?define((function(){return s})):t.seedrandom=s}("undefined"!=typeof self?self:this,[],Math);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
